{"issue_number": 1454, "issue_title": "[FEATURE]: Add support of dynamic field", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nMilvus supports dynamic field functionality.\nUsers can insert dynamic fields in each row of data through a row-style interface.\nfields = [\n    FieldSchema(name=\"pk\", dtype=DataType.VARCHAR, is_primary=True, auto_id=False, max_length=100),\n    FieldSchema(name=\"random\", dtype=DataType.DOUBLE),\n    FieldSchema(name=\"embeddings\", dtype=DataType.FLOAT_VECTOR, dim=dim)\n]\n\nschema = CollectionSchema(fields, \"hello_milvus is the simplest demo to introduce the APIs\", enable_dynamic_field=True)\n\nprint(fmt.format(\"Create collection `hello_milvus`\"))\nhello_milvus = Collection(\"hello_milvus\", schema, consistency_level=\"Strong\")\n\n################################################################################\n# 3. insert data\nhello_milvus2 = Collection(\"hello_milvus\")\nprint(fmt.format(\"Start inserting entities\"))\nrng = np.random.default_rng(seed=19530)\n\nrows = [\n        {\"pk\": \"1\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"a\": 1},\n        {\"pk\": \"2\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"b\": 1},\n        {\"pk\": \"3\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"c\": 1},\n        {\"pk\": \"4\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"d\": 1},\n        {\"pk\": \"5\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"e\": 1},\n        {\"pk\": \"6\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"f\": 1},\n        ]\n\ninsert_result = hello_milvus.insert(rows)\n\nUsers can apply expression filtering to dynamic fields in the same manner as they would for fields specified in the schema.\nexpr = f'pk in [\"1\" , \"2\"] || g == 1'\n\nprint(fmt.format(f\"Start query with expr `{expr}`\"))\nresult = hello_milvus.query(expr=expr, output_fields=[\"random\", \"a\", \"g\"])\n\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-05-24", "closed_at": "2023-05-29", "labels": [], "State": "closed", "Author": "czs007"}
{"issue_number": 1450, "issue_title": "[Bug]: Failed to get the same collection even passed the same schema", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error reported while I run a script twice:\nTraceback (most recent call last):\n  File \"/home/yah01/src/milvus/test.py\", line 20, in <module>\n    collection = Collection(\"test_search_collection_multiple_json_0\", schema=schema)\n  File \"/home/yah01/miniconda3/lib/python3.10/site-packages/pymilvus/orm/collection.py\", line 110, in __init__\n    raise SchemaNotReadyException(message=ExceptionsMessage.SchemaInconsistent)\npymilvus.exceptions.SchemaNotReadyException: <SchemaNotReadyException: (code=1, message=The collection already exist, but the schema is not the same as the schema passed in.)>\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-05-22", "closed_at": "2023-05-25", "labels": [], "State": "closed", "Author": "yah01"}
{"issue_number": 1429, "issue_title": "[QUESTION]: Support for rollback and atomic set of ops like 2PC", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nIs there a way to get atomic operations with rollback and commit in milvus similar to what MySQL has?\nSupport I want to do two operations: 1 and 2. Op 1 inserts data into a milvus collection while Op 2 does something that has a chance of failing such as writing data to another database or a faulty runtime operation i.e. x=1/0.\nIs there a way I can rollback the initial milvus insert operation so that both operations 1 and 2 must succeed or both must fail similar to what is achieved in a 2 Phase Commit (2PC) protocols?\nIdeally, I would like to do this with proposed operations such as the milvus.commit() and milvus rollback() and not use a delete operation in the exception handling section.\nmilvus = Milvus(host='localhost', port='19530')\ntry:\n    # operation 1\n    # Insert data into Milvus\n    milvus.insert(collection_name='mycollection', records=data)\n\n    # operation 2\n    # do something else that has a chance of failing\n    # i.e. insert metadata into another database or a failing operation\n    x = 1/0 # op that will fail\n\n    # Commit the milvus transaction\n    milvus.commit()\nexcept Exception as e:\n    # Roll back the milvus transactions so that both ops must succeed or fail\n    milvus.rollback()\nAnything else?\nNo response", "created_at": "2023-05-12", "closed_at": "2023-05-17", "labels": [], "State": "closed", "Author": "SamSamhuns"}
{"issue_number": 1419, "issue_title": "[Bug]: pymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=collection 441007166976627815 has not been loaded to memory or load failed)>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nFile \"/home/yangs/Image_Retrieval/src/retrievals/milvus_retrieval.py\", line 101, in sim_retrieve\ncollection.load()\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/orm/collection.py\", line 366, in load\nconn.load_collection(self._name, replica_number=replica_number, timeout=timeout, **kwargs)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 109, in handler\nraise e\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 105, in handler\nreturn func(*args, **kwargs)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 136, in handler\nret = func(self, *args, **kwargs)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 85, in handler\nraise e\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 50, in handler\nreturn func(self, *args, **kwargs)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/client/grpc_handler.py\", line 675, in load_collection\nself.wait_for_loading_collection(collection_name, timeout)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 109, in handler\nraise e\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 105, in handler\nreturn func(*args, **kwargs)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 136, in handler\nret = func(self, *args, **kwargs)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 85, in handler\nraise e\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 50, in handler\nreturn func(self, *args, **kwargs)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/client/grpc_handler.py\", line 693, in wait_for_loading_collection\nprogress = self.get_loading_progress(collection_name, timeout=timeout)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 109, in handler\nraise e\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 105, in handler\nreturn func(*args, **kwargs)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 136, in handler\nret = func(self, *args, **kwargs)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 85, in handler\nraise e\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 50, in handler\nreturn func(self, *args, **kwargs)\nFile \"/root/anaconda3/lib/python3.9/site-packages/pymilvus/client/grpc_handler.py\", line 760, in get_loading_progress\nraise MilvusException(response.status.error_code, response.status.reason)\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=collection 441007166976627815 has not been loaded to memory or load failed)>\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\ncollection.load()\nEnvironment details\n- Hardware/Softward conditions (CPU):\n- Method of installation Docker:\n- Milvus version 2.2.3:\n- Milvus configuration (Settings you made in `server_config.yaml`):\n              total        used        free      shared  buff/cache   available\nMem:      594130088     6963932   504029704      127352    83136452   584183796\nSwap:       4194300       17928     4176372\nAnything else?\nNo response", "created_at": "2023-05-09", "closed_at": null, "labels": [], "State": "open", "Author": "AI-Candy-Yang"}
{"issue_number": 1416, "issue_title": "[Bug]: config.ini doesn't work for some passwords", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I update the config.ini using some specific password format, the python code throws an exception.\n\nThis only happens on some passwords, normal passwords work normally\n\n\nExpected Behavior\nThe Python SDK should accept any password string\nSteps/Code To Reproduce behavior\n[example]\nuri = https://in01-XXXXXX.aws-us-west-2.vectordb.zillizcloud.com:19543\nuser = u12345\npassword = YbRg3VE2%F%$F2PUNzR3\nsecure = True\nEnvironment details\n- Hardware/Software conditions (OS, CPU, GPU, Memory): Dev Container - mcr.microsoft.com/devcontainers/python:0-3.11\n- Method of installation (Docker, or from source): source code\n- Milvus version (v0.3.1, or v0.4.0): `git clone https://github.com/zilliztech/cloud-vectordb-examples.git`\n- Milvus configuration (Settings you made in `server_config.yaml`): nothing\nAnything else?\nNo response", "created_at": "2023-05-06", "closed_at": "2023-05-06", "labels": [], "State": "closed", "Author": "minhhieugma"}
{"issue_number": 1413, "issue_title": "[Bug]: ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\n   f1 = FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, description=\"customized primary id\")\n    f2 = FieldSchema(name=\"table_name\", dtype=DataType.VARCHAR, max_length=200, description=\"table_name\")\n    f3 = FieldSchema(name=\"table_intro\", dtype=DataType.FLOAT_VECTOR, dim=dim)\n    schema = CollectionSchema(fields=[f1, f2, f3], auto_id=False, description=\"table schema collection\")\n    print(f\"Creating collection: {collection_name}\")\n    collection = Collection(name=collection_name, schema=schema)\n    tables = [\"t0_member\", \"t0_customer\", \"t0_order\", \"t0_exchange_rate\"]\n    for t in tables:\n        v = get_embedding(t)\n        print(f\"type: {type(v)}    {type(v[0])}\")\n        collection.insert([ [tables.index(t)],  [t] ,  v])\n\n    # step3 - build index\n    index_params = {\"index_type\": \"AUTOINDEX\", \"metric_type\": \"L2\", \"params\": {}}\n    t0 = time.time()\n    print(\"Building AutoIndex...\")\n    collection.create_index(field_name=f2.name, index_params=index_params)\n    t1 = time.time()\n    print(f\"Build index succeed in {round(t1-t0, 4)} seconds!\")\n\nWhen I use the get_embedding method of openai to calculate the vector, and then insert the floatvector type field into the collection, the data type is judged by type() to be list[float]\nBut when the data is inserted into the collection, the error type does not match, and it is recognized as double\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Python version v3.10\n- Milvus version v2.2.8\nAnything else?\nNo response", "created_at": "2023-05-05", "closed_at": null, "labels": [], "State": "open", "Author": "wayne-data"}
{"issue_number": 1411, "issue_title": "[FEATURE]:  Remove unnecessary index params check in client.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nNo response\nDescribe the solution you'd like\nClient remove the check logic of index param when create index since server will check it.\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-05-04", "closed_at": "2023-05-09", "labels": [], "State": "closed", "Author": "czs007"}
{"issue_number": 1403, "issue_title": "[Bug]: Partition in orm is buggy", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\n #1392\n milvus-io/milvus#23311\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-04-27", "closed_at": "2023-04-27", "labels": ["kind/bug"], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 1399, "issue_title": "[Bug]: Error when using utility.do_bulk_insert(): The specified key does not exist", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nHi, team!\nI am trying to insert bulk data to the Milvus cluster.\nI have followed the example below, to use do_bulk_insert(), instead of bulk_load().\nhttps://github.com/milvus-io/pymilvus/blob/2.2/examples/example_bulkinsert.py\nbut I got this error.\n=========================================================================================================\n<Bulk insert state:\n    - taskID          : 440218075474745262,\n    - state           : Failed,\n    - row_count       : 0,\n    - infos           : {'files': '/tmp/milvus_bulkinsert/rows_0.json', 'collection': 'demo_bulk_insert', 'partition': 'part_1', 'failed_reason': \"failed to get file size of '/tmp/milvus_bulkinsert/rows_0.json', error:The specified key does not exist.\", 'progress_percent': '0'},\n    - id_ranges       : [],\n    - create_ts       : 2023-04-27 01:53:58\n>\nThe task 440218075474745262 failed, reason: failed to get file size of '/tmp/milvus_bulkinsert/rows_0.json', error:The specified key does not exist.\n0 of 1  tasks have successfully parsed all data files and data already persisted\n=========================================================================================================\n\nExpected Behavior\nThe json file successfully inserted to the Milvus cluster.\nSteps/Code To Reproduce behavior\nYou can use exactly same code here.\nhttps://github.com/milvus-io/pymilvus/blob/2.2/examples/example_bulkinsert.py\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\nmacOS Big Sur 11.7.4\nIntel Core i7\n16GB Mem\n- Method of installation (Docker, or from source):\nhelm for k8s\n- Milvus version (v0.3.1, or v0.4.0):\nv2.2.x\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-04-26", "closed_at": "2023-04-27", "labels": ["kind/bug"], "State": "closed", "Author": "chlee1016"}
{"issue_number": 1395, "issue_title": "[Bug]: get_server_type() will always be milvus", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ndef get_server_type(host):\n    protocol, hostname = get_protocol_and_domain(host)\n    if protocol != \"https\":\n        return \"milvus\"\n    splits = hostname.split('.')\n    len_of_splits = len(splits)\n    if len_of_splits >= 2 and \\\n            splits[len_of_splits - 2].lower() == \"zillizcloud\" and \\\n            splits[len_of_splits - 1].lower() == \"com\":\n        return \"zilliz\"\n    return \"milvus\"\nGet server type will always respond with \"milvus\". Since address is only the ip:host, the function get_protocol_and_domain will always return (ip:host), None respectively. Meaning the protocol will always not equal \"https\".\nWe need a server side call that can make sure that the server type is correct.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-04-25", "closed_at": "2023-04-28", "labels": ["kind/bug"], "State": "closed", "Author": "filip-halt"}
{"issue_number": 1393, "issue_title": "[Bug]: Incorrectly sized float vector has error message for binary vector", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-04-25", "closed_at": "2023-04-28", "labels": ["kind/bug"], "State": "closed", "Author": "filip-halt"}
{"issue_number": 1392, "issue_title": "[Bug]: collection.parition.insert(data) throws \"AttributeError: 'Partition' object has no attribute '_schema_dict'\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\n\ncollection.insert(data=data,partition=partition_name) work\ncollection.partiton(partition_name).insert(data) not work\nthrows:\nAttributeError: 'Partition' object has no attribute '_schema_dict'\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-04-24", "closed_at": "2023-04-27", "labels": [], "State": "closed", "Author": "wayblink"}
{"issue_number": 1553, "issue_title": "[QUESTION]: Is it possible to edit a metadata field ?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nIs it possible to edit a metadata field ? i.e.,\nSome of my entities did not have all the metadata fields completed at the time of insertion. However, now I can complete/edit them using a boolean expression. Is this possible?\nIf not, what would be the viable methodology?\nSomething like this?\n\nGet the IDs of all the entities in the expression,\nModify/edit the copy of them,\nre-upload edited entities (with new IDs),\nFinally delete the original IDs/entities.\n\nMany thanks for considering my request.\nAnything else?\nNo response", "created_at": "2023-06-22", "closed_at": "2023-07-25", "labels": [], "State": "closed", "Author": "AguirreNicolas"}
{"issue_number": 1545, "issue_title": "[Bug]: Violation of primary key", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nIn the schema, I have a field as a primary key. I have inserted data into this collection violating the primary key, but it doesn't show any error or say that data can't be inserted because it violates.\nExpected Behavior\nWhen data is inserted into a collection violating the primary key, it should not get inserted. Instead, it should show an error regarding the same.\nSteps/Code To Reproduce behavior\n1. A simple schema with fields as id (INT64), name (VARCHAR, len=64).\n2. id is the primary key.\n3. Create a collection and insert data having multiple tuples with same id.\nEnvironment details\n- Method of installation: Docker standalone\n- Milvus version: v2.2.8\nAnything else?\nNo response", "created_at": "2023-06-16", "closed_at": null, "labels": [], "State": "open", "Author": "hit2024"}
{"issue_number": 1544, "issue_title": "[Bug]: Username and password errors occurred in MilvusClient. describe_collection", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I access zilliz cloud with milvusclient\uff0cUsername and password errors occurred in MilvusClient. describe_collection\u3002\nFollow the following method\uff1ahttps://docs.zilliz.com/reference/describe_collection\npymilvus\uff1a2.2.11\nI make sure the username and password were correct\u3002\nmy code is\uff1a\n`from pymilvus import MilvusClient\nuri = 'https://in01-355ba64c1753e43.aws-us-west-2.vectordb.zillizcloud.com:19533'\ntoken = 'db_admin:****'\nclient = MilvusClient(uri, token)\nclient.describe_collection(collection_name='medium_articles')`\nExpected Behavior\nsuccess to get the result of describe_collection.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nerror info is:\n`RPC error: [__internal_register], <MilvusException: (code=1, message=<_InactiveRpcError of RPC that terminated with:\nstatus = StatusCode.UNKNOWN\ndetails = \"auth check failure, please check username and password are correct\"\ndebug_error_string = \"UNKNOWN:Error received from peer ipv4:54.69.43.77:19533 {created_time:\"2023-06-16T16:38:01.806097+08:00\", grpc_status:2, grpc_message:\"auth check failure, please check username and password are correct\"}\"\n\n)>, <Time:{'RPC start': '2023-06-16 16:38:01.262009', 'RPC error': '2023-06-16 16:38:01.809624'}>\nFailed to create new connection using: 668a0432c4de4e7dbfa6dff551237ed7\nTraceback (most recent call last):\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/decorators.py\", line 50, in handler\nreturn func(self, *args, **kwargs)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/decorators.py\", line 169, in handler\nraise e\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/decorators.py\", line 163, in handler\nreturn func(*args, **kwargs)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/client/grpc_handler.py\", line 1359, in __internal_register\nresponse = self._stub.Connect(request=req)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/grpc/_interceptor.py\", line 247, in call\nresponse, ignored_call = self._with_call(request,\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/grpc/_interceptor.py\", line 290, in _with_call\nreturn call.result(), call\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/grpc/_channel.py\", line 379, in result\nraise self\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/grpc/_interceptor.py\", line 274, in continuation\nresponse, call = self._thunk(new_method).with_call(\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/grpc/_channel.py\", line 1043, in with_call\nreturn _end_unary_response_blocking(state, call, True, None)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/grpc/_channel.py\", line 910, in _end_unary_response_blocking\nraise _InactiveRpcError(state)  # pytype: disable=not-instantiable\ngrpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\nstatus = StatusCode.UNKNOWN\ndetails = \"auth check failure, please check username and password are correct\"\ndebug_error_string = \"UNKNOWN:Error received from peer ipv4:54.69.43.77:19533 {created_time:\"2023-06-16T16:38:01.806097+08:00\", grpc_status:2, grpc_message:\"auth check failure, please check username and password are correct\"}\"\n\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/client/grpc_handler.py\", line 120, in _wait_for_channel_ready\nself._setup_identifier_interceptor(self._user)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/client/grpc_handler.py\", line 220, in _setup_identifier_interceptor\nself._identifier = self.__internal_register(user, host)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/decorators.py\", line 109, in handler\nraise e\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/decorators.py\", line 105, in handler\nreturn func(*args, **kwargs)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/decorators.py\", line 136, in handler\nret = func(self, *args, **kwargs)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/decorators.py\", line 56, in handler\nraise MilvusException(message=str(e)) from e\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=<_InactiveRpcError of RPC that terminated with:\nstatus = StatusCode.UNKNOWN\ndetails = \"auth check failure, please check username and password are correct\"\ndebug_error_string = \"UNKNOWN:Error received from peer ipv4:54.69.43.77:19533 {created_time:\"2023-06-16T16:38:01.806097+08:00\", grpc_status:2, grpc_message:\"auth check failure, please check username and password are correct\"}\"\n\n)>\n\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\nFile \"1.py\", line 5, in \nclient = MilvusClient(uri, token)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/milvus_client/milvus_client.py\", line 56, in init\nself._using = self._create_connection(uri, user, password, db_name, token, **kwargs)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/milvus_client/milvus_client.py\", line 523, in _create_connection\nraise ex\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/milvus_client/milvus_client.py\", line 518, in _create_connection\nconnections.connect(using, user, password, db_name, token, uri=uri, **kwargs)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/orm/connections.py\", line 349, in connect\nconnect_milvus(**kwargs, user=user, password=password, token=token, db_name=db_name)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/orm/connections.py\", line 282, in connect_milvus\ngh._wait_for_channel_ready(timeout=timeout)\nFile \"/Users/qixuan02/Library/Python/3.8/lib/python/site-packages/pymilvus/client/grpc_handler.py\", line 123, in _wait_for_channel_ready\nraise MilvusException(Status.CONNECT_FAILED,\npymilvus.exceptions.MilvusException: <MilvusException: (code=2, message=Fail connecting to server on in01-355ba64c1753e43.aws-us-west-2.vectordb.zillizcloud.com:19533. Timeout)>`", "created_at": "2023-06-16", "closed_at": "2023-06-25", "labels": [], "State": "closed", "Author": "qixuan0212"}
{"issue_number": 1543, "issue_title": "[Bug]: pymilvus shall behave the same as the other sdk when trying to creating an existing collection", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen trying to create a collection with an existing collection name, starter api returns an error with the other sdks, such as nodejs and restful, did not return errors\nExpected Behavior\nall the starter api shall keep the same behavior\nSteps/Code To Reproduce behavior\nres = client.create_collection(\n    collection_name=\"medium_articles_2020\",\n    dimension=768\n)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): 2.2.11\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-16", "closed_at": "2023-06-26", "labels": [], "State": "closed", "Author": "yanliang567"}
{"issue_number": 1540, "issue_title": "[Bug]: the error msg is not specific when trying to connect a uri without https://", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen trying to connect milvus with an uir without https://, e.g.\nuri = in01-8c1c147f9d4bc8f.aws-us-west-2.vectordb-uat3.zillizcloud.com:19531\nit returns\npymilvus.exceptions.ConnectionConfigException: <ConnectionConfigException: (code=1, message=Illegal uri: [in01-8c1c147f9d4bc8f.aws-us-west-2.vectordb-uat3.zillizcloud.com:19531], expected form 'https://user:pwd@example.com:12345')>\nwhich is not easy for user to know how to correct, it indicates that user:pwd is requried, or port is required.\nExpected Behavior\nusers shall understand the msg, and know how to fix it quickly\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): milvus 2.2.10 with pymilvus 2.2.11\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-16", "closed_at": "2023-10-27", "labels": [], "State": "closed", "Author": "yanliang567"}
{"issue_number": 1538, "issue_title": "[QUESTION]: Can I ignore a dependency resolver error returned by pip install command?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nUsing Python 3.10.11\nThis is my requirements.txt content:\n\n`\nfarm-haystack[all]==1.17.1\nFlask-Cors\nipywidgets\njupyter_client\nlxml==4.9.2\nmarkdownify==0.11.6\nopenai`\n\nOnce I install requirements, I run this in command line:\npip install -e \"git+https://github.com/deepset-ai/haystack-extras.git#egg=milvus_documentstore&subdirectory=stores/milvus-documentstore\" \nAt the end of the run I am getting this output:\n`\n\nSuccessfully built milvus_documentstore grpcio\nInstalling collected packages: ujson, protobuf, marshmallow, grpcio, environs, pymilvus, milvus_documentstore\nAttempting uninstall: protobuf\nFound existing installation: protobuf 3.19.6\nUninstalling protobuf-3.19.6:\nSuccessfully uninstalled protobuf-3.19.6\nAttempting uninstall: grpcio\nFound existing installation: grpcio 1.43.0\nUninstalling grpcio-1.43.0:\nSuccessfully uninstalled grpcio-1.43.0\nERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\nonnx 1.12.0 requires protobuf<=3.20.1,>=3.12.2, but you have protobuf 3.20.2 which is incompatible.\nray 1.13.0 requires grpcio<=1.43.0,>=1.28.1, but you have grpcio 1.53.0 which is incompatible.\ntensorflow 2.11.1 requires protobuf<3.20,>=3.9.2, but you have protobuf 3.20.2 which is incompatible.\nSuccessfully installed environs-9.5.0 grpcio-1.53.0 marshmallow-3.19.0 milvus_documentstore-0.0.1 protobuf-3.20.2 pymilvus-2.2.11 ujson-5.8.0`\n\nCan this Error message be ignored?  I am working on a basic QA system using DPR.\nThanks\nAnything else?\nNo response", "created_at": "2023-06-15", "closed_at": null, "labels": [], "State": "open", "Author": "gerardorosiles"}
{"issue_number": 1535, "issue_title": "[Bug]: MilvusClient raise PrimaryKeyException when create_collection", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen i use MilvusClient to create a collection:\nclient.create_collection(\"hello\", 768)\ni got a python exception:\npymilvus.exceptions.PrimaryKeyException: <PrimaryKeyException: (code=1, message=Primary field must in dataframe.)>\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-14", "closed_at": "2023-06-15", "labels": ["kind/bug"], "State": "closed", "Author": "czs007"}
{"issue_number": 1533, "issue_title": "[Bug]: Iterator params accepted is not consistent with search interface", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen try to open an SearchIterator without providing radius, SearchIterator failed and cannot be used\n\"\"\"\nTraceback (most recent call last):\nFile \"\", line 1, in \nFile \"/Users/zilliz/virtual-environment/milvus2/lib/python3.10/site-packages/pymilvus/orm/collection.py\", line 694, in search_iterator\niterator = SearchIterator(conn, self._name, data, anns_field, param, limit, expr, partition_names,\nFile \"/Users/zilliz/virtual-environment/milvus2/lib/python3.10/site-packages/pymilvus/orm/iterator.py\", line 117, in init\nself.__check_radius()\nFile \"/Users/zilliz/virtual-environment/milvus2/lib/python3.10/site-packages/pymilvus/orm/iterator.py\", line 132, in __check_radius\nif self._param[PARAMS][RADIUS] is None:\nKeyError: 'params'\n\"\"\"\nExpected Behavior\nSearchIterator can be used normally and return correct result as expected\nSteps/Code To Reproduce behavior\nfrom pymilvus import CollectionSchema, FieldSchema, Collection, connections, DataType, Partition, utility\nimport numpy as np\nimport random\nconnections.connect()\n\ndim = 8\nfields = [\n    FieldSchema(name=\"pk\", dtype=DataType.INT64, is_primary=True, description='pk'),\n    FieldSchema(name=\"int64\", dtype=DataType.INT64),\n    FieldSchema(name=\"float_vector\", dtype=DataType.FLOAT_VECTOR, dim=dim)\n]\nschema = CollectionSchema(fields=fields)\ncollection = Collection(\"test_search_iterator\", schema=schema)\n# utility.drop_collection('test_search_iterator')\n\nnb = 1000\nvectors = [[random.random() for _ in range(dim)] for _ in range(nb)]\ndata = [\n    [i for i in range(nb)],\n    [i for i in range(nb)],\n    vectors\n]\ncollection.insert(data)\n\ncollection.create_index(\"float_vector\", {\"metric_type\": \"L2\"})\ncollection.load()\n\nlimit = 5\nexpression = \"5 <= int64 < 995\"\nsearch_params = {\"metric_type\": \"L2\"}\ncollection.search(vectors[:1], \"float_vector\", search_params, limit, output_fields=['int64'], expr=expression)\nres = collection.search_iterator(vectors[:1], \"float_vector\", search_params, limit,\n                                 output_fields=['int64'], expr=expression)\n\n\ncollection.drop()\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-14", "closed_at": null, "labels": [], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 1531, "issue_title": "[QUESTION]: Does pymilvus follow semver?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI wonder how exactly versioning of pymilvus and milvus work?\nRecently we got problem in pipeline:\nWe using standalone docker image of milvus milvusdb/milvus:v2.2.5. Pymilvus is installed from requirements.txt pymilvus~=2.2.4. Pymilvus 2.2.4 worked fine but 2.2.9 started to give timeout error with message pymilvus.decorators:decorators.py:108 RPC error: [__internal_register], <MilvusException: (code=1, message=this version of sdk is incompatible with server, please downgrade your sdk or upgrade your server )>, <Time:{'RPC start': '2023-06-13 02:56:54.805120', 'RPC error': '2023-06-13 02:56:54.905498'}>. We rarely update environment where pymilvus is installed, so we have probably jumped form 2.2.4 to 2.2.9 skipping versions between.\nAnything else?\nNo response", "created_at": "2023-06-13", "closed_at": null, "labels": [], "State": "open", "Author": "Ibax1"}
{"issue_number": 1530, "issue_title": "[QUESTION]: Inserting data into a collection", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nIs there any way to keep inserting data into a collection multiple times (i.e., appending each time) rather than inserting all to once?\nCurrently, collection.insert(data) does the job of inserting data into the collection (incase there is some existing data in that collection, it gets overwritten).\nAnything else?\nNo response", "created_at": "2023-06-12", "closed_at": "2023-06-12", "labels": [], "State": "closed", "Author": "hit2024"}
{"issue_number": 1529, "issue_title": "[Bug]: ImportError: cannot import name 'db' from 'pymilvus'", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nin this page https://milvus.io/docs/manage_databases.md#Manage-Databases, when i run the example to Create database, i will get :\nTraceback (most recent call last):\n  File \"/mnt/d/xizhi_code/project/project_026-\u5907\u8003\u8bfe\u76f8\u4f3c\u9898\u5339\u914d\u9879\u76ee/milvus/study/\u7ba1\u7406\u6570\u636e\u5e93.py\", line 12, in <module>\n    from pymilvus import connections, db\nImportError: cannot import name 'db' from 'pymilvus' (/home/lee/anaconda3/envs/milvus/lib/python3.9/site-packages/pymilvus/__init__.py)\n\ni get this BUG from 2.1.0 or 2.2.0 or 2.2.8 or 2.3.0b1 pymilvus.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nfrom pymilvus import connections, db\nfrom constant import URL, GRPC_PORT, RESTFUL_PORT\n\nconn = connections.connect(host=URL, port=GRPC_PORT)\n\ndatabase = db.create_database(\"books\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n  2.1.0\n  2.2.0\n  2.2.8\n  2.2.3b1\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-11", "closed_at": null, "labels": [], "State": "open", "Author": "lixianglong1205"}
{"issue_number": 1525, "issue_title": "[Bug]: [milvus_client][milvus] The error message could be better if milvus_client.query lacks \"filter\" or \"limit\" parameters", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nParameter \"filter\" in milvus_client.query should not have default value:\nwhen typing milvus_client.query(\"binbin_milvus\"), it reports\nTypeError: query() missing 1 required positional argument: 'collection_name'\n\nand when typing \"milvus_client.query(collection_name=\"binbin_milvus\")\", it reports:\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.8/dist-packages/pymilvus/milvus_client/milvus_client.py\", line 277, in query\n    raise DataTypeNotMatchException(message=ExceptionsMessage.ExprType % type(filter))\npymilvus.exceptions.DataTypeNotMatchException: <DataTypeNotMatchException: (code=1, message=The type of expr must be string ,but <class 'NoneType'> is given.)>\n\nWhy it will report error as None is the default value.\nExpected Behavior\n\ndid not set default value for filter, then it could tell users there are 2 parameters are needed\n\nOR\n\nset a excutable default value for filter\n\nSteps/Code To Reproduce behavior\nOnly query with collection name, do not input value for parameter \"filter\"\n\nmilvus_client.query(\"binbin_milvus\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\npymilvus: 2.2.10.dev1\nmilvus: 2.2.0-20230607-02e3b06b", "created_at": "2023-06-08", "closed_at": null, "labels": [], "State": "open", "Author": "binbinlv"}
{"issue_number": 1524, "issue_title": "[QUESTION]: How should i use v2.2.9's new feature partition_key for search\uff1f", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI can't find a example for search using partition_key, How should i use v2.2.9's new feature partition_key for search\uff1f\nAnything else?\nNo response", "created_at": "2023-06-08", "closed_at": "2023-10-11", "labels": [], "State": "closed", "Author": "suparek"}
{"issue_number": 1522, "issue_title": "[Bug]: [milvus_client] The api \"milvus_client.describe_collection\" has no \"enable_dynamic_field\" values when setting enable_dynamic_field as False", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe api \"milvus_client.describe_collection\" has no \"enable_dynamic_field\" values when setting enable_dynamic_field as False\n>>>\n>>> milvus_client.create_collection(collection_name, dim, enable_dynamic_field=False)\n>>>\n>>> milvus_client.describe_collection(\"binbin_milvus\")\n{'auto_id': False, 'description': '', 'fields': [{'name': 'id', 'description': '', 'type': <DataType.INT64: 5>, 'is_primary': True, 'auto_id': False}, {'name': 'vector', 'description': '', 'type': <DataType.FLOAT_VECTOR: 101>, 'params': {'dim': 128}}]}\n>>>\n\nExpected Behavior\n>>> milvus_client.describe_collection(\"binbin_milvus\")\n{'auto_id': False, 'description': '', 'fields': [{'name': 'id', 'description': '', 'type': <DataType.INT64: 5>, 'is_primary': True, 'auto_id': False}, {'name': 'vector', 'description': '', 'type': <DataType.FLOAT_VECTOR: 101>, 'params': {'dim': 128}}], 'enable_dynamic_field': False}\n\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient\nmilvus_client = MilvusClient()\ndim = 256\ncollection_name = \"binbin_milvus\"\nmilvus_client.create_collection(collection_name, dim, enable_dynamic_field=False)\nmilvus_client.describe_collection(\"binbin_milvus\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-07", "closed_at": "2024-01-25", "labels": ["kind/bug"], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1519, "issue_title": "[Bug]: Documentation link broken 404 error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI try to access documentation using the link provided in readme but it leads me to 404 error page\nhttps://milvus.io/api-reference/pymilvus/v2.2.3/About.md\nExpected Behavior\nLoad Py Milvus documentation\nSteps/Code To Reproduce behavior\nClick on documentation link in readme file\nhttps://milvus.io/api-reference/pymilvus/v2.2.3/About.md\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-05", "closed_at": "2023-06-05", "labels": [], "State": "closed", "Author": "munish0838"}
{"issue_number": 1518, "issue_title": "[Bug]: pymilvus2.2.9\u65e0\u6cd5\u8fde\u63a5\u670d\u52a1\u7aef\uff0c\u63d0\u793atimeout", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nembeddings = OpenAIEmbeddings()\ncollection_name = \"LangChainCollection\"\nconnection_args = {\"host\": \"127.0.0.1\", \"port\": \"19530\"}\ndef add():\ndocument = DirectoryLoader('../', glob='docs/.', loader_cls=TextLoader,\nloader_kwargs={\"encoding\": \"utf-8\"}).load()\nsplitter = CharacterTextSplitter(chunk_size=500, chunk_overlap=0).split_documents(document)\nMilvus.from_documents(\nsplitter,\nembeddings,\ncollection_name=collection_name,\nconnection_args=connection_args,\n)\n\u5728pymilvus2.2.8\u8fde\u63a5\u6210\u529f\uff0c\u57282.2.9\u8fde\u63a5\u63d0\u793atiemout.\nattu\u8fde\u63a5\u662f\u6210\u529f\u5f97\nExpected Behavior\n\u8fde\u63a5\u6210\u529f\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-05", "closed_at": null, "labels": [], "State": "open", "Author": "gaye746560359"}
{"issue_number": 1506, "issue_title": "[Bug]: AttributeError: 'MilvusClient' object has no attribute 'num_partitions'", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I insert data into a collection, MilvusClient reports\nAttributeError: 'MilvusClient' object has no attribute 'num_partitions'\nSo I look into the source code and found num_partitions is not defined in MilvusClient\n\nHere in _create_collection is the only function mentions num_partitons . And I commented out  num_partitions=self.num_partitions,, It worked.\nExpected Behavior\nInsert the data into the collection.\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient\nimport numpy as np\n\ncollection_name = 'test'\nclient = MilvusClient(collection_name, vector_field='emb', overwrite=True)\n\ndatas = []\ncount = 10\nfor cur in range(count):\n\ttemp = {\n\t\t\"emb\": np.random.rand(384)\n\t}\n\tdatas.append(temp)\nclient.insert_data(datas)\nprint(client.num_entities())\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): \n- Method of installation (Docker, or from source): \n- Milvus version (v0.3.1, or v0.4.0): Milvus: 2.3.0beta1/Pymilvus: 2.4.0dev38\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-01", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Chiiizzzy"}
{"issue_number": 1505, "issue_title": "[Bug]: Incorrectly setting the default consistency level", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nOn line 121, the default ConsistencyLevel is not set to **kwargs, which causes the server to assume the default consistency level is 0, i.e., Strong.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-01", "closed_at": null, "labels": [], "State": "open", "Author": "czs007"}
{"issue_number": 1503, "issue_title": "[QUESTION]: Milvus queries get really slow for about one hour per day, at roughly the same time", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nMilvus is working just fine for our team, with the one exception being that around 1 p.m. every day, queries get insanely slow (like 15 minutes per query), and that slowness persists for about an hour before returning to normal.  Why does this happen, and is there some config we can set to fix this?  Thanks!\nAnything else?\nFYI we've been running Milvus as a standalone service", "created_at": "2023-05-31", "closed_at": null, "labels": [], "State": "open", "Author": "JamesDeAntonis"}
{"issue_number": 1500, "issue_title": "[QUESTION]: Current workaround for dynamic partition load/release?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nWe're having an issue loading partitions into memory when another partition from the collection is already loaded (MilvusException asking to release the partitions first) The docs screenshot shows that dynamic partition load/release isn't supported yet, but from the Milvus roadmap, I see version 2.3 of Milvus is expected to support it.\nIn our use case, we store embeddings in different partitions based on the text embedding source type restricted to a user. Each user searches in their specific partition, but if another user appears, we have to unload and reload the partition for that new user, causing significant slowdowns without dynamic load/release.\nOne solution we thought of is adding the text embedding type as an attribute in the Milvus collection entity and running a hybrid search constrained by the type. However, this means loading the entire collection, even if some types aren't frequently queried.\nDo you have any suggestions or workarounds before dynamic partition load/release is supported? Thank you.\n\nfrom pymilvus import connections, Collection\nfrom pymilvus import CollectionSchema, FieldSchema, DataType, utility\n\n\nCOLLECTION_NAME = \"milvus_test\"\nPARTITION_NAME = \"milvus_partition\"\n\nconnections.connect(alias=\"default\", host=\"127.0.0.1\", port=19530)\nfields = [\n    FieldSchema(name=\"id\", dtype=DataType.INT64,\n                descrition=\"ids\", is_primary=True, auto_id=True),\n    FieldSchema(name=\"embedding\", dtype=DataType.FLOAT_VECTOR,\n                descrition=\"embedding vectors\", dim=100)\n]\nschema = CollectionSchema(fields=fields)\nclient = Collection(name=COLLECTION_NAME, schema=schema)\nindex_params = {'metric_type': \"IP\", 'index_type': \"HNSW\", 'params': {\"M\": 8, \"efConstruction\": 64}}\nclient.create_index(\n    field_name=\"embedding\", index_params=index_params)\n\n# create partitions and load partition 1\nclient.create_partition(PARTITION_NAME)\nclient.load([PARTITION_NAME])\n\nclient.create_partition(PARTITION_NAME + \"2\")\n# Error here trying to load partition 2 from collection:\n#    pymilvus.exceptions.MilvusException:\n#    <MilvusException: (code=5, message=failed to load partitions,\n#    err=some partitions [441740524454413597] of collection 441740524454413534 has been loaded into QueryNode,\n#    please release partitions firstly[LoadParameterMismatched])>\nclient.load([PARTITION_NAME + \"2\"])\nAnything else?\nNo response", "created_at": "2023-05-31", "closed_at": "2023-09-27", "labels": [], "State": "closed", "Author": "SamSamhuns"}
{"issue_number": 1492, "issue_title": "[Bug]: Documentation link giving 404 error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen accessing the documentation link in readme (https://milvus.io/api-reference/pymilvus/v2.2.3/About.md) I'm getting 404 page on milvus. Was the link updated?\nExpected Behavior\nWhen I click this link (https://milvus.io/api-reference/pymilvus/v2.2.3/About.md) I should see the documentation.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Web\nAnything else?\n", "created_at": "2023-05-30", "closed_at": null, "labels": [], "State": "open", "Author": "arif599"}
{"issue_number": 1489, "issue_title": "[Bug]: Failed to insert binary vector in row style", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nRT\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-05-30", "closed_at": null, "labels": [], "State": "open", "Author": "czs007"}
{"issue_number": 1476, "issue_title": "[FEATURE]: Disable anns_field check in pymilvus", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nwe want to enable users to perform searches without specifying the name of the anns_field.\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-05-29", "closed_at": null, "labels": [], "State": "open", "Author": "czs007"}
{"issue_number": 1464, "issue_title": "[FEATURE]: Set consistency_level in search/query request", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nIn our current implementation, we construct a guarantee_timestamp on the client side based on the consistency_level passed by the user in order to control different levels of consistency. It is our desire to include a consistency_level parameter in the request, allowing the server to calculate the final timestamp based on this parameter.\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-05-29", "closed_at": "2023-07-25", "labels": [], "State": "closed", "Author": "czs007"}
{"issue_number": 1463, "issue_title": "[Bug]: Search doesn't support vector field as output_fields", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen running the example in dynamic_field.py, a Milvus exception reports that Search doesn't support vector field as output_field.\nThe original code is\nfields = [\n    FieldSchema(name=\"pk\", dtype=DataType.VARCHAR, is_primary=True, auto_id=False, max_length=100),\n    FieldSchema(name=\"random\", dtype=DataType.DOUBLE),\n    FieldSchema(name=\"embeddings\", dtype=DataType.FLOAT_VECTOR, dim=dim)\n]\n\n...\n\nstart_time = time.time()\nresult = hello_milvus.search(vectors_to_search, \"embeddings\", search_params, limit=3, output_fields=[\"pk\", \"embeddings\"])\nend_time = time.time()\n...\n\nresult = hello_milvus.search(vectors_to_search, \"embeddings\", search_params, limit=3, output_fields=[\"pk\", \"embeddings\", \"$meta\"])\nThe exception reads\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=search doesn't support vector field as output_fields)>\nExpected Behavior\nAfter I removed the vector field from the output fields, everything goes fine.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-05-28", "closed_at": "2023-06-26", "labels": ["kind/question"], "State": "closed", "Author": "AnthonyTsu1984"}
{"issue_number": 1458, "issue_title": "[FEATURE]: Support logical partition keys", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nI would like to introduce another level of abstract, partition key.\nSo when user create a collection\nfrom pymilvus import CollectionSchema, FieldSchema, DataType\nbook_id = FieldSchema(\nname=\"book_id\",\ndtype=DataType.INT64,\nis_primary=True,\n)\nbook_name = FieldSchema(\nname=\"book_name\",\ndtype=DataType.VARCHAR,\nmax_length=200,\nis_partition_key=true,\n)\nbook_intro = FieldSchema(\nname=\"book_intro\",\ndtype=DataType.FLOAT_VECTOR,\ndim=2\n)\ndefault_schema = CollectionSchema(\nfields=[book_id, book_name, book_group, book_intro],\ndescription=\"Test book search\",\n)\n\ncollection = Collection(name=\"hello_milvus\", \nschema=default_schema, \nshards_num=1, \nnum_partitions=1024)\n\nSo you will see book group is the parititon key, and the collection will create 1024 partitions by default.\nWhen insert happens:\nhash(book_name)%1024 to decide which segment should be written into\nothers are exactly same as current insert path.\nWhen search:\nUser must specify a group of partition key when search (Performance may degrade if not specified)\nMilvus first pick the correct segment to work with\nThen do scalar filtering on the segment based on partition keys and other filter conditions.\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-05-25", "closed_at": "2023-05-29", "labels": [], "State": "closed", "Author": "xige-16"}
{"issue_number": 1454, "issue_title": "[FEATURE]: Add support of dynamic field", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nMilvus supports dynamic field functionality.\nUsers can insert dynamic fields in each row of data through a row-style interface.\nfields = [\n    FieldSchema(name=\"pk\", dtype=DataType.VARCHAR, is_primary=True, auto_id=False, max_length=100),\n    FieldSchema(name=\"random\", dtype=DataType.DOUBLE),\n    FieldSchema(name=\"embeddings\", dtype=DataType.FLOAT_VECTOR, dim=dim)\n]\n\nschema = CollectionSchema(fields, \"hello_milvus is the simplest demo to introduce the APIs\", enable_dynamic_field=True)\n\nprint(fmt.format(\"Create collection `hello_milvus`\"))\nhello_milvus = Collection(\"hello_milvus\", schema, consistency_level=\"Strong\")\n\n################################################################################\n# 3. insert data\nhello_milvus2 = Collection(\"hello_milvus\")\nprint(fmt.format(\"Start inserting entities\"))\nrng = np.random.default_rng(seed=19530)\n\nrows = [\n        {\"pk\": \"1\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"a\": 1},\n        {\"pk\": \"2\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"b\": 1},\n        {\"pk\": \"3\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"c\": 1},\n        {\"pk\": \"4\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"d\": 1},\n        {\"pk\": \"5\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"e\": 1},\n        {\"pk\": \"6\", \"random\": 1.0, \"embeddings\": rng.random((1, dim))[0], \"f\": 1},\n        ]\n\ninsert_result = hello_milvus.insert(rows)\n\nUsers can apply expression filtering to dynamic fields in the same manner as they would for fields specified in the schema.\nexpr = f'pk in [\"1\" , \"2\"] || g == 1'\n\nprint(fmt.format(f\"Start query with expr `{expr}`\"))\nresult = hello_milvus.query(expr=expr, output_fields=[\"random\", \"a\", \"g\"])\n\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-05-24", "closed_at": "2023-05-29", "labels": [], "State": "closed", "Author": "czs007"}
{"issue_number": 1610, "issue_title": "[FEATURE]: Support offset param in search(offset=xxx)", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nsee also: milvus-io/milvus#25587 (comment)\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-07-24", "closed_at": "2023-09-15", "labels": [], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 1601, "issue_title": "[Bug]: how can i use pymilvus release/load already exist collection?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nhow can i use pymilvus release/load already exist collection?\nthe example all is create a new collection and then release or load.\nExpected Behavior\ni can get the collection object and the release or load.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-07-18", "closed_at": "2023-07-25", "labels": [], "State": "closed", "Author": "yelusion2"}
{"issue_number": 1599, "issue_title": "[enhancement]: Increase the number of retry times", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nAt present, the default number of retry times is 10 and the max sleep duration is 60s.\nWe should to increase the retry times to 75 and diminish the max sleep duration to 3s. By doing so, we shall retain the total timeout period (about 210s) while vastly amplifying the number of retry times. The primary motive behind this modification is to significantly curtail the likelihood of encountering rate limits.\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-07-18", "closed_at": "2023-07-24", "labels": [], "State": "closed", "Author": "bigsheeper"}
{"issue_number": 1582, "issue_title": "[Bug]: this version of sdk is incompatible with server, please downgrade your sdk or upgrade your server", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nmilvusdb/milvus:v2.2.9 \u548c pymilvus==2.2.13 \u4e0d\u517c\u5bb9\n\nEN:  milvusdb/milvus:v2.2.9 is not compatible with pymilvus==2.2.13.\n\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=this version of sdk is incompatible with server, please downgrade your sdk or upgrade your server )>\n\u6709\u517c\u5bb9\u6027\u5217\u8868\u6216\u8005\u517c\u5bb9\u6027\u8bf4\u660e\u5417\uff1f\n\nEN: Is there a compatibility list or compatibility note?\n\nExpected Behavior\nhttps://github.com/milvus-io/pymilvus \u7684 README.md \u4e0a\u5199\u7684\u662f\u53ef\u517c\u5bb9\u7684\n\n\n\nMilvus version\nRecommended PyMilvus version\n\n\n\n\n1.0.*\n1.0.1\n\n\n1.1.*\n1.1.2\n\n\n2.0.*\n2.0.2\n\n\n2.1.*\n2.1.3\n\n\n2.2.*\n2.2.13\n\n\n\n\u4f46\u662f\u5b9e\u9645\u662f\u4e0d\u517c\u5bb9\u7684\nRPC error: [__internal_register], <MilvusException: (code=1, message=this version of sdk is incompatible with server, please downgrade your sdk or upgrade your server )>, <Time:{'RPC start': '2023-07-13 09:25:53.290675', 'RPC error': '2023-07-13 09:25:53.294019'}>\nTraceback (most recent call last):\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/decorators.py\", line 163, in handler\n    return func(*args, **kwargs)\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 1359, in __internal_register\n    response = self._stub.Connect(request=req)\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/grpc/_interceptor.py\", line 247, in __call__\n    response, ignored_call = self._with_call(request,\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/grpc/_interceptor.py\", line 290, in _with_call\n    return call.result(), call\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/grpc/_channel.py\", line 379, in result\n    raise self\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/grpc/_interceptor.py\", line 274, in continuation\n    response, call = self._thunk(new_method).with_call(\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/grpc/_channel.py\", line 1043, in with_call\n    return _end_unary_response_blocking(state, call, True, None)\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/grpc/_channel.py\", line 910, in _end_unary_response_blocking\n    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable\ngrpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\n        status = StatusCode.UNIMPLEMENTED\n        details = \"unknown method Connect for service milvus.proto.milvus.MilvusService\"\n        debug_error_string = \"UNKNOWN:Error received from peer  {grpc_message:\"unknown method Connect for service milvus.proto.milvus.MilvusService\", grpc_status:12, created_time:\"2023-07-13T09:25:53.292471+08:00\"}\"\n>\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 120, in _wait_for_channel_ready\n    self._setup_identifier_interceptor(self._user)\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 220, in _setup_identifier_interceptor\n    self._identifier = self.__internal_register(user, host)\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/decorators.py\", line 109, in handler\n    raise e\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/decorators.py\", line 105, in handler\n    return func(*args, **kwargs)\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/decorators.py\", line 136, in handler\n    ret = func(self, *args, **kwargs)\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/decorators.py\", line 85, in handler\n    raise e\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/decorators.py\", line 50, in handler\n    return func(self, *args, **kwargs)\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/decorators.py\", line 168, in handler\n    raise MilvusException(message=msg) from e\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=this version of sdk is incompatible with server, please downgrade your sdk or upgrade your server )>\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/ponponon/Desktop/code/work/vddb/svddb_api/api.py\", line 6, in <module>\n    from apps.blacklist import blacklist as app_blacklist\n  File \"/Users/ponponon/Desktop/code/work/vddb/svddb_api/apps/blacklist.py\", line 4, in <module>\n    from core.milvus.models import collection_blacklist\n  File \"/Users/ponponon/Desktop/code/work/vddb/svddb_api/core/milvus/models.py\", line 12, in <module>\n    connections.connect(\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/orm/connections.py\", line 349, in connect\n    connect_milvus(**kwargs, user=user, password=password, token=token, db_name=db_name)\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/orm/connections.py\", line 282, in connect_milvus\n    gh._wait_for_channel_ready(timeout=timeout)\n  File \"/Users/ponponon/.local/share/virtualenvs/svddb_api-eYxTeXFV/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 123, in _wait_for_channel_ready\n    raise MilvusException(Status.CONNECT_FAILED,\npymilvus.exceptions.MilvusException: <MilvusException: (code=2, message=Fail connecting to server on 192.168.38.233:19530. Timeout)>\n\n\nThe README.md at https://github.com/milvus-io/pymilvus says it's compatible with the\n\n\n\nMilvus version\nRecommended PyMilvus version\n\n\n\n\n1.0.*\n1.0.1\n\n\n1.0.1\n1.1.1\n\n\n2.0.*\n2.0.2\n\n\n2.1.*\n2.1.3\n\n\n2.2.*\n2.2.13\n\n\n\nBut it is actually incompatible\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): any\n- Method of installation (Docker, or from source): Docker\n- Milvus version (v0.3.1, or v0.4.0): 2.2.9\n- Milvus configuration (Settings you made in `server_config.yaml`): any\nAnything else?\ndocker-compose.yaml\nversion: \"3.5\"\n\nservices:\n  etcd:\n    container_name: milvus-etcd\n    image: quay.io/coreos/etcd:v3.5.5\n    restart: always\n    environment:\n      - ETCD_AUTO_COMPACTION_MODE=revision\n      - ETCD_AUTO_COMPACTION_RETENTION=1000\n      - ETCD_QUOTA_BACKEND_BYTES=4294967296\n      - ETCD_SNAPSHOT_COUNT=50000\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd\n    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd\n    logging:\n      driver: \"json-file\"\n      options:\n        max-file: \"1\"\n        max-size: \"50m\"\n\n  minio:\n    container_name: milvus-minio\n    image: minio/minio:RELEASE.2022-03-17T06-34-49Z\n    restart: always\n    environment:\n      MINIO_ACCESS_KEY: minioadmin\n      MINIO_SECRET_KEY: minioadmin\n    ports:\n      - \"9001:9001\"\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data\n    command: minio server /minio_data --console-address \":9001\"\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9000/minio/health/live\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n    logging:\n      driver: \"json-file\"\n      options:\n        max-file: \"1\"\n        max-size: \"50m\"\n\n  standalone:\n    container_name: milvus-standalone\n    image: milvusdb/milvus:v2.2.9\n    command: [\"milvus\", \"run\", \"standalone\"]\n    restart: always\n    environment:\n      ETCD_ENDPOINTS: etcd:2379\n      MINIO_ADDRESS: minio:9000\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus\n    ports:\n      - \"19530:19530\"\n      - \"9091:9091\"\n    depends_on:\n      - \"etcd\"\n      - \"minio\"\n    logging:\n      driver: \"json-file\"\n      options:\n        max-file: \"1\"\n        max-size: \"50m\"\n\n  zilliz_attu:\n    container_name: zilliz_attu\n    image: zilliz/attu:v2.2.5\n    restart: always\n    environment:\n      HOST_URL: http://0.0.0.0:8000\n      MILVUS_URL: milvus-standalone:19530\n    ports:\n      - \"8000:3000\"\n\nnetworks:\n  default:\n    name: milvus\n\nmilvus.yaml\n# Licensed to the LF AI & Data foundation under one\n# or more contributor license agreements. See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership. The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License. You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Related configuration of etcd, used to store Milvus metadata.\netcd:\n  endpoints:\n    - localhost:2379\n  rootPath: by-dev # The root path where data is stored in etcd\n  metaSubPath: meta # metaRootPath = rootPath + '/' + metaSubPath\n  kvSubPath: kv # kvRootPath = rootPath + '/' + kvSubPath\n  log:\n    # path is one of:\n    #  - \"default\" as os.Stderr,\n    #  - \"stderr\" as os.Stderr,\n    #  - \"stdout\" as os.Stdout,\n    #  - file path to append server logs to.\n    # please adjust in embedded Milvus: /tmp/milvus/logs/etcd.log\n    path: stdout\n    level: warn # Only supports debug, info, warn, error, panic, or fatal. Default 'info'.\n  use:\n    # please adjust in embedded Milvus: true\n    embed: false # Whether to enable embedded Etcd (an in-process EtcdServer).\n  data:\n    # Embedded Etcd only.\n    # please adjust in embedded Milvus: /tmp/milvus/etcdData/\n    dir: default.etcd\n  ssl:\n    enabled: false # Whether to support ETCD secure connection mode\n    tlsCert: /path/to/etcd-client.pem # path to your cert file\n    tlsKey: /path/to/etcd-client-key.pem # path to your key file\n    tlsCACert: /path/to/ca.pem # path to your CACert file\n    # TLS min version\n    # Optional values: 1.0, 1.1, 1.2, 1.3\u3002\n    # We recommend using version 1.2 and above\n    tlsMinVersion: 1.3\n\n# please adjust in embedded Milvus: /tmp/milvus/data/\nlocalStorage:\n  path: /var/lib/milvus/data/\n\n# Related configuration of minio, which is responsible for data persistence for Milvus.\nminio:\n  address: localhost # Address of MinIO/S3\n  port: 9000 # Port of MinIO/S3\n  accessKeyID: minioadmin # accessKeyID of MinIO/S3\n  secretAccessKey: minioadmin # MinIO/S3 encryption string\n  useSSL: false # Access to MinIO/S3 with SSL\n  bucketName: \"a-bucket\" # Bucket name in MinIO/S3\n  rootPath: files # The root path where the message is stored in MinIO/S3\n  # Whether to use AWS IAM role to access S3 instead of access/secret keys\n  # For more infomation, refer to https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\n  useIAM: false\n  # Custom endpoint for fetch IAM role credentials.\n  # Leave it empty if you want to use AWS default endpoint\n  iamEndpoint: \"\"\n\n# Milvus supports three MQ: rocksmq(based on RockDB), Pulsar and Kafka, which should be reserved in config what you use.\n# There is a note about enabling priority if we config multiple mq in this file\n# 1. standalone(local) mode: rockskmq(default) > Pulsar > Kafka\n# 2. cluster mode:  Pulsar(default) > Kafka (rocksmq is unsupported)\n\n# Related configuration of pulsar, used to manage Milvus logs of recent mutation operations, output streaming log, and provide log publish-subscribe services.\npulsar:\n  address: localhost # Address of pulsar\n  port: 6650 # Port of pulsar\n  webport: 80 # Web port of pulsar, if you connect direcly without proxy, should use 8080\n  maxMessageSize: 5242880 # 5 * 1024 * 1024 Bytes, Maximum size of each message in pulsar.\n\n# If you want to enable kafka, needs to comment the pulsar configs\n#kafka:\n#  brokerList: localhost1:9092,localhost2:9092,localhost3:9092\n#  saslUsername: username\n#  saslPassword: password\n#  saslMechanisms: PLAIN\n#  securityProtocol: SASL_SSL\n\nrocksmq:\n  # please adjust in embedded Milvus: /tmp/milvus/rdb_data\n  path: /var/lib/milvus/rdb_data # The path where the message is stored in rocksmq\n  rocksmqPageSize: 2147483648 # 2 GB, 2 * 1024 * 1024 * 1024 bytes, The size of each page of messages in rocksmq\n  retentionTimeInMinutes: 7200 # 5 days, 5 * 24 * 60 minutes, The retention time of the message in rocksmq.\n  retentionSizeInMB: 8192 # 8 GB, 8 * 1024 MB, The retention size of the message in rocksmq.\n  compactionInterval: 86400 # 1 day, trigger rocksdb compaction every day to remove deleted data\n  lrucacheratio: 0.06 # rocksdb cache memory ratio\n\n# Related configuration of rootCoord, used to handle data definition language (DDL) and data control language (DCL) requests\nrootCoord:\n  address: localhost\n  port: 53100\n\n  dmlChannelNum: 256 # The number of dml channels created at system startup\n  maxPartitionNum: 4096 # Maximum number of partitions in a collection\n  minSegmentSizeToEnableIndex: 1024 # It's a threshold. When the segment size is less than this value, the segment will not be indexed\n\n  # (in seconds) Duration after which an import task will expire (be killed). Default 900 seconds (15 minutes).\n  # Note: If default value is to be changed, change also the default in: internal/util/paramtable/component_param.go\n  importTaskExpiration: 900\n  # (in seconds) Milvus will keep the record of import tasks for at least `importTaskRetention` seconds. Default 86400\n  # seconds (24 hours).\n  # Note: If default value is to be changed, change also the default in: internal/util/paramtable/component_param.go\n  importTaskRetention: 86400\n  # (in seconds) Check an import task's segment loading state in queryNodes every `importSegmentStateCheckInterval`\n  # seconds. Default 10 seconds.\n  # Note: If default value is to be changed, change also the default in: internal/util/paramtable/component_param.go\n  importSegmentStateCheckInterval: 10\n  # (in seconds) Maximum time to wait for segments in a single import task to be loaded in queryNodes.\n  # Default 60 seconds (1 minute).\n  # Note: If default value is to be changed, change also the default in: internal/util/paramtable/component_param.go\n  importSegmentStateWaitLimit: 60\n  # (in seconds) Check the building status of a task's segments' indices every `importIndexCheckInterval` seconds.\n  # Default 10 seconds.\n  # Note: If default value is to be changed, change also the default in: internal/util/paramtable/component_param.go\n  importIndexCheckInterval: 10\n  # (in seconds) Maximum time to wait for indices to be built on a single import task's segments.\n  # Default 600 seconds (10 minutes).\n  # Note: If default value is to be changed, change also the default in: internal/util/paramtable/component_param.go\n  importIndexWaitLimit: 600\n\n# Related configuration of proxy, used to validate client requests and reduce the returned results.\nproxy:\n  port: 19530\n  internalPort: 19529\n  http:\n    enabled: true # Whether to enable the http server\n    debug_mode: false # Whether to enable http server debug mode\n\n  timeTickInterval: 200 # ms, the interval that proxy synchronize the time tick\n  msgStream:\n    timeTick:\n      bufSize: 512\n  maxNameLength: 255 # Maximum length of name for a collection or alias\n  maxFieldNum: 256 # Maximum number of fields in a collection\n  maxDimension: 32768 # Maximum dimension of a vector\n  maxShardNum: 256 # Maximum number of shards in a collection\n  maxTaskNum: 1024 # max task number of proxy task queue\n  # please adjust in embedded Milvus: false\n  ginLogging: true # Whether to produce gin logs.\n\n# Related configuration of queryCoord, used to manage topology and load balancing for the query nodes, and handoff from growing segments to sealed segments.\nqueryCoord:\n  address: localhost\n  port: 19531\n  autoHandoff: true # Enable auto handoff\n  autoBalance: true # Enable auto balance\n  overloadedMemoryThresholdPercentage: 90 # The threshold percentage that memory overload\n  balanceIntervalSeconds: 60\n  memoryUsageMaxDifferencePercentage: 30\n  maxTask: 2048\n\n# Related configuration of queryNode, used to run hybrid search between vector and scalar data.\nqueryNode:\n  cacheSize: 32 # GB, default 32 GB, `cacheSize` is the memory used for caching data for faster query. The `cacheSize` must be less than system memory size.\n  port: 21123\n  loadMemoryUsageFactor: 3 # The multiply factor of calculating the memory usage while loading segments\n\n  stats:\n    publishInterval: 1000 # Interval for querynode to report node information (milliseconds)\n  dataSync:\n    flowGraph:\n      maxQueueLength: 1024 # Maximum length of task queue in flowgraph\n      maxParallelism: 1024 # Maximum number of tasks executed in parallel in the flowgraph\n  # Segcore will divide a segment into multiple chunks to enbale small index\n  segcore:\n    chunkRows: 1024 # The number of vectors in a chunk.\n    # Note: we have disabled segment small index since @2022.05.12. So below related configurations won't work.\n    # We won't create small index for growing segments and search on these segments will directly use bruteforce scan.\n    smallIndex:\n      nlist: 128 # small index nlist, recommend to set sqrt(chunkRows), must smaller than chunkRows/8\n      nprobe: 16 # nprobe to search small index, based on your accuracy requirement, must smaller than nlist\n  cache:\n    enabled: true\n    memoryLimit: 2147483648 # 2 GB, 2 * 1024 *1024 *1024\n\n  scheduler:\n    receiveChanSize: 10240\n    unsolvedQueueSize: 10240\n    # maxReadConcurrentRatio is the concurrency ratio of read task (search task and query task).\n    # Max read concurrency would be the value of `runtime.NumCPU * maxReadConcurrentRatio`.\n    # It defaults to 2.0, which means max read concurrency would be the value of runtime.NumCPU * 2.\n    # Max read concurrency must greater than or equal to 1, and less than or equal to runtime.NumCPU * 100.\n    maxReadConcurrentRatio: 2.0 # (0, 100]\n    cpuRatio: 10.0 # ratio used to estimate read task cpu usage.\n\n  grouping:\n    enabled: true\n    maxNQ: 1000\n    topKMergeRatio: 10.0\n\nindexCoord:\n  address: localhost\n  port: 31000\n\n  gc:\n    interval: 600 # gc interval in seconds\n\nindexNode:\n  port: 21121\n\n  scheduler:\n    buildParallel: 1\n\ndataCoord:\n  address: localhost\n  port: 13333\n  enableCompaction: true # Enable data segment compression\n  enableGarbageCollection: true\n\n  segment:\n    maxSize: 512 # Maximum size of a segment in MB\n    sealProportion: 0.25 # It's the minimum proportion for a segment which can be sealed\n    assignmentExpiration: 2000 # The time of the assignment expiration in ms\n    maxLife: 86400 # The max lifetime of segment in seconds, 24*60*60\n\n  compaction:\n    enableAutoCompaction: true\n\n  gc:\n    interval: 3600 # gc interval in seconds\n    missingTolerance: 86400 # file meta missing tolerance duration in seconds, 60*24\n    dropTolerance: 86400 # file belongs to dropped entity tolerance duration in seconds, 60*24\n\ndataNode:\n  port: 21124\n\n  dataSync:\n    flowGraph:\n      maxQueueLength: 1024 # Maximum length of task queue in flowgraph\n      maxParallelism: 1024 # Maximum number of tasks executed in parallel in the flowgraph\n  flush:\n    # Max buffer size to flush for a single segment.\n    insertBufSize: 16777216 # Bytes, 16 MB\n\n# Configures the system log output.\nlog:\n  level: warn # Only supports debug, info, warn, error, panic, or fatal. Default 'info'.\n  file:\n    # please adjust in embedded Milvus: /tmp/milvus/logs\n    rootPath: \"\" # default to stdout, stderr\n    maxSize: 300 # MB\n    maxAge: 10 # Maximum time for log retention in day.\n    maxBackups: 20\n  format: text # text/json\n\ngrpc:\n  log:\n    level: WARNING\n\n  serverMaxRecvSize: 2147483647 # math.MaxInt32\n  serverMaxSendSize: 2147483647 # math.MaxInt32\n  clientMaxRecvSize: 104857600 # 100 MB, 100 * 1024 * 1024\n  clientMaxSendSize: 104857600 # 100 MB, 100 * 1024 * 1024\n\n  client:\n    dialTimeout: 5000\n    keepAliveTime: 10000\n    keepAliveTimeout: 20000\n    maxMaxAttempts: 5\n    initialBackOff: 1.0\n    maxBackoff: 60.0\n    backoffMultiplier: 2.0\n\n# Configure the proxy tls enable.\ntls:\n  serverPemPath: configs/cert/server.pem\n  serverKeyPath: configs/cert/server.key\n  caPemPath: configs/cert/ca.pem\n\ncommon:\n  # Channel name generation rule: ${namePrefix}-${ChannelIdx}\n  chanNamePrefix:\n    cluster: \"by-dev\"\n    rootCoordTimeTick: \"rootcoord-timetick\"\n    rootCoordStatistics: \"rootcoord-statistics\"\n    rootCoordDml: \"rootcoord-dml\"\n    rootCoordDelta: \"rootcoord-delta\"\n    search: \"search\"\n    searchResult: \"searchResult\"\n    queryTimeTick: \"queryTimeTick\"\n    queryNodeStats: \"query-node-stats\"\n    # Cmd for loadIndex, flush, etc...\n    cmd: \"cmd\"\n    dataCoordStatistic: \"datacoord-statistics-channel\"\n    dataCoordTimeTick: \"datacoord-timetick-channel\"\n    dataCoordSegmentInfo: \"segment-info-channel\"\n\n  # Sub name generation rule: ${subNamePrefix}-${NodeID}\n  subNamePrefix:\n    rootCoordSubNamePrefix: \"rootCoord\"\n    proxySubNamePrefix: \"proxy\"\n    queryNodeSubNamePrefix: \"queryNode\"\n    dataNodeSubNamePrefix: \"dataNode\"\n    dataCoordSubNamePrefix: \"dataCoord\"\n\n  defaultPartitionName: \"_default\" # default partition name for a collection\n  defaultIndexName: \"_default_idx\" # default index name\n  retentionDuration: 432000 # 5 days in seconds\n  entityExpiration: -1 # Entity expiration in seconds, CAUTION make sure entityExpiration >= retentionDuration and -1 means never expire\n\n  gracefulTime: 5000 # milliseconds. it represents the interval (in ms) by which the request arrival time needs to be subtracted in the case of Bounded Consistency.\n\n  # Default value: auto\n  # Valid values: [auto, avx512, avx2, avx, sse4_2]\n  # This configuration is only used by querynode and indexnode, it selects CPU instruction set for Searching and Index-building.\n  simdType: auto\n  indexSliceSize: 16 # MB\n\n  # please adjust in embedded Milvus: local\n  storageType: minio\n\n  security:\n    authorizationEnabled: false\n    # tls mode values [0, 1, 2]\n    # 0 is close, 1 is one-way authentication, 2 is two-way authentication.\n    tlsMode: 0\n\n  mem_purge_ratio: 0.2 # in Linux os, if memory-fragmentation-size >= used-memory * ${mem_purge_ratio}, then do `malloc_trim`\n", "created_at": "2023-07-13", "closed_at": null, "labels": [], "State": "open", "Author": "ponponon"}
{"issue_number": 1575, "issue_title": "[Bug]: Search with json key in expression returns empty when enabling dynamic field", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nSearch with json key in expression returns empty when enabling dynamic field\n>>> limit = 10\n>>> res = collection.search(vectors[:nq], \"float_vector\", default_search_params, limit, \"json_field['number']>=0\")\n>>> res[0].ids\n[442773804740250211, 442773804740249488, 442773804740249675, 442773804740249526, 442773804740250422, 442773804740250297, 442773804740250142, 442773804740250398, 442773804740249552, 442773804740249781]\n>>>\n>>> res = collection.search(vectors[:nq], \"float_vector\", default_search_params, limit, \"number>=0\")\n>>> res[0].ids\n[]\n\nExpected Behavior\nReturns topK\nSteps/Code To Reproduce behavior\nfrom pymilvus import CollectionSchema, FieldSchema\nfrom pymilvus import Collection\nfrom pymilvus import connections\nfrom pymilvus import DataType\nfrom pymilvus import Partition\nimport numpy as np\nconnections.connect()\n\nint64_field = FieldSchema(name=\"int64\", dtype=DataType.INT64, is_primary=True)\ndim = 128\nfloat_vector = FieldSchema(name=\"float_vector\", dtype=DataType.FLOAT_VECTOR, dim=dim)\nschema = CollectionSchema(fields=[int64_field, float_vector], enable_dynamic_field=True, auto_id=True)\n\ncollection = Collection(\"hello_milvus_binbin1\", schema)\nnb = 1000\nrng = np.random.default_rng(seed=19530)\nrows = [{\"float\": i*1.0, \"varchar\": str(i), \"json_field\": {\"number\": i, \"string\": str(i), \"bool\": bool(i), \"list\": [j for j in range(0, i)]}, \"float_vector\": rng.random((1, dim))[0]} for  i in range(0, nb)]\ncollection.insert(rows)\nindex_param = {\"index_type\": \"IVF_FLAT\", \"metric_type\": \"L2\", \"params\": {\"nlist\": 100}}\ncollection.create_index(\"float_vector\", index_param)\ncollection.load()\ndefault_nq = 10\nimport random\nvectors = [[random.random() for _ in range(dim)] for _ in range(default_nq)]\n\ndefault_search_params = {\"metric_type\": \"L2\", \"params\": {\"nprobe\": 10}}\nlimit = 10\nnq = 1\nres = collection.search(vectors[:nq], \"float_vector\", default_search_params, limit, \"number>=0\")\nprint(res[0].ids)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nmilvus: 2.2.*\npymilvus: 2.2.* & master-latest", "created_at": "2023-07-11", "closed_at": "2023-07-20", "labels": ["kind/bug"], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1570, "issue_title": "[Bug]: Timeout occurs when make connection to zilliz", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I run hello_zilliz_vectordb_serverless.py, it fails\nraceback (most recent call last):\n  File \"/opt/anaconda3/envs/milvus/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 119, in _wait_for_channel_ready\n    grpc.channel_ready_future(self._channel).result(timeout=timeout)\n  File \"/opt/anaconda3/envs/milvus/lib/python3.11/site-packages/grpc/_utilities.py\", line 151, in result\n    self._block(timeout)\n  File \"/opt/anaconda3/envs/milvus/lib/python3.11/site-packages/grpc/_utilities.py\", line 97, in _block\n    raise grpc.FutureTimeoutError()\ngrpc.FutureTimeoutError\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/giva/Downloads/cloud-vectordb-examples/python/hello_zilliz_vectordb_serverless.py\", line 15, in <module>\n    connections.connect(\"default\",\n  File \"/opt/anaconda3/envs/milvus/lib/python3.11/site-packages/pymilvus/orm/connections.py\", line 349, in connect\n    connect_milvus(**kwargs, user=user, password=password, token=token, db_name=db_name)\n  File \"/opt/anaconda3/envs/milvus/lib/python3.11/site-packages/pymilvus/orm/connections.py\", line 282, in connect_milvus\n    gh._wait_for_channel_ready(timeout=timeout)\n  File \"/opt/anaconda3/envs/milvus/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 123, in _wait_for_channel_ready\n    raise MilvusException(Status.CONNECT_FAILED,\npymilvus.exceptions.MilvusException: <MilvusException: (code=2, message=Fail connecting to server on in03-c2a35ceefea6832.api.gcp-us-west1.zillizcloud.com:443. Timeout)>\nExpected Behavior\nIt should work fine, as mention in the zilliz documentation.\nwhen I make request using curl like this\ncurl --request GET \\                                                                                                                                                                                     \u272d\n  --url https://in03-ascx1231231.api.gcp-us-west1.zillizcloud.com/v1/vector/collections \\\n  --header 'accept: application/json' \\\n  --header 'authorization: Bearer <token>'\nIt works and gives me\n{\"code\":200,\"data\":[]}\nSteps/Code To Reproduce behavior\n\nconda create -n milvus python=3.11\ngit clone https://github.com/zilliztech/cloud-vectordb-examples.git\nconda activate milvus\npip install pymilvus==2.2.11\ncd cloud-vectordb-examples\ncd python\nModify uri, token in the configuration file.(config_serverless.ini)\npython hello_zilliz_vectordb_serverless.py\n\nEnvironment details\n- Hardware/Softward conditions (MacOS, 10 core, 16 core, 64GB):\n- Method of installation (from source):\nAnything else?\nNo response", "created_at": "2023-07-04", "closed_at": "2023-07-05", "labels": [], "State": "closed", "Author": "tuvshinbay4r"}
{"issue_number": 1569, "issue_title": "[Bug]: Segmentation fault (core dumped) when inserting a big dataframe", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen inserting data into a collection, I got a segmentation fault (core dumped) error. It happened for a data frame of 6M rows but OK for a few hundreds of rows. I don't think it was Milvus memory issue. I monitored memory usage. It took very less.\nData have only 3 fields: user_id, bert_embeddings 384-dimension, last_update\ndataframe.info() shows that it occupies 252.3 MB in memory\nMilvus version:  milvus:v2.2.11\npymilvus==2.2.13\nPython dependencies: pymilvus, payarrow and ipykernel\nDetails:\nasttokens==2.2.1 backcall==0.2.0 comm==0.1.3 debugpy==1.6.7 decorator==5.1.1 environs==9.5.0 executing==1.2.0 grpcio==1.56.0 importlib-metadata==6.7.0 ipykernel==6.24.0 ipython==8.14.0 jedi==0.18.2 jupyter_client==8.3.0 jupyter_core==5.3.1 marshmallow==3.19.0 matplotlib-inline==0.1.6 nest-asyncio==1.5.6 numpy==1.25.0 packaging==23.1 pandas==2.0.3 parso==0.8.3 pexpect==4.8.0 pickleshare==0.7.5 platformdirs==3.8.0 prompt-toolkit==3.0.38 protobuf==4.23.3 psutil==5.9.5 ptyprocess==0.7.0 pure-eval==0.2.2 pyarrow==12.0.1 Pygments==2.15.1 pymilvus==2.2.13 python-dateutil==2.8.2 python-dotenv==1.0.0 pytz==2023.3 pyzmq==25.1.0 six==1.16.0 stack-data==0.6.2 tornado==6.3.2 traitlets==5.9.0 typing_extensions==4.7.1 tzdata==2023.3 ujson==5.8.0 wcwidth==0.2.6 zipp==3.15.0\nI searched the existing issues but it's not really the same. Tried some workaround but didn't work.\nThanks\nExpected Behavior\nSuccessfully inserted data\nSteps/Code To Reproduce behavior\nData frame input ~ 6M rows\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Rocky Linux 8.8, 8 cores CPU, 64GB Memory\n- Method of installation (Docker, or from source): Docker stanalone\n- Milvus version (v0.3.1, or v0.4.0): 2.2.11\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-07-04", "closed_at": "2023-07-06", "labels": [], "State": "closed", "Author": "sonlac"}
{"issue_number": 1554, "issue_title": "[Bug]: [high level api] error message is not meaningful when creating collections with invalid primary key type", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nerror message is not meaningful when creating collections with invalid primary key type\n>>> milvus_client.create_collection(collection_name, dim, id_type=\"invalid\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/towhee-test-env-3.8-0.9.0/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 82, in create_collection\n    raise PrimaryKeyException(message=ExceptionsMessage.PrimaryFieldType)\npymilvus.exceptions.PrimaryKeyException: <PrimaryKeyException: (code=1, message=Param primary_field must be str type.)>\n\nExpected Behavior\ncode=1, message=Param id_type must be int or string.\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient\nmilvus_client = MilvusClient()\ncollection_name = \"coll1\"\ndim = 8\nmilvus_client.create_collection(collection_name, dim, id_type=\"invalid\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-06-25", "closed_at": "2023-06-28", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1660, "issue_title": "[Bug]: search iterator doesn't support some metrics type and may fail without params", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nKeyError: \"params\"\nExpected Behavior\nsearch iterator run correctly\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-08-23", "closed_at": null, "labels": [], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 1659, "issue_title": "[QUESTION]: Why Changing efSearch Don't Produce Different Result", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI am using pymilvus standalone on macOS and did a vector similarity search on 917,000 vectors with 725 dimension. Here is the search condition,\nindex: HNSW,\ndistance metric: IP,\nsample size: 10,000,\ntop k: 100\nI did 16 different searches with m 64 to do a comparison on efConstruction and ef. It produces this result:\n\n\nWhat confused me is why does modifying the ef does not seems to lead to a significant change in search performance? Did I do something wrong?\nAnything else?\nNo response", "created_at": "2023-08-23", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "BryanRivermap"}
{"issue_number": 1652, "issue_title": "[FEATURE]: How to set expr multiple criteria when pymilvus Search", "issue_body": "How to split multiple conditions? A comma or something? Or is it and?", "created_at": "2023-08-21", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "ponponon"}
{"issue_number": 1650, "issue_title": "[FEATURE]: How to add read and write permissions for a partition to a user\uff1f", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\n\u2003\u2003In the milvus document, milvus can support partition-level user read and write permission settings, but in fact I can\u2019t set it. May I ask whether it currently does not support partition-level read and write permission settings or the method I used is wrong.The method I use is as follows.\nfrom pymilvus import (\n    connections,\n    utility, Role,\n    FieldSchema, CollectionSchema, DataType,\n    Collection,\n)\n\nif __name__ == '__main__':\n    connections.connect(host=\"xx.xx.xx.xx\", port=\"19530\",user=\"root\",password=\"yyyyyy\")\n \n    # utility.create_user(\"user2\", \"testforpartition\")\n    role = Role(\"guset\")\n    # role.add_user(\"user2\")\n    role.grant(\"Partition\", \"MultiPartitionTest_partition1\", \"Query\")\n\u2003\u2003The error message is as follows.\nRPC error: [grant_privilege], <MilvusException: (code=41, message=not found the object type[name: Partition], supported the object types: [User Collection Global])>, <Time:{'RPC start': '2023-08-18 11:13:39.491542', 'RPC error': '2023-08-18 11:13:39.493285'}>\nTraceback (most recent call last):\n  File \"/home/liupeng13/milvus/create_role.py\", line 14, in <module>\n    role.grant(\"Partition\", \"MultiPartitionTest_partition1\", \"Query\")\n  File \"/home/liupeng13/.local/lib/python3.11/site-packages/pymilvus/orm/role.py\", line 150, in grant\n    return self._get_connection().grant_privilege(self._name, object, object_name, privilege)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/liupeng13/.local/lib/python3.11/site-packages/pymilvus/decorators.py\", line 109, in handler\n    raise e\n  File \"/home/liupeng13/.local/lib/python3.11/site-packages/pymilvus/decorators.py\", line 105, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/liupeng13/.local/lib/python3.11/site-packages/pymilvus/decorators.py\", line 136, in handler\n    ret = func(self, *args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/liupeng13/.local/lib/python3.11/site-packages/pymilvus/decorators.py\", line 85, in handler\n    raise e\n  File \"/home/liupeng13/.local/lib/python3.11/site-packages/pymilvus/decorators.py\", line 50, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/liupeng13/.local/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 1181, in grant_privilege\n    raise MilvusException(resp.error_code, resp.reason)\npymilvus.exceptions.MilvusException: <MilvusException: (code=41, message=not found the object type[name: Partition], supported the object types: [User Collection Global])>\n\u2003\u2003I also tried the Collection parameter, also can't get it to set.\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-08-18", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "become-nice"}
{"issue_number": 1644, "issue_title": "[Bug]: MilvusClient Missing varchar maxlengh for primary key", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen using str primary key, maxlength is not set causing an error.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-08-10", "closed_at": "2023-09-06", "labels": [], "State": "closed", "Author": "filip-halt"}
{"issue_number": 1643, "issue_title": "[Bug]: MilvusClient do not add the connection to context connections so utility and Collection APIs fails ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI'm using MilvusClient in order to leverage the batch mode for inserts. I'm able to define schemas, create collections and populate with data with no major issues.\nBut if late on, in the same context, I try to access to the Collection API via:\ncollection  = Collection(collection_name)\nor I try to use some utility function such as:\nutility.drop_collection(collection_name)\nI'm getting the exeption ConnectionNotExistException.\nThis error is not raised if I use the connections.connect( method.\nExpected Behavior\nWhen creating a MilvusClient you have the same access to all pymilvus APIs.\nSteps/Code To Reproduce behavior\nclient = MilvusClient(uri='http://localhost:19530', db_name='default')\nutility.has_collection(\"some_name\")\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Ubuntu 22\n- Method of installation (Docker, or from source): Docker\n- Milvus version (v0.3.1, or v0.4.0): v2.2.11\n- Milvus configuration (Settings you made in `server_config.yaml`): default\n\nAnything else?\nNo response", "created_at": "2023-08-10", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "jruizaranguren"}
{"issue_number": 1640, "issue_title": "[Bug]: Error occurs  if the user does not insert dynamic fields when enable dynamic schema", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nRPC error: [insert_rows], <MilvusException: (code=1, message=varchar field '$meta' is illegal, array type mismatch)>, <Time:{'RPC start': '2023-08-07 16:44:57.040740', 'RPC error': '2023-08-07 16:44:57.048764'}>\ncode to reproduce this bug\n\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\nfmt = \"\\n=== {:30} ===\\n\"\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient(\"http://localhost:19530\")\nmilvus_client.drop_collection(collection_name)\nmilvus_client.create_collection(collection_name, dim, consistency_level=\"Bounded\", metric_type=\"L2\", auto_id=True)\n\nprint(\"collections:\", milvus_client.list_collections())\nprint(f\"{collection_name} :\", milvus_client.describe_collection(collection_name))\nrng = np.random.default_rng(seed=19530)\n\nrows = [\n    {\"vector\": rng.random((1, dim))[0]},\n    {\"vector\": rng.random((1, dim))[0]},\n    {\"vector\": rng.random((1, dim))[0]},\n    {\"vector\": rng.random((1, dim))[0]},\n    {\"vector\": rng.random((1, dim))[0]},\n    {\"vector\": rng.random((1, dim))[0]},\n]\nprint(fmt.format(\"Start inserting entities\"))\npks = milvus_client.insert(collection_name, rows, progress_bar=True)\npks2 = milvus_client.insert(collection_name, {\"vector\": rng.random((1, dim))[0], \"g\": 1})\npks.extend(pks2)\nprint(fmt.format(\"Start searching based on vector similarity\"))\n\nprint(\"len of pks:\", len(pks), \"first pk is :\", pks[0])\n\nprint(f\"get first primary key {pks[0]} from {collection_name}\")\nfirst_pk_data = milvus_client.get(collection_name, pks[0:1])\nprint(f\"data of primary key {pks[0]} is\", first_pk_data)\n\nprint(f\"start to delete first 2 of primary keys in collection {collection_name}\")\ndelete_pks = milvus_client.delete(collection_name, pks[0:2])\nprint(\"deleted:\", delete_pks)\nrng = np.random.default_rng(seed=19530)\nvectors_to_search = rng.random((1, dim))\n\nstart_time = time.time()\n\nmilvus_client.drop_collection(collection_name)\n\n\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-08-07", "closed_at": "2023-08-07", "labels": [], "State": "closed", "Author": "czs007"}
{"issue_number": 1639, "issue_title": "\u50bb\u903c\u5199\u7684\u5783\u573e\u8f6f\u4ef6", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\u4f1a\u4e0d\u4f1a\u5199\u4ee3\u7801\u554a\uff0c\u4e00\u7fa4\u50bb\u903c\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-08-07", "closed_at": "2023-08-07", "labels": [], "State": "closed", "Author": "pubg1"}
{"issue_number": 1634, "issue_title": "[QUESTION]: Which is correct in vector db creation?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nWhich step is correct sequence?\nIm testing milvus vector database in local.\nI used on disk index to test continuously without a lot of memory capacity\nSequence 1\n1. Create a collection with 3 varchar field and 1 embedding vector field(1536 dimensions)\n2. Create index on the collection (DISKANN) before inserting any vectors\n3. Insert the vectors\n4. Index search with index_params\n\nSequence 2\n1. Create a collection with 3 varchar field and 1 embedding vector field(1536 dimensions)\n2. Insert the vectors\n3. Create index on the collection (DISKANN, embedding vector) \n4. Index search with index_params\n\nIn the miluvs documentation, it seems to be written as sequence 2\nBut when I did sequence 2, an error occurred, so when I went to sequence 1, there was no problem\nThis is my error when i did sequence 2 (Create index on the embedding vector field)\n<_MultiThreadedRendezvous: StatusCode.UNAVAILABLE, failed to connect to all addresses; last error: UNAVAILABLE: ipv4:10.1.51.51:19530: Socket closed>\nAnd docker-compose in docker-compose, milvus-standalone was shutting down\nhave any more docs or example about on-disk index?\nAnything else?\nNo response", "created_at": "2023-08-02", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "lima4"}
{"issue_number": 1630, "issue_title": "[Bug]: In version 2.2.6, the limit parameter is invalid when querying.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I run a query below.\nexpr = \"id >= 0 and id < 50000\"\ndata = sourceCollection.query(expr=expr,output_fields=listFields,limits=2000)\nI get a error.\nTraceback (most recent call last):\n  File \"/home/redis/.pyenv/versions/3.9.12/lib/python3.9/site-packages/pymilvus/decorators.py\", line 50, in handler\n    return func(self, *args, **kwargs)\n  File \"/home/redis/.pyenv/versions/3.9.12/lib/python3.9/site-packages/pymilvus/client/grpc_handler.py\", line 910, in query\n    response = future.result()\n  File \"/home/redis/.pyenv/versions/3.9.12/lib/python3.9/site-packages/grpc/_channel.py\", line 797, in result\n    raise self\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\n\tstatus = StatusCode.RESOURCE_EXHAUSTED\n\tdetails = \"grpc: trying to send message larger than max (102533552 vs. 67108864)\"\n\tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:xxxxxx:19530 {created_time:\"2023-08-01T19:39:47.710729471+08:00\", grpc_status:8, grpc_message:\"grpc: trying to send message larger than max (102533552 vs. 67108864)\"}\"\n>\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/redis/Milvus/MilvusDMV1.py\", line 156, in <module>\n    data = sourceCollection.query(expr=expr,output_fields=listFields,limits=2000)\n  File \"/home/redis/.pyenv/versions/3.9.12/lib/python3.9/site-packages/pymilvus/orm/collection.py\", line 698, in query\n    res = conn.query(self._name, expr, output_fields, partition_names,\n  File \"/home/redis/.pyenv/versions/3.9.12/lib/python3.9/site-packages/pymilvus/decorators.py\", line 109, in handler\n    raise e\n  File \"/home/redis/.pyenv/versions/3.9.12/lib/python3.9/site-packages/pymilvus/decorators.py\", line 105, in handler\n    return func(*args, **kwargs)\n  File \"/home/redis/.pyenv/versions/3.9.12/lib/python3.9/site-packages/pymilvus/decorators.py\", line 136, in handler\n    ret = func(self, *args, **kwargs)\n  File \"/home/redis/.pyenv/versions/3.9.12/lib/python3.9/site-packages/pymilvus/decorators.py\", line 56, in handler\n    raise MilvusException(message=str(e)) from e\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=<_MultiThreadedRendezvous of RPC that terminated with:\n\tstatus = StatusCode.RESOURCE_EXHAUSTED\n\tdetails = \"grpc: trying to send message larger than max (102533552 vs. 67108864)\"\n\tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:xxxxx:19530 {created_time:\"2023-08-01T19:39:47.710729471+08:00\", grpc_status:8, grpc_message:\"grpc: trying to send message larger than max (102533552 vs. 67108864)\"}\"\n>)>\nMy collection only contains id and embedding field, 512 dim. In addition, I am asking, a single query can only view up to 16384 rows, why should 50000 rows of data be returned.", "created_at": "2023-08-01", "closed_at": "2023-08-10", "labels": [], "State": "closed", "Author": "become-nice"}
{"issue_number": 1629, "issue_title": "[Bug]: connections.connect retries connection 75 times when milvus says the credentials are invalid", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI have an instance of milvus running with authorizationEnabled set to true and I am trying to connect to it using pymilvus.\nIn my use case, I have to check whether if a set of credentials is valid or not. Milvus throws the following error when that happens, but it gets retried 75 times before I am able to handle the error:\nWARNING:pymilvus.decorators:[__internal_register] retry:4, cost: 0.27s, reason: <_InactiveRpcError: StatusCode.UNKNOWN, auth check failure, please check username and password are correct\nShouldn't the connect method raise an Exception the first try when seeing the auth check failure, and avoid retrying?\nAlso, I cannot find a way to set the number of max retries to the connect method, is that possible, if so, how?\nThanks in advance!\nExpected Behavior\nWhen I try to connect to a Milvus instance with authorization enabled, it should fail at the first try if the credentials are invalid\nSteps/Code To Reproduce behavior\nRun an instance of milvus-standalone in docker and mount the following volume:\n\n`./docker.milvus.yaml:/milvus/configs/milvus.yaml`\n\nThe docker.milvus.yaml file is this file here: https://raw.githubusercontent.com/milvus-io/milvus/v2.2.12/configs/milvus.yaml but the following setting edited by setting it to true.\n\n\ncommon:\n  security:\n    authorizationEnabled: true\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): U\n- Method of installation (Docker, or from source): Docker\n- Milvus version: v2.2.12\n- Pymilvus version: v2.2.14\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\n\ncommon:\n  security:\n    authorizationEnabled: true\nAnything else?\nWARNING:pymilvus.decorators:[__internal_register] retry:4, cost: 0.27s, reason: <_InactiveRpcError: StatusCode.UNKNOWN, auth check failure, please check username and password are correct>\nWARNING:pymilvus.decorators:[__internal_register] retry:5, cost: 0.81s, reason: <_InactiveRpcError: StatusCode.UNKNOWN, auth check failure, please check username and password are correct>\nWARNING:pymilvus.decorators:[__internal_register] retry:6, cost: 2.43s, reason: <_InactiveRpcError: StatusCode.UNKNOWN, auth check failure, please check username and password are correct>\nWARNING:pymilvus.decorators:[__internal_register] retry:7, cost: 3.00s, reason: <_InactiveRpcError: StatusCode.UNKNOWN, auth check failure, please check username and password are correct>\nWARNING:pymilvus.decorators:[__internal_register] retry:8, cost: 3.00s, reason: <_InactiveRpcError: StatusCode.UNKNOWN, auth check failure, please check username and password are correct>\nWARNING:pymilvus.decorators:[__internal_register] retry:9, cost: 3.00s, reason: <_InactiveRpcError: StatusCode.UNKNOWN, auth check failure, please check username and password are correct>\n", "created_at": "2023-08-01", "closed_at": "2023-10-16", "labels": [], "State": "closed", "Author": "realech"}
{"issue_number": 1626, "issue_title": "[QUESTION]: Does pymilvus supports async vector search? I", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nDoes pymilvus supports async vector search? If so, is there any documentation available since I could not find any.\nAnything else?\nNo response", "created_at": "2023-07-31", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "Ponkkk"}
{"issue_number": 1625, "issue_title": "[QUESTION]: ", "issue_body": "No body", "created_at": "2023-07-31", "closed_at": "2023-07-31", "labels": [], "State": "closed", "Author": "BryanRivermap"}
{"issue_number": 1623, "issue_title": "[QUESTION]: Why is collection.num_entities 0 after insertion?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHey folks!\nI'm getting started with milvus and tried running this example\nAside from the fact that I had to move the release_collection(collection) call up above the dropping index call,\n    # drop collection index\n    drop_index(collection)\n\n    # release memory\n    release_collection(collection) # Gave error if not placed above drop_index\n\n    # drop collection\n    drop_collection(_COLLECTION_NAME)\n\nwhat I saw is that the number of entities is 0.\nCreate connection...\n\nList connections:\n[('default', <pymilvus.client.grpc_handler.GrpcHandler object at 0x7fb34b3b71c0>)]\n\nDrop collection: demo\n\ncollection created: demo\n\nlist collections:\n['demo', 'books']\n\nThe number of entity:\n0\n\nCreated index:\n{'index_type': 'IVF_FLAT', 'params': {'nlist': 1024}, 'metric_type': 'L2'}\n\nSearch result for 0th vector: \nTop 0: id: 7, distance: 0.7198156714439392, entity: {}\nTop 1: id: 6, distance: 0.8187153339385986, entity: {}\nTop 2: id: 4, distance: 0.8676149845123291, entity: {}\n\nSearch result for 1th vector: \nTop 0: id: 1, distance: 0.0, entity: {}\nTop 1: id: 9, distance: 0.9325504899024963, entity: {}\nTop 2: id: 8, distance: 0.9705616235733032, entity: {}\n\nSearch result for 2th vector: \nTop 0: id: 2, distance: 0.0, entity: {}\nTop 1: id: 6, distance: 0.48646578192710876, entity: {}\nTop 2: id: 4, distance: 0.5971701145172119, entity: {}\n\nDrop index sucessfully\n\nDrop collection: demo\n\nCould you guys give me a brief overview as why this is zero? I would have expected it to be some greater-than-zero number, in particular, the number of entries in the database. Thanks in advance!!\nAnything else?\nNo response", "created_at": "2023-07-27", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "pablopalafox"}
{"issue_number": 1622, "issue_title": "[QUESTION]: Does PyMilvus support another way to perform bulk insert without uploading an existing file to MinIO?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI just found 'do_bulk_insert' method in utility folder,but it seems to only supprt operation with real files(JSON...)\nDoes PyMilvus support another way to perform bulk insert without uploading an existing file to MinIO?\nIs there any ways  can do bulk insert?\nThank you.\nAnything else?\nNo response", "created_at": "2023-07-27", "closed_at": null, "labels": [], "State": "open", "Author": "yengogo"}
{"issue_number": 1617, "issue_title": "[Bug]: It seems pymilvus==2.2.14 have bug with alter_collection", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nSee: https://github.com/matrixji/milvus-lite/actions/runs/5653197188/job/15314820137\ncollection created: demo\nTraceback (most recent call last):\n  File \"/github/home/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 123, in handler\n    return func(*args, **kwargs)\n  File \"/github/home/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 162, in handler\n    return func(self, *args, **kwargs)\n  File \"/github/home/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line [104](https://github.com/matrixji/milvus-lite/actions/runs/5653197188/job/15314820137#step:6:105), in handler\n    raise e from e\n  File \"/github/home/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 68, in handler\n    return func(*args, **kwargs)\n  File \"/github/home/.local/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 308, in alter_collection\n    request = Prepare.alter_collection_request(collection_name, properties)\n  File \"/github/home/.local/lib/python3.10/site-packages/pymilvus/client/prepare.py\", line 236, in alter_collection_request\n    kvs = [common_types.KeyDataPair(key=k, value=str(v)) for k, v in properties.items()]\n  File \"/github/home/.local/lib/python3.10/site-packages/pymilvus/client/prepare.py\", line 236, in <listcomp>\n    kvs = [common_types.KeyDataPair(key=k, value=str(v)) for k, v in properties.items()]\nValueError: Protocol message KeyDataPair has no \"value\" field.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/__w/milvus-lite/milvus-lite/examples/example.py\", line 188, in <module>\n    main()\n  File \"/__w/milvus-lite/milvus-lite/examples/example.py\", line 156, in main\n    set_properties(collection)\n  File \"/__w/milvus-lite/milvus-lite/examples/example.py\", line 141, in set_properties\n    collection.set_properties(properties={\"collection.ttl.seconds\": 1800})\n  File \"/github/home/.local/lib/python3.10/site-packages/pymilvus/orm/collection.py\", line 358, in set_properties\n    conn.alter_collection(\n  File \"/github/home/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 145, in handler\n    raise MilvusException(message=f\"Unexpected error, message=<{e!s}>\") from e\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=Unexpected error, message=<Protocol message KeyDataPair has no \"value\" field.>)>\nError: Process completed with exit code 1.\n\nthe root cause is KeyDataPair only have data field but not the value\nExpected Behavior\nHope could run example.py from pymilvus.\nSteps/Code To Reproduce behavior\nSee above\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): N/A\n- Method of installation (Docker, or from source): pip\n- Milvus version (v0.3.1, or v0.4.0): 2.2.12\n- Milvus configuration (Settings you made in `server_config.yaml`): N/A\nAnything else?\nNo response", "created_at": "2023-07-25", "closed_at": "2023-07-31", "labels": [], "State": "closed", "Author": "matrixji"}
{"issue_number": 1616, "issue_title": "[QUESTION]: res = collection.search()\u67e5\u8be2\u540e res\u503c\u4e3a\u7a7a", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\n\u60f3\u8bf7\u6559\u4e00\u4e0b\uff0c res = collection.search()  \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u662f\u7a7a\u5462\u3002\n\nAnything else?\nNo response", "created_at": "2023-07-25", "closed_at": null, "labels": [], "State": "open", "Author": "gaoyuan98"}
{"issue_number": 1610, "issue_title": "[FEATURE]: Support offset param in search(offset=xxx)", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nsee also: milvus-io/milvus#25587 (comment)\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-07-24", "closed_at": "2023-09-15", "labels": [], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 1720, "issue_title": "[Bug]: ModuleNotFoundError: No module named 'milvus'", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen I do \"python -c \"from milvus import Milvus, DataType\"\" I get \"ModuleNotFoundError: No module named 'milvus'\"\nI am using\n\"\n[tool.poetry.dependencies]\npython = \">=3.9,<3.13\"\npandas = \"^2.1.1\"\nsentence-transformers = \"^2.2.2\"\ntorch = \"^2.0.1\"\npymilvus = \"^2.3.1\"\nsetuptools = \"^68.2.2\"\n\"\n\nwhith pymilvus version \"'2.3.1'\" and I can import \"from pymilvus import Milvus, DataType\" but the \"MetricType\"; in the documentation here  only \"pip install pymilvus\" is used but later, \"milvus\" is used.\nExpected Behavior\njust to import successfully according to the documentation !\nSteps/Code To Reproduce behavior\nNA\nEnvironment details\n- I am using mac OS Monterey\n- I have milvus server running through docker and would like to connect using pymilvus\nAnything else?\nNA", "created_at": "2023-09-24", "closed_at": "2023-09-25", "labels": ["kind/question"], "State": "closed", "Author": "naarkhoo"}
{"issue_number": 1719, "issue_title": "[FEATURE]: Enable publish on release", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nOur actions failed to upload to PYPI this time: https://github.com/milvus-io/pymilvus/actions/runs/6273629334/job/17037444218\nAnd the actions are actually not recommended by PYPA team\n\nPlease change the actions to the latest workflows: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-09-22", "closed_at": "2023-10-16", "labels": [], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 1717, "issue_title": "[Bug]: Search iterator using HNSW failed for ef(1024) should be larger than k(10000)", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nmilvus-io/milvus#27284\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-09-22", "closed_at": "2023-09-22", "labels": [], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 1715, "issue_title": "[QUESTION]: can not do search when using a new database", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nmilvus-standalone : v2.2.13\npymilvus : 2.2.15\nhere is my code:\nfrom pymilvus import connections, db, utility\nfrom pymilvus import Collection\n\n\nconnections.connect(host=\"localhost\",\n                    port=\"19530\",\n                    db_name=\"formal\"\n                    )\n\n# db.using_database(\"formal\")\n\n\n\n# create collection\ndef create_collection():\n    from pymilvus import FieldSchema, CollectionSchema, DataType\n    id_field = FieldSchema(name=\"id\", dtype=DataType.VARCHAR, is_primary=True, max_length=64,\n                            description=\"primary id\")\n    text_field = FieldSchema(name=\"text\", dtype=DataType.VARCHAR, max_length=65535, description=\"\u6587\u672c\u5185\u5bb9\")\n    embedding_field = FieldSchema(name=\"vector\", dtype=DataType.FLOAT_VECTOR, dim=1024, description=\"vector\")\n    \n    schema = CollectionSchema(fields=[id_field, text_field, embedding_field],\n                              auto_id=False,\n                              description='')\n    \n    collection = Collection(\n        name='qa_1024',\n        schema=schema,\n        consistency_level=\"Strong\",\n        shards_num=2\n    )\n    # \u5efa\u7d22\u5f15\n    index_params = {\n        \"index_type\": \"HNSW\",\n        \"metric_type\": \"L2\",\n        \"params\": {\n            \"M\": 8,\n            \"efConstruction\": 64\n        }\n    }\n    collection.create_index(\n        field_name=\"vector\",\n        index_params=index_params,\n        index_name=\"\"\n    )\n    # load\u8fdb\u5185\u5b58\n    collection.load()\n\ncreate_collection()\n\n# search\nsearch_params = {\"metric_type\": \"L2\", \"params\": {\"ef\": 10}}\ncol = Collection(\"qa_1024\")\ndata = [[0.1]*1024]\nresult = col.search(\n    data=data, \n    anns_field=\"vector\", \n    param=search_params, \n    limit=10, \n    output_fields=['id', 'text', 'vector'], \n    consistency_level=\"Strong\"\n)\nwhen i run it , i got error like this:\nMilvusException: <MilvusException: (code=1, message=code: UnexpectedError, error: requery failed, err=code: UnexpectedError, reason: code: CollectionNotExists, reason: can't find collection: qa_1024)>\nAnything else?\nwhen i release the collection,  i got :\nMilvusException: <MilvusException: (code=1, message=checkIfLoaded failed when search, collection:qa_1024, partitions:[], err = GetCollectionInfo failed, collection = qa_1024, err = collection 444406101399309854 has not been loaded to memory or load failed)>\nso , i confused\nand i also try\nfrom pymilvus import MilvusClient\n\nuri = \"http://localhost:19530\"\nclient = MilvusClient(uri, db_name='formal')\n\nresult = client.search(\n    collection_name='qa_1024',\n    data = data,\n    limit=5,\n    output_fields=['id', 'text', 'vector']\n)\ni got the same error", "created_at": "2023-09-21", "closed_at": "2023-09-23", "labels": ["kind/question"], "State": "closed", "Author": "MachineWei"}
{"issue_number": 1714, "issue_title": "[Bug]: Pass extra params", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-09-21", "closed_at": "2023-09-22", "labels": [], "State": "closed", "Author": "smellthemoon"}
{"issue_number": 1711, "issue_title": "[FEATURE]: query_iterator support best_reduce", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nwhen using query_iterator\uff0cif results from various segments/channels can generate a more comprehensive result, then the reduce process should support such cases to reduce possible query rounds and accelerate the iteration by caching additional results  on client side\nDescribe the solution you'd like\nfor example, when handling 3 results with limit=3\nr1: 2, 3, 7,\nr2: 1, 10, 11,\nr3: 4, 5, 9,\naccording to previous implementation, the reduced_result here can only be {1,2,3}, but actually the best possible result is {1,2,3,4,5,7}, if we can extend the reduce process and then generated result would be 2 pages with limit=3 rather than only one page\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-09-21", "closed_at": "2023-10-24", "labels": ["kind/feature"], "State": "closed", "Author": "MrPresent-Han"}
{"issue_number": 1710, "issue_title": "[Bug]: test_local_writer_npy function in example_bulkwriter.py  do not support writing int64 to local npy files", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nautoid of field id in build_csv_collection is set to false\ntrain_embeddings.csv in data add a column of id\nrun test_local_writer_npy in example_bulkwriter.py, error occurred.\n\nERROR:bulk_writer:Illegal scalar value for field 'INT64', value overflow or type mismatch INFO:local_bulk_writer:Delete empty directory '/tmp/bulk_writer/781c92f5-dd80-42df-bfdd-1a34d51120fd' Traceback (most recent call last): File \"/Users/zilliz/qixuan/GitHub/pymilvus/examples/example_bulkwriter.py\", line 361, in <module> test_local_writer_npy(schema) File \"/Users/zilliz/qixuan/GitHub/pymilvus/examples/example_bulkwriter.py\", line 138, in test_local_writer_npy read_sample_data(\"./data/train_embeddings.csv\", local_writer) File \"/Users/zilliz/qixuan/GitHub/pymilvus/examples/example_bulkwriter.py\", line 114, in read_sample_data writer.append_row(row) File \"/Users/zilliz/qixuan/GitHub/pymilvus/pymilvus/bulk_writer/local_bulk_writer.py\", line 84, in append_row super().append_row(row, **kwargs) File \"/Users/zilliz/qixuan/GitHub/pymilvus/pymilvus/bulk_writer/bulk_writer.py\", line 75, in append_row self._verify_row(row) File \"/Users/zilliz/qixuan/GitHub/pymilvus/pymilvus/bulk_writer/bulk_writer.py\", line 141, in _verify_row self._throw( File \"/Users/zilliz/qixuan/GitHub/pymilvus/pymilvus/bulk_writer/bulk_writer.py\", line 90, in _throw raise MilvusException(message=msg) pymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=Illegal scalar value for field 'INT64', value overflow or type mismatch)>\nExpected Behavior\ntest_local_writer_npy function in example_bulkwriter.py support writing int64 to local npy files\nSteps/Code To Reproduce behavior\n1. autoid of field id in build_csv_collection is set to false\n2. train_embeddings.csv in data add a column of id\n3. run test_local_writer_npy in example_bulkwriter.py, error occurred.\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): 2.2\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\n\n", "created_at": "2023-09-19", "closed_at": "2023-09-26", "labels": ["kind/bug"], "State": "closed", "Author": "qixuan0212"}
{"issue_number": 1709, "issue_title": "[QUESTION]: How to insert data wthout primary key", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHow to insert data wthout primary key\nAnything else?\nNo response", "created_at": "2023-09-19", "closed_at": "2023-09-22", "labels": ["kind/question"], "State": "closed", "Author": "LinoSun"}
{"issue_number": 1708, "issue_title": "[Bug]: The Hits class cannot be treated as a list", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nA Hits object will overflow if you try to get a sub list from it:\nsearch_param = {\n    \"data\": [[random.random() for _ in range(128)]],\n    \"anns_field\": \"face_vector\",\n    \"param\": {},\n    \"limit\": 10}\n\nresults = collection.search(**search_param)\ntopk_items = results[0]\n# print all the results\nprint(topk_items)\n# print from No.2 results by list, OK\nprint(list(topk_items)[1: ])\n# print from No.2 results by Hits, Overflow\nprint(topk_items[1: ])\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nfrom pymilvus import (\n    connections,\n    FieldSchema, CollectionSchema, DataType,\n    Collection,\n    utility,\n)\n\nimport random\n\nHOST = '127.0.0.1'\nPORT = '19530'\n\ncollection_name = \"test\"\n\ntry:\n    connections.connect(\"default\", host=\"localhost\", port=\"19530\")\n    print(\"connected Successfully\")\nexcept Exception as e:\n    print(f\"error occurred: {e}\")\n\nfield_1 = FieldSchema(\n    name=\"face_id\",\n    dtype=DataType.INT64,\n    is_primary=True,\n)\n\nfield_2 = FieldSchema(\n    name=\"face_vector\",\n    dtype = DataType.FLOAT_VECTOR,\n    dim=128\n)\n\nschema = CollectionSchema(fields=[field_1, field_2])\n\nif utility.has_collection(collection_name):\n    utility.drop_collection(collection_name)\n\ncollection = Collection(name=collection_name, schema=schema)\nprint(f\"Collection {collection}\")\n\nvector_1 = [random.random() for _ in range(128)]\nvector_2 = [random.random() for _ in range(128)]\nvector_3 = [random.random() for _ in range(128)]\n\n# insert the face vectors\ncollection.insert({\"face_id\":1,  \"face_vector\": vector_1})\ncollection.insert({\"face_id\":2, \"face_vector\": vector_2})\ncollection.insert({\"face_id\":3, \"face_vector\": vector_3})\ncollection.flush()\n\n# build index\nindex_params = {\n    'metric_type': 'L2',\n    'index_type': \"FLAT\",\n    'params': {}\n}\ncollection.create_index(field_name=\"face_vector\", index_params=index_params)\ncollection.load()\n\n# search by a random vector\nsearch_param = {\n    \"data\": [[random.random() for _ in range(128)]],\n    \"anns_field\": \"face_vector\",\n    \"param\": {},\n    \"limit\": 10}\n\nresults = collection.search(**search_param)\ntopk_items = results[0]\n# print all the results\nprint(topk_items)\n# print from No.2 results by list, OK\nprint(list(topk_items)[1: ])\n# print from No.2 results by Hits, Overflow\nprint(topk_items[1: ])\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-09-18", "closed_at": "2023-10-20", "labels": ["kind/bug"], "State": "closed", "Author": "yhmo"}
{"issue_number": 1707, "issue_title": "[FEATURE]: Support new DataType: Array", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nNo response\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nSupport Array DataType for milvus.\n\nThere is an element_type field to represent the type of the actual element.\nThere is an upper limit on the number of elements max_capacity. If element type is VARCHAR, it must contain max_length.\npymilvus example:\n\npk_field = FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=False)\nint_array_field = FieldSchema(name=\"int_array\", dtype=DataType.ARRAY, element_type=DataType.INT64, max_capacity=100)\nstr_array_field = FieldSchema(name=\"string_array\", dtype=DataType.ARRAY, element_type=DataType.VARCHAR,\n                              max_capacity=100, max_length=100)\nfloat_vector = FieldSchema(name=\"float_vector\", dtype=DataType.FLOAT_VECTOR, dim=dim)\nschema = CollectionSchema(fields=[pk_field, int_array_field, str_array_field, float_vector],\n                          enable_dynamic_field=True)\n", "created_at": "2023-09-18", "closed_at": "2023-10-24", "labels": [], "State": "closed", "Author": "xiaocai2333"}
{"issue_number": 1706, "issue_title": "[Documentation?]: Handshake failed with fatal error SSL_ERROR_SSL: error:100000f7:SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI follow the documentation to connect to Milvus with pymilvus via TLS and run into this issue. Here's the documentation I'm following - https://milvus.io/docs/tls.md#Connect-to-the-Milvus-server-with-TLS\nThis seems to have different kwargs than the examples further down the page.\n                        client_key_path=\"cert/client.key\",\n                        ca_pem_path=\"cert/ca.pem\",\n\nThe example shows server_pem_path rather than client_pem_path.\nExample 2 shows client_pem_path.\nRegardless of which one I use, I still get the error - Handshake failed with fatal error SSL_ERROR_SSL: error:100000f7:SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER.\nExpected Behavior\nI would expect that I could connect via TLS.\nSteps/Code To Reproduce behavior\nFollow the documentation. Configure the `tls:` and `common-security` section of milvus.yaml.\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Host OS Ubuntu 20.04, Intel CPU, Nvidia GPU, ~500GB Memory\n- Method of installation (Docker, or from source): Docker compose\n- Milvus version (v0.3.1, or v0.4.0): milvusdb/milvus:v2.3.0\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\nThis only shows the changes I made from the default milvus.yaml that the documentation provides\n\ntls:\n  serverPemPath: /path/to/my/server.crt    \n  serverKeyPath: /path/to/my/server.key\n  caPemPath: /path/to/my/ca.crt\ncommon:\n  security:\n    authorizationEnabled: true\n    superUsers: root\n\n\n### Anything else?\n\nIf I remove `secure=True` from the `connections.connect()` kwargs, then I am able to connect. As soon as I put `secure=True` I get errors.\n", "created_at": "2023-09-17", "closed_at": null, "labels": ["documentation", "kind/question"], "State": "open", "Author": "brandonbiggs"}
{"issue_number": 1705, "issue_title": "[QUESTION]: Support nullable fields", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHi, I'm new to Milvus, coming from Chroma. I've been trying adding some embeddings to Milvus. My stack is:\n\nlangchain 0.0.283 (langchain.vectorstores.Milvus)\nsentence-transformers/all-MiniLM-L6-v2 embeddings\nMilvus 2.3.0-dev\npymilvus 2.3.0.\n\nMy first attempt worked fine, storing all the embeddings for my corpus. \u2705\nThen, I dropped the collection, and went to do the same thing again. \u274c I received:\npymilvus.exceptions.ParamError: <ParamError: (code=1, message=('Field data size misaligned for field [description] ', 'got size=[373] ', 'alignment size=[839]'))>\n\nThis fails the collection.insert(...).\nPerhaps there's something I've done wrong, though I'm not sure what control I have through Langchain. There's nothing in the documentation I can see in terms of alignment or padding, and only one Stack Overflow post which was from yesterday (and by someone who has had a sudden splurge of answers across different topics since joining 5 days ago - bot?). Can anyone guide me as to what's going wrong and how to fix it?\nAnything else?\nNo response", "created_at": "2023-09-16", "closed_at": "2023-09-22", "labels": ["kind/feature"], "State": "closed", "Author": "ind1go"}
{"issue_number": 1694, "issue_title": "[Bug]: `collection.upsert` with row-based data gives TypeError", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I run upsert method of Collection class with row-based data referring to this doc, I see the error message:\nERROR:pymilvus.decorators:Unexpected error: [upsert_rows], GrpcHandler._prepare_row_upsert_request() takes from 3 to 5 positional arguments but 6 were given\n\nThe non-row-based data works fine, by the way.\nExpected Behavior\nNo error.\nSteps/Code To Reproduce behavior\nimport numpy as np\nfrom pymilvus import Collection, connections\n\ndata = [\n    {\"book_id\": book_id, \"vector\": vector}\n    for book_id, vector in zip(range(4), np.random.rand(4, 8))\n]\n\nconnections.connect(host=\"localhost\", port=19530)\ncollection = Collection(\"book\")\nmr = collection.upsert(data)\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Ubuntu 22.04\n- Method of installation (Docker, or from source): Docker\n- Milvus version (v0.3.1, or v0.4.0): v2.3.0\n- Milvus configuration (Settings you made in `server_config.yaml`): none\n\nAnything else?\nI think the solution is to remove False input on this line.\nhttps://github.com/milvus-io/pymilvus/blob/v2.3.0/pymilvus/client/grpc_handler.py#L700\nIf the error is valid and the solution looks good, I am happy to open a PR as well.", "created_at": "2023-09-14", "closed_at": "2023-09-22", "labels": [], "State": "closed", "Author": "taku-kino"}
{"issue_number": 1689, "issue_title": "[Bug]: hpack_parser.cc:833 when using an uri connection", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I connect using a uri https://my-endpoint.ngrok-free.app:443 I get the following error:\nE0912 19:44:03.761939000 11117801472 hpack_parser.cc:833]              Error parsing 'content-type' metadata: error=invalid value key=content-type\n[__internal_register] retry:4, cost: 0.27s, reason: <_InactiveRpcError: StatusCode.UNKNOWN, Stream removed>\n\nExpected Behavior\nTo connect to Milvus like when I'm connecting in localhost.\nSteps/Code To Reproduce behavior\nInstall the langchain library and use Milvus class.\nfrom langchain.vectorstores import Milvus\n\nMilvus(embedding_function=MyEmbeddingFunction(),\n       connection_args={\"uri\": `https://my-endpoint.ngrok-free.app:443`})\n\nEnvironment details\n\nHardware/Softward conditions (OS, CPU, GPU, Memory): MacOS Sonoma, Mac Mini 2021\nMethod of installation (Docker, or from source): from Langchain\n\nAnything else?\nI've tried to trace the error and the code execution ends in pymilvus/client/grpc_handler.py line 1837:\ndef __internal_register(self, user: str, host: str) -> int:\n        req = Prepare.register_request(user, host)\n        response = self._stub.Connect(request=req)\n\nThe library is working when connecting to a localhost connection.\nThe ngrok point is pointing to the 19530 port in the host machine.", "created_at": "2023-09-12", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "angel-luis"}
{"issue_number": 1685, "issue_title": "[QUESTION]: \u5bf9array\u7c7b\u578b\u7684\u652f\u6301\u9884\u8ba1\u4ec0\u4e48\u65f6\u5019\u4e0a\u7ebf", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nmilvus\u57282.3.x\u7248\u672c\u4e2d\u5df2\u7ecf\u652f\u6301json\u548carray\u7c7b\u578b\u4e86\uff0cmilvus-sdk-java\u4e5f\u652f\u6301\u4e86json\u548carray\uff0c\u4f46\u662f\u6700\u65b0\u7248\u672c\u7684pymilvus\u8fd8\u4e0d\u652f\u6301array\u7c7b\u578b\uff0c\u6211\u770b\u5230\u4e86\u6709\u8fd9\u4e2amerge request\uff0c\u6240\u4ee5\u60f3\u95ee\u4e00\u4e0b\u8fd9\u4e2a\u9884\u8ba1\u4ec0\u4e48\u65f6\u5019\u4e0a\u7ebf\u5e76\u53d1\u5e03\u65b0\u7248\u672c\uff1f\nAnything else?\n#1681", "created_at": "2023-09-11", "closed_at": "2023-09-11", "labels": [], "State": "closed", "Author": "TristeLXH"}
{"issue_number": 1684, "issue_title": "[QUESTION]: IndexError: list index out of range", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nWhen following the \"getting started\" at https://milvus.io/docs/insert_data.md, I received the following error:\nmr = collection.insert(data)\nTraceback (most recent call last):\nFile \"\", line 1, in \nFile \"/opt/homebrew/lib/python3.11/site-packages/pymilvus/orm/collection.py\", line 495, in insert\ncheck_insert_schema(self._schema, data)\nFile \"/opt/homebrew/lib/python3.11/site-packages/pymilvus/orm/schema.py\", line 406, in check_insert_schema\ninfer_fields, tmp_fields, is_data_frame = parse_fields_from_data(schema, data)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/opt/homebrew/lib/python3.11/site-packages/pymilvus/orm/schema.py\", line 452, in parse_fields_from_data\nfields = FieldSchema(\"\", infer_dtype_bydata(data[index][0]))\n~~~~~~~~~~~^^^\nIndexError: list index out of range\nThis is the collection.schema;\n{'auto_id': False, 'description': 'Test book search', 'fields': [{'name': 'book_id', 'description': '', 'type': <DataType.INT64: 5>, 'is_primary': True, 'auto_id': False}, {'name': 'book_name', 'description': '', 'type': <DataType.VARCHAR: 21>, 'params': {'max_length': 200}}, {'name': 'word_count', 'description': '', 'type': <DataType.INT64: 5>}, {'name': 'book_intro', 'description': '', 'type': <DataType.FLOAT_VECTOR: 101>, 'params': {'dim': 2}}], 'enable_dynamic_field': True}\nAnd the data was created using https://milvus.io/docs/create_collection.md\nAre the code and the \"Getting started\" perhaps not in sync anymore? What could I further try?\nAnything else?\nI run on a MacBook Pro m2", "created_at": "2023-09-09", "closed_at": null, "labels": [], "State": "open", "Author": "djswagerman"}
{"issue_number": 1679, "issue_title": "[FEATURE]: upgrade grpcio", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nAccording to CVE-2023-33953\uff08https://nvd.nist.gov/vuln/detail/CVE-2023-33953\uff09, grpcio 1.56.0 has a high-risk vulnerability and it is recommended to upgrade to 1.56.2.\nDescribe the solution you'd like\nupgrade grpcio to 1.56.2\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-09-08", "closed_at": "2023-09-15", "labels": [], "State": "closed", "Author": "zhyg"}
{"issue_number": 1678, "issue_title": "[QUESTION]: grpc: received message larger than max (68554284 vs. 67108864)", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI'm using pymilvus to import data,\ncollection.insert(data)\n\nand I got it:\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\n\tstatus = StatusCode.RESOURCE_EXHAUSTED\n\tdetails = \"grpc: received message larger than max (68554284 vs. 67108864)\"\n\tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:172.16.10.185:19530 {grpc_message:\"grpc: received message larger than max (68554284 vs. 67108864)\", grpc_status:8, created_time:\"2023-09-08T10:00:04.34953984+08:00\"}\"\n\n\nIs it a bug or a usage issue?\nAnything else?\nNo response", "created_at": "2023-09-08", "closed_at": "2023-09-08", "labels": [], "State": "closed", "Author": "kingzcheung"}
{"issue_number": 1672, "issue_title": "[Bug]: *** AttributeError: 'Collection' object has no attribute 'query_iterator'", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I use iterator, I get this error.\nExpected Behavior\nget iterator\nSteps/Code To Reproduce behavior\n# filter books with the number of pages ranging from 600 to 700\nexpr = \"600 <= num_pages <= 700\"\n\n# return `bookID` and `authors`\noutput_fields=[bookID, authors]\n\n# return 5 results per page\nlimit = 5\n\n# create a query iterator\nquery_iterator = collection.query_iterator(expr, output_fields, limit)\n\nwhile True:\n    # turn to the next page\n    res = query_iterator.next()\n    if len(res) == 0:\n        print(\"query iteration finished, close\")\n        # close the iterator\n        query_iterator.close()\n        break\n    for i in range(len(res)):\n        print(res[i])\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Ubuntu, 8core, -, 16GB RAM\n- Method of installation (Docker, or from source): : docker compose\n- Milvus version (v0.3.1, or v0.4.0): : v2.3.0\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-09-06", "closed_at": "2023-09-22", "labels": [], "State": "closed", "Author": "SaumyaATC"}
{"issue_number": 1667, "issue_title": "[Bug]: It cannot correctly calculate the length of Chinese strings.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI am currently using Milvus version 2.3.0. I have set a field as VARCHAR and inserted Chinese characters into it. However, I have noticed that when calculating the length, Milvus calculates the length based on the character encoding rather than the actual character count. This often leads to exceeding the maximum length.\nExpected Behavior\nFor example, when I provide a string like \"\u5b57\" (which contains one Chinese character), I expect its length to be 1, not 3.\nSteps/Code To Reproduce behavior\nfor example:\n\nfields = [\n    FieldSchema(name=\"pk\", dtype=DataType.INT64, is_primary=True, auto_id=False),\n    FieldSchema(name=\"random\", dtype=DataType.VARCHAR, max_length=1),\n    FieldSchema(name=\"embeddings\", dtype=DataType.FLOAT_VECTOR, dim=8),\n]\nschema = CollectionSchema(\n    fields, \"hello_milvus is the simplest demo to introduce the APIs\"\n)\nhello_milvus = Collection(\"hello_milvus\", schema)\n\nentities = [\n    [i for i in range(4)],  # field pk\n    [\"\u5b57\", \"\u4e2d\", \"\u6c49\", \"\u8bcd\"],  # field random\n    [[random.random() for _ in range(8)] for _ in range(4)],  # field embeddings\n]\ninsert_result = hello_milvus.insert(entities)\n\nIn the code above, I have set the maximum length of the VARCHAR field to 1 and inserted only one Chinese character. However, when running this program, I am encountering the following error:\n```python\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=the length (3) of 0th string exceeds max length (1): expected=valid length string, actual=string length exceeds max length: invalid parameter)>\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):Ubuntu CPU 128GB GPU RTX4090 24GB\n- Method of installation (Docker, or from source):Docker\n- Milvus version (v0.3.1, or v0.4.0):milvus 2.3.0 and pymilvus 2.3.0\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\nAnything else?\nNo response", "created_at": "2023-09-01", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "Pickupppp"}
{"issue_number": 1665, "issue_title": "[Bug]: `has_collection` depends on the unreasonable error code", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nWe are refactoring the error handling in Milvus, when we correct the error code of DescribeCollection to CollectionNotFound, tests failed\nExpected Behavior\nHere it should simply return the bool result from the response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-09-01", "closed_at": "2023-10-19", "labels": ["kind/enhancement"], "State": "closed", "Author": "yah01"}
{"issue_number": 1663, "issue_title": "[Bug]: query_iterator gives KeyError: 'is_primary' exception", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n__setup__pk_prop function in iterator.py file produce the exception\n    File \"E:\\Projects\\CloudApper\\AI-ML\\CloudApper Sense\\sense_api\\milvus_store.py\", line 55, in get_all_data query_iterator = self.collection.query_iterator(expr=expression, **kwargs) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File \"E:\\Projects\\CloudApper\\AI-ML\\CloudApper Sense\\venv\\Lib\\site-packages\\pymilvus\\orm\\collection.py\", line 934, in query_iterator return QueryIterator( ^^^^^^^^^^^^^^ File \"E:\\Projects\\CloudApper\\AI-ML\\CloudApper Sense\\venv\\Lib\\site-packages\\pymilvus\\orm\\iterator.py\", line 70, in __init__ self.__setup__pk_prop() File \"E:\\Projects\\CloudApper\\AI-ML\\CloudApper Sense\\venv\\Lib\\site-packages\\pymilvus\\orm\\iterator.py\", line 164, in __setup__pk_prop if field[\"is_primary\"]: ~~~~~^^^^^^^^^^^^^^ KeyError: 'is_primary'\nThe code in this function:\ndef __setup__pk_prop(self):\n        fields = self._schema[FIELDS]\n        for field in fields:\n            if field[\"is_primary\"]:\n                if field[\"type\"] == DataType.VARCHAR:\n                    self._pk_str = True\n                else:\n                    self._pk_str = False\n                self._pk_field_name = field[\"name\"]\n                break\n        if self._pk_field_name is None or self._pk_field_name == \"\":\n            raise MilvusException(message=\"schema must contain pk field, broke\")\n\nObservation: This will give error when  fields = self._schema[FIELDS] some of the fields don't have the is_primary key.\nPossible Solution/Fix: This is a common dictionary error. Instead of writing this if field[\"is_primary\"] we can write this code as if field.get(\"is_primary\"). It will fix the issue.\nVersion: pymilvus==2.3.0\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-08-30", "closed_at": "2023-10-24", "labels": ["kind/bug"], "State": "closed", "Author": "hasansustcse13"}
{"issue_number": 1662, "issue_title": "[QUESTION]: How does Milvusclient check exist collections?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nRecently, I have been using the Milvusclient and have encountered issues with the directly use others pymilvus modules(e.g. upsert,has_collections...). It appears that they cannot be used with connections created by the Milvusclient.\nI am wondering if there is a way to make use of the pymilvus functionality within the Milvusclient.Thank you\nAnything else?\nNo response", "created_at": "2023-08-25", "closed_at": "2023-08-27", "labels": [], "State": "closed", "Author": "yengogo"}
{"issue_number": 1749, "issue_title": "[Bug]: the function named batch_insert_param in prepare.py\uff0cIf a primary key exists and primary key auto addation, fields_info[location[entity.get(\"name\")]]) will cause a bug", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nExpected Behavior\nif  primary_key_auto_add:\n    field_data = entity_helper.entity_to_field_data(entity, fields_info[location[entity.get(\"name\") + 1]])\nelse:\n   \u2026\u2026\nSteps/Code To Reproduce behavior\n1.use attu create a collection, schema:\n{\n  auto_id: True\n  description: \n  fields: [{\n    name: id\n    description: \n    type: 5\n    is_primary: True\n    auto_id: True\n  }, {\n    name: embedded\n    description: \n    type: 101\n    params: {'dim': 2}\n  }, {\n    name: user_id\n    description: \n    type: 21\n    params: {'max_length': 16}\n  }, {\n    name: date\n    description: \n    type: 21\n    params: {'max_length': 32}\n  }]\n}\n\n2\u3001insert data\n\n    data = [\n        np.random.random([2, 2]).tolist(),\n        ['100001', '100002'],\n        ['2022-09-20 22:55:54', '2022-09-20 22:55:54'],\n    ]\n\n    print(data)\n    mr = collection.insert(data)\nEnvironment details\npython 10.2\nAnything else?\nNo response", "created_at": "2023-10-23", "closed_at": "2023-10-25", "labels": ["kind/bug", "2.2 related"], "State": "closed", "Author": "zouchanglin"}
{"issue_number": 1746, "issue_title": "[Bug]: Support python3.12", "issue_body": "local python version is 3.12.0\npip3 install pymilvus==2.2.15  ERROR:\nInstalling build dependencies ... error\nerror: subprocess-exited-with-error\n...\n...\nModuleNotFoundError: No module named 'distutils'\nnote: This error originates from a subprocess, and is likely not a problem with pip.\nerror: subprocess-exited-with-error", "created_at": "2023-10-20", "closed_at": "2024-03-05", "labels": ["kind/enhancement"], "State": "closed", "Author": "niujianya"}
{"issue_number": 1737, "issue_title": "How to return multiple pieces of data with the same field in the search()  or query() method?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHello, the problem I encountered is this. For example, I inserted 5 pieces of data. Each piece of data has 3 fields embedding, query, and answer. However, the contents of my 5 query fields are the same. I searched through When the limit is set to 5 during method search, only one of the data will be returned. How can I return all the data with the same query in these 5 queries?\nAnything else?\nNo response", "created_at": "2023-10-18", "closed_at": "2023-10-19", "labels": ["kind/question"], "State": "closed", "Author": "zhongJY1998"}
{"issue_number": 1734, "issue_title": "[Bug]: cannot import name 'S3Error' from 'minio.error'", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen I import pymilvus, it traceback ImportError: cannot import name 'S3Error' from 'minio.error' error\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nimport pymilvus\nEnvironment details\nName: pymilvus\nVersion: 2.3.1\nSummary: Python Sdk for Milvus\nHome-page: \nAuthor: \nAuthor-email: Milvus Team <milvus-team@zilliz.com>\nLicense: \nLocation: /usr/local/lib/python3.8/dist-packages\nRequires: environs, grpcio, minio, numpy, pandas, protobuf, requests, ujson\nRequired-by: \n\nName: minio\nVersion: 6.0.2\nSummary: MinIO Python Library for Amazon S3 Compatible Cloud Storage for Python\nHome-page: https://github.com/minio/minio-py\nAuthor: MinIO, Inc.\nAuthor-email: dev@min.io\nLicense: Apache License 2.0\nLocation: /usr/local/lib/python3.8/dist-packages\nRequires: certifi, configparser, python-dateutil, pytz, urllib3\nRequired-by: pymilvus\nAnything else?\nNo response", "created_at": "2023-10-16", "closed_at": "2023-10-24", "labels": ["kind/bug"], "State": "closed", "Author": "XDeviation"}
{"issue_number": 1733, "issue_title": "[FEATURE]:  The delete index interface is missing", "issue_body": "https://github.com/milvus-io/pymilvus/blob/master/pymilvus/orm/collection.py\nCurrently, only create index is available, and delete index is not available", "created_at": "2023-10-13", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "ponponon"}
{"issue_number": 1731, "issue_title": "(code=1, message=The data type of field vector doesn't match, expected: FLOAT_VECTOR, got DOUBLE)>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nembeddings = outputs.last_hidden_state[0].mean(dim=0)\nprint(\"embeddings:\", embeddings)\nprint(\"embeddings.len:\", len(embeddings))\nconnections.connect(host='localhost', port='19530')\nlaw_id = FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=True)\nlaw_vector = FieldSchema(name=\"vector\", dtype=DataType.FLOAT_VECTOR, dim=768)\ncollection_schema = CollectionSchema(fields=[law_id, law_vector], auto_id=True)\ncollection = Collection(name='law_key', schema=collection_schema)\n#collection = Collection(name='law_key')\nindex_param = {\n\"index_type\": \"IVF_FLAT\",\n\"params\": {\"nlist\": 1024},\n\"metric_type\": \"IP\"\n}\ncollection.create_index(field_name='vector', index_params=index_param)\nembeddings_float = embeddings.float()  #here is change type\ncollection.insert([embeddings_float.tolist()])  #but  expected: FLOAT_VECTOR, got DOUBLE\nAnything else?\nPlease help me", "created_at": "2023-10-12", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "GzRichChen"}
{"issue_number": 1730, "issue_title": "[Bug]: Wrong pagination when using collections with partitions", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI have a collection with N partitions and when I search in a paginated way (with offset and limit) I'm experiencing 2 main problems:\n\nsame chunk can appear in different \"pages\"\ngiven a query Q and 2 chunks C1 and C2 with distance(Q, C1)=10 and distance(Q, C2)=20, I'll get C2 before C1, clearly in 2 different \"pages\" (i.e. .search() calls)\n\nExpected Behavior\nNo duplicates and always return chunks ordered from least distant to most distant\nSteps/Code To Reproduce behavior\nI've uploaded 2 notebooks here to reproduce: https://github.com/antoniolanza1996/miscellaneous/tree/master/pymilvus/issues/1730\nAs you can see in the 1-ingest_and_pagination_search_with_offset_and_limit.ipynb notebook I correctly create a collection with a partition. Then, when I do a pagination search using offset I get some anomalies:\n\n\nsame chunk can appear in different \"pages\"\n\n\n`15) chunk_id=7319, score=1354.885498046875, text=my text for chunk 7319...`\n`23) chunk_id=7319, score=1354.885498046875, text=my text for chunk 7319...`\n\n\n\ngiven a query Q and 2 chunks C1 and C2 with distance(Q, C1)=10 and distance(Q, C2)=20, I'll get C2 before C1, clearly in 2 different \"pages\" (i.e. .search() calls)\n\n\n`15) chunk_id=7319, score=1354.885498046875, text=my text for chunk 7319...`\n`16) chunk_id=7530, score=1346.193359375, text=my text for chunk 7530...`\n\nInstead, in the 2-ingest_without_partitions_and_pagination_search_with_offset_and_limit.ipynb notebook I correctly create a collection without partitions. Then, when I do a pagination search using offset, all seems good.\nNote: I'm using langchain that simply wraps this pymilvus library\nEnvironment details\n- Method of installation (Docker, or from source): Milvus Cluster\n- Milvus version (v0.3.1, or v0.4.0): 2.3.0\nAnything else?\nNo response", "created_at": "2023-10-11", "closed_at": null, "labels": [], "State": "open", "Author": "antoniolanza1996"}
{"issue_number": 1729, "issue_title": "[Bug]: connect milvus timeout\uff0cwhen use gevent and grpc", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-10-11", "closed_at": null, "labels": [], "State": "open", "Author": "JohnJyong"}
{"issue_number": 1728, "issue_title": "[Bug]: COSINE metric type not supported", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I use the code below to create a collection and create index for it\n        from pymilvus import Collection, DataType, FieldSchema, CollectionSchema\n        collection_name = \"some_collection\"\n        id_field = FieldSchema(name=\"id\", dtype=DataType.INT64,\n                               is_primary=True, description=\"auto id\")\n        category_field = FieldSchema(\n            name=\"category\", dtype=DataType.VARCHAR, max_length=65535, description=\"description of object\")\n        created_at_field = FieldSchema(\n            name=\"created_at\", dtype=DataType.INT64,  description=\"unix seconds, publish time\")\n        vector_field = FieldSchema(\n            name=\"vector\", dtype=DataType.FLOAT_VECTOR, dim=VISUAL_EMBEDDING_DIM)\n\n        schema = CollectionSchema(fields=[id_field, category_field, created_at_field, vector_field],\n                                  auto_id=True,\n                                  description=\"Knowledge base that contians \")\n        collection = Collection(\n            name=collection_name, schema=schema)\n        index_params = {\"index_type\": \"FLAT\", \"metric_type\": \"COSINE\", \"params\": {\"nlist\": self.nlist}}\n        collection.create_index(\n            field_name=vector_field.name, index_params=index_params)\n\nI got error\nRPC error: [create_index], <MilvusException: (code=1, message=metric type not found or not supported, supported: [L2 IP])>, <Time:{'RPC start': '2023-10-09 04:02:01.609395', 'RPC error': '2023-10-09 04:02:01.629531'}>\n\nIt seems to indicate \"COSINE\" is not supported.\nExpected Behavior\nFrom the doc, https://milvus.io/docs/metric.md#Cosine-Similarity, COSINE should be supported\nSteps/Code To Reproduce behavior\nRun the code below:\n        from pymilvus import Collection, DataType, FieldSchema, CollectionSchema\n        collection_name = \"some_collection\"\n        id_field = FieldSchema(name=\"id\", dtype=DataType.INT64,\n                               is_primary=True, description=\"auto id\")\n        category_field = FieldSchema(\n            name=\"category\", dtype=DataType.VARCHAR, max_length=65535, description=\"description of object\")\n        created_at_field = FieldSchema(\n            name=\"created_at\", dtype=DataType.INT64,  description=\"unix seconds, publish time\")\n        vector_field = FieldSchema(\n            name=\"vector\", dtype=DataType.FLOAT_VECTOR, dim=VISUAL_EMBEDDING_DIM)\n\n        schema = CollectionSchema(fields=[id_field, category_field, created_at_field, vector_field],\n                                  auto_id=True,\n                                  description=\"Knowledge base that contians \")\n        collection = Collection(\n            name=collection_name, schema=schema)\n        index_params = {\"index_type\": \"FLAT\", \"metric_type\": \"COSINE\", \"params\": {\"nlist\": self.nlist}}\n        collection.create_index(\n            field_name=vector_field.name, index_params=index_params)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\nMacOS\n- Method of installation (Docker, or from source):\nDocker\n- Milvus version (v0.3.1, or v0.4.0):\npymilvus is v2.3.1, milvus version is v2.2.9\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nDid more research by creating the index from Attu, got the same result:\n\nIs there anything I can do to enable COSINE metrics?\nNo response", "created_at": "2023-10-09", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "darthjaja6"}
{"issue_number": 1726, "issue_title": "[Bug]: Upsert on collection with Dynamic Schema enabled", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I try to upsert an entity on a collection that has dynamic schema enabled, I see the error message attached below:\n\nExpected Behavior\nWhen I do an upsert on a collection that has dynamic schema enabled, it should succeed.\nSteps/Code To Reproduce behavior\nfrom pymilvus import connections, Collection, FieldSchema, CollectionSchema, DataType, utility\n\nconnections.connect(host='localhost', port='19530')\n\nCOL_NAME = 'test_upsert_on_dynamic'\n\nif utility.has_collection(COL_NAME):\n    collection = Collection(COL_NAME)\nelse:\n    # 1. define fields\n    fields = [\n        FieldSchema(name=\"id\", dtype=DataType.VARCHAR, max_length=36, is_primary=True),\n        FieldSchema(name=\"title\", dtype=DataType.VARCHAR, max_length=512),\n        FieldSchema(name=\"embedding\", dtype=DataType.FLOAT_VECTOR, dim=512)\n    ]\n\n    # 2. enable dynamic schema in schema definition\n    schema = CollectionSchema(\n        fields,\n        'Testing upsert on Dynamic Schema',\n        enable_dynamic_field=True\n    )\n\n    # 3. reference the schema in a collection\n    collection = Collection(COL_NAME, schema)\n\n    # 4. index the vector field and load the collection\n    index_params = {\n        'index_type': 'AUTOINDEX',\n        'metric_type': 'L2',\n        'params': {}\n    }\n\n    collection.create_index(\n        field_name='embedding',\n        index_params=index_params\n    )\n\n# 5. load the collection\ncollection.load()\n\n# Insert some data\nimport random\nimport uuid\n\nentities = [\n    {\n        'id': str(uuid.uuid4()),\n        'title': f'title_{i}',\n        'embedding': [random.random() for _ in range(512)]\n    } for i in range(10)\n]\n\ncollection.insert(entities)\ncollection.flush()\n\n# Query the data which will be upserted\nquery_results = collection.query(\n    expr=f\"title == 'title_0'\",\n    output_fields=['title', 'embedding']\n)\n\n# Modify data\nfor res in query_results:\n    res['title'] = 'Modified Title'\n\n# Upsert\ncollection.upsert(query_results)\nEnvironment details\n- Ubuntu 20.04 LTS\n- Milvus version: 2.3.0 (Standalone)\n- Installation method: Docker (CPU version)\n- PyMilvus version: 2.3.1\nAnything else?\nNo response", "created_at": "2023-10-05", "closed_at": null, "labels": [], "State": "open", "Author": "vrtornisiello"}
{"issue_number": 1724, "issue_title": "[Bug]: Documentation error, variable capitalization (\"metric_type\": \"L2\")", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nIn the getting started documentation (https://milvus.io/docs/v2.0.x/example_code.md), the index is built with a capital \"L2\".\nindex = {\n    \"index_type\": \"IVF_FLAT\",\n    \"metric_type\": \"L2\",\n    \"params\": {\"nlist\": 128},\n}\nhello_milvus.create_index(\"embeddings\", index)\n\nIn the very next segment, the variable is referenced as lowercase.\nhello_milvus.load()\nvectors_to_search = entities[-1][-2:]\nsearch_params = {\n    \"metric_type\": \"l2\",\n    \"params\": {\"nprobe\": 10},\n}\nresult = hello_milvus.search(vectors_to_search, \"embeddings\", search_params, limit=3, output_fields=[\"random\"])\n\nThis results in a general exception:\nRPC error: [search], <MilvusException: (code=1, message=attempt #0: fail to Search, QueryNode ID=3, reason=collection:444581957070783752, metric type not match: expected=L2, actual=l2:\n\nChanging the l2 to L2 resolves the issue.\nExpected Behavior\nDocumentation should contain code samples that run without modificatoin.\nSteps/Code To Reproduce behavior\nRun the documentation sample code.\nEnvironment details\nWindows WSL, Ubuntu, pymilvus 2.2.16\nAnything else?\nNo response", "created_at": "2023-09-29", "closed_at": "2023-10-16", "labels": ["kind/bug", "documentation"], "State": "closed", "Author": "dannyOhNo"}
{"issue_number": 1722, "issue_title": "[Bug]: load(_refresh) command does not terminate and remains in a blocked state.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nI have followed the example below.\nhttps://github.com/milvus-io/pymilvus/blob/master/examples/example_bulkinsert_numpy.py\nHowever, load(_refresh=True) command does not terminate permanently.\nIn Attu, querying the entity is possible.\nWe can assume that the data has been loaded, but we cannot be certain if all the data has been loaded correctly.\nCould you please check this part?\n\nExpected Behavior\nThe load(_refresh) command is terminated after successfully loading all the data.\nSteps/Code To Reproduce behavior\nimport random\nimport json\nimport time\nimport os\nimport numpy as np\n\nfrom minio import Minio\nfrom minio.error import S3Error\n\nfrom pymilvus import (\n    connections,\n    FieldSchema, CollectionSchema, DataType,\n    Collection,\n    utility,\n    BulkInsertState,\n)\n\n# This example shows how to:\n#   1. connect to Milvus server\n#   2. create a collection\n#   3. create some numpy files for bulkinsert operation\n#   4. call do_bulk_insert()\n#   5. wait data to be consumed and indexed\n#   6. search\n\n# To run this example\n# 1. start a standalone milvus(version >= v2.2.9) instance locally\n#    make sure the docker-compose.yml has exposed the minio console:\n#         minio:\n#           ......\n#           ports:\n#             - \"9000:9000\"\n#             - \"9001:9001\"\n#           command: minio server /minio_data --console-address \":9001\"\n#\n# 2. pip3 install minio\n\n# Local path to generate Numpy files\nLOCAL_FILES_PATH = \"/tmp/milvus_bulkinsert/\"\n\n# Milvus service address\n_HOST = ''\n_PORT = ''\n\n# Const names\n_COLLECTION_NAME = 'demo_bulk_insert_npy'\n_ID_FIELD_NAME = 'id_field'\n_VECTOR_FIELD_NAME = 'float_vector_field'\n_JSON_FIELD_NAME = \"json_field\"\n_VARCHAR_FIELD_NAME = \"varchar_field\"\n_DYNAMIC_FIELD_NAME = \"$meta\"     # dynamic field, the internal name is \"$meta\", enable_dynamic_field=True\n\n# minio\nDEFAULT_BUCKET_NAME = \"milvus-bucket\"\nMINIO_ADDRESS = \"\"\nMINIO_SECRET_KEY = \"minioadmin\"\nMINIO_ACCESS_KEY = \"minioadmin\"\n\n# Vector field parameter\n_DIM = 128\n\n# to generate increment ID\nid_start = 1\n\n# Create a Milvus connection\ndef create_connection():\n    retry = True\n    while retry:\n        try:\n            print(f\"\\nCreate connection...\")\n            connections.connect(host=_HOST, port=_PORT)\n            retry = False\n        except Exception as e:\n            print(\"Cannot connect to Milvus. Error: \" + str(e))\n            print(f\"Cannot connect to Milvus. Trying to connect Again. Sleeping for: 1\")\n            time.sleep(1)\n\n    print(f\"\\nList connections:\")\n    print(connections.list_connections())\n\n\n# Create a collection\ndef create_collection(has_partition_key: bool):\n    field1 = FieldSchema(name=_ID_FIELD_NAME, dtype=DataType.INT64, description=\"int64\", is_primary=True, auto_id=False)\n    field2 = FieldSchema(name=_VECTOR_FIELD_NAME, dtype=DataType.FLOAT_VECTOR, description=\"float vector\", dim=_DIM,\n                         is_primary=False)\n    field3 = FieldSchema(name=_JSON_FIELD_NAME, dtype=DataType.JSON)\n    # if has partition key, we use this varchar field as partition key field\n    field4 = FieldSchema(name=_VARCHAR_FIELD_NAME, dtype=DataType.VARCHAR, max_length=256, is_partition_key=has_partition_key)\n    schema = CollectionSchema(fields=[field1, field2, field3, field4], enable_dynamic_field=True)\n    if has_partition_key:\n        collection = Collection(name=_COLLECTION_NAME, schema=schema, num_partitions=10)\n    else:\n        collection = Collection(name=_COLLECTION_NAME, schema=schema)\n    print(\"\\nCollection created:\", _COLLECTION_NAME)\n    return collection\n\n\n# Test existence of a collection\ndef has_collection():\n    return utility.has_collection(_COLLECTION_NAME)\n\n\n# Drop a collection in Milvus\ndef drop_collection():\n    collection = Collection(_COLLECTION_NAME)\n    collection.drop()\n    print(\"\\nDrop collection:\", _COLLECTION_NAME)\n\n\n# List all collections in Milvus\ndef list_collections():\n    print(\"\\nList collections:\")\n    print(utility.list_collections())\n\n# Generate a column-based data numpy file for each field.\n# If primary key is not auto-id, bulkinsert requires a numpy file for the primary key field. For auto-id primary key, you don't need to provide this file.\n# For dynamic field, provide a numpy file with name \"$meta.npy\" to store dynamic values. No need to provide this file if you have no dynamic value to import.\n# For JSON type field, the numpy file must be a list of strings, each string is in JSON format. For example: [\"{\\\"a\\\": 1}\", \"{\\\"b\\\": 2}\", \"{\\\"c\\\": 3}\"]\n# The dynamic field is also a JSON type field, the \"$meta.npy\" must be a list of strings in JSON format. For example: [\"{}\", \"{\\\"x\\\": 100, \\\"y\\\": true}\", \"{\\\"z\\\": 3.14}\"]\n# The row count of each numpy file must be equal.\ndef gen_npy_columnbased(num: int, path: str):\n    # make sure the files folder is created\n    os.makedirs(name=path, exist_ok=True)\n\n    global id_start\n    id_array = [id_start + i for i in range(num)]\n    vec_array = [[round(random.random(), 6) for _ in range(_DIM)] for _ in range(num)]\n    json_array = [json.dumps({\"Number\": id_start + i, \"Name\": \"book_\"+str(id_start + i)}) for i in range(num)]\n    varchar_array = [\"description_{}\".format(id_start + i) for i in range(num)]\n    dynamic_array = [json.dumps({\"dynamic_{}\".format(id_start + i): True}) for i in range(num)]\n    id_start = id_start + num\n\n    file_list = []\n    # numpy file for _ID_FIELD_NAME\n    file_path = os.path.join(path, _ID_FIELD_NAME+\".npy\")\n    file_list.append(file_path)\n    np.save(file_path, id_array)\n    print(\"Generate column-based numpy file:\", file_path)\n\n    # numpy file for _VECTOR_FIELD_NAME\n    file_path = os.path.join(path, _VECTOR_FIELD_NAME+\".npy\")\n    file_list.append(file_path)\n    np.save(file_path, vec_array)\n    print(\"Generate column-based numpy file:\", file_path)\n\n    # numpy file for _JSON_FIELD_NAME\n    file_path = os.path.join(path, _JSON_FIELD_NAME+\".npy\")\n    file_list.append(file_path)\n    np.save(file_path, json_array)\n    print(\"Generate column-based numpy file:\", file_path)\n\n    # numpy file for _VARCHAR_FIELD_NAME\n    file_path = os.path.join(path, _VARCHAR_FIELD_NAME + \".npy\")\n    file_list.append(file_path)\n    np.save(file_path, varchar_array)\n    print(\"Generate column-based numpy file:\", file_path)\n\n    # numpy file for dynamic field\n    file_path = os.path.join(path, _DYNAMIC_FIELD_NAME + \".npy\")\n    file_list.append(file_path)\n    np.save(file_path, dynamic_array)\n    print(\"Generate column-based numpy file:\", file_path)\n\n    return file_list\n\n# Generate numpy files and upload files to minio, then call the do_bulk_insert()\ndef bulk_insert_columnbased(row_count_per_file, file_count, partition_name = None):\n    # make sure the files folder is created\n    os.makedirs(name=LOCAL_FILES_PATH, exist_ok=True)\n\n    task_ids = []\n    for i in range(file_count):\n        data_folder = os.path.join(LOCAL_FILES_PATH, \"columns_{}\".format(i))\n        os.makedirs(name=data_folder, exist_ok=True)\n        file_list = gen_npy_columnbased(row_count_per_file, data_folder)\n\n        ok, remote_files = upload(data_folder=data_folder)\n        if ok:\n            print(\"Import column-based files:\", remote_files)\n            task_id = utility.do_bulk_insert(collection_name=_COLLECTION_NAME,\n                                             partition_name=partition_name,\n                                             files=remote_files)\n            task_ids.append(task_id)\n\n    return wait_tasks_competed(task_ids)\n\n# Wait all bulk insert tasks to be a certain state\n# return the states of all the tasks, including failed task\ndef wait_tasks_to_state(task_ids, state_code):\n    wait_ids = task_ids\n    states = []\n    while True:\n        time.sleep(2)\n        temp_ids = []\n        for id in wait_ids:\n            state = utility.get_bulk_insert_state(task_id=id)\n            if state.state == BulkInsertState.ImportFailed or state.state == BulkInsertState.ImportFailedAndCleaned:\n                print(state)\n                print(\"The task\", state.task_id, \"failed, reason:\", state.failed_reason)\n                continue\n\n            if state.state >= state_code:\n                states.append(state)\n                continue\n\n            temp_ids.append(id)\n\n        wait_ids = temp_ids\n        if len(wait_ids) == 0:\n            break;\n        print(len(wait_ids), \"tasks not reach state:\", BulkInsertState.state_2_name.get(state_code, \"unknown\"), \", next round check\")\n\n    return states\n\n# If the state of bulkinsert task is BulkInsertState.ImportCompleted, that means the data file has been parsed and data has been persisted,\n# some segments have been created and waiting for index.\n# ImportCompleted state doesn't mean the data is queryable, to query the data, you need to wait until the segment is\n# indexed successfully and loaded into memory.\ndef wait_tasks_competed(task_ids):\n    print(\"=========================================================================================================\")\n    states = wait_tasks_to_state(task_ids, BulkInsertState.ImportCompleted)\n    complete_count = 0\n    for state in states:\n        if state.state == BulkInsertState.ImportCompleted:\n            complete_count = complete_count + 1\n        # print(state)\n        # if you want to get the auto-generated primary keys, use state.ids to fetch\n        # print(\"Auto-generated ids:\", state.ids)\n\n    print(\"{} of {} tasks have successfully generated segments, able to be compacted and indexed as normal\".format(complete_count, len(task_ids)))\n    print(\"=========================================================================================================\\n\")\n    return states\n\n# List all bulk insert tasks, including pending tasks, working tasks and finished tasks.\n# the parameter 'limit' is: how many latest tasks should be returned, if the limit<=0, all the tasks will be returned\ndef list_all_bulk_insert_tasks(collection_name=_COLLECTION_NAME, limit=0):\n    tasks = utility.list_bulk_insert_tasks(limit=limit, collection_name=collection_name)\n    print(\"=========================================================================================================\")\n    print(\"List bulk insert tasks with limit\", limit)\n    pending = 0\n    started = 0\n    persisted = 0\n    completed = 0\n    failed = 0\n    for task in tasks:\n        print(task)\n        if task.state == BulkInsertState.ImportPending:\n            pending = pending + 1\n        elif task.state == BulkInsertState.ImportStarted:\n            started = started + 1\n        elif task.state == BulkInsertState.ImportPersisted:\n            persisted = persisted + 1\n        elif task.state == BulkInsertState.ImportCompleted:\n            completed = completed + 1\n        elif task.state == BulkInsertState.ImportFailed:\n            failed = failed + 1\n    print(\"There are {} bulkinsert tasks: {} pending, {} started, {} persisted, {} completed, {} failed\"\n          .format(len(tasks), pending, started, persisted, completed, failed))\n    print(\"=========================================================================================================\\n\")\n\n# Get collection row count.\ndef get_entity_num(collection):\n    print(\"=========================================================================================================\")\n    print(\"The number of entity:\", collection.num_entities)\n\n# Specify an index type\ndef create_index(collection):\n    print(\"Start Creating index IVF_FLAT\")\n    index = {\n        \"index_type\": \"IVF_FLAT\",\n        \"metric_type\": \"L2\",\n        \"params\": {\"nlist\": 128},\n    }\n    collection.create_index(_VECTOR_FIELD_NAME, index)\n\n# Load collection data into memory. If collection is not loaded, the search() and query() methods will return error.\ndef load_collection(collection):\n    collection.load()\n\n# Release collection data to free memory.\ndef release_collection(collection):\n    collection.release()\n\n# ANN search\ndef search(collection, search_vector, expr = None, consistency_level = \"Eventually\"):\n    search_param = {\n        \"expr\": expr,\n        \"data\": [search_vector],\n        \"anns_field\": _VECTOR_FIELD_NAME,\n        \"param\": {\"metric_type\": \"L2\", \"params\": {\"nprobe\": 10}},\n        \"limit\": 5,\n        \"output_fields\": [_JSON_FIELD_NAME, _VARCHAR_FIELD_NAME, _DYNAMIC_FIELD_NAME],\n        \"consistency_level\": consistency_level,\n    }\n    print(\"search...\" if expr is None else \"hybrid search...\")\n    results = collection.search(**search_param)\n    print(\"=========================================================================================================\")\n    result = results[0]\n    for j, res in enumerate(result):\n        print(f\"\\ttop{j}: {res}\")\n    print(\"\\thits count:\", len(result))\n    print(\"=========================================================================================================\\n\")\n\n# Delete entities\ndef delete(collection, ids):\n    print(\"=========================================================================================================\\n\")\n    print(\"Delete these entities:\", ids)\n    expr = _ID_FIELD_NAME + \" in \" + str(ids)\n    collection.delete(expr=expr)\n    print(\"=========================================================================================================\\n\")\n\n# Retrieve entities\ndef retrieve(collection, ids):\n    print(\"=========================================================================================================\")\n    print(\"Retrieve these entities:\", ids)\n    expr = _ID_FIELD_NAME + \" in \" + str(ids)\n    result = collection.query(expr=expr, output_fields=[_JSON_FIELD_NAME, _VARCHAR_FIELD_NAME, _VECTOR_FIELD_NAME, _DYNAMIC_FIELD_NAME])\n    for item in result:\n        print(item)\n    print(\"=========================================================================================================\\n\")\n    return result\n\n# Upload data files to minio\ndef upload(data_folder: str,\n           bucket_name: str=DEFAULT_BUCKET_NAME)->(bool, list):\n    if not os.path.exists(data_folder):\n        print(\"Data path '{}' doesn't exist\".format(data_folder))\n        return False, []\n\n    remote_files = []\n    try:\n        print(\"Prepare upload files\")\n        minio_client = Minio(endpoint=MINIO_ADDRESS, access_key=MINIO_ACCESS_KEY, secret_key=MINIO_SECRET_KEY, secure=False)\n        found = minio_client.bucket_exists(bucket_name)\n        if not found:\n            print(\"MinIO bucket '{}' doesn't exist\".format(bucket_name))\n            return False, []\n\n        remote_data_path = \"milvus_bulkinsert\"\n        def upload_files(folder:str):\n            for parent, dirnames, filenames in os.walk(folder):\n                if parent is folder:\n                    for filename in filenames:\n                        ext = os.path.splitext(filename)\n                        if len(ext) != 2 or (ext[1] != \".json\" and ext[1] != \".npy\"):\n                            continue\n                        local_full_path = os.path.join(parent, filename)\n                        minio_file_path = os.path.join(remote_data_path, os.path.basename(folder), filename)\n                        minio_client.fput_object(bucket_name, minio_file_path, local_full_path)\n                        print(\"Upload file '{}' to '{}'\".format(local_full_path, minio_file_path))\n                        remote_files.append(minio_file_path)\n                    for dir in dirnames:\n                        upload_files(os.path.join(parent, dir))\n\n        upload_files(data_folder)\n\n    except S3Error as e:\n        print(\"Failed to connect MinIO server {}, error: {}\".format(MINIO_ADDRESS, e))\n        return False, []\n\n    print(\"Successfully upload files: {}\".format(remote_files))\n    return True, remote_files\n\n\ndef main(has_partition_key: bool):\n    # create a connection\n    create_connection()\n\n    # drop collection if the collection exists\n    if has_collection():\n        drop_collection()\n\n    # create collection\n    collection = create_collection(has_partition_key)\n\n    # specify an index type\n    create_index(collection)\n\n    # load data to memory\n    load_collection(collection)\n\n    # show collections\n    list_collections()\n\n    # do bulk_insert, wait all tasks finish persisting\n    bulk_insert_columnbased(row_count_per_file=100000, file_count=2)\n\n    # list all tasks\n    list_all_bulk_insert_tasks()\n\n    # get the number of entities\n    get_entity_num(collection)\n\n    # print(\"Waiting index complete and refresh segments list to load...\")\n    print(\"Start to wait_for_index_building_complete.\")\n    utility.wait_for_index_building_complete(_COLLECTION_NAME)\n    print(\"Finish to wait_for_index_building_complete.\")\n    print(\"Start to load with _refresh=True\")\n    collection.load(_refresh = True)\n    print(\"Finish to load with _refresh=True\")\n\n    # pick some entities\n    delete_ids = [50, 100]\n    id_vectors = retrieve(collection, delete_ids)\n\n    # search in entire collection\n    for id_vector in id_vectors:\n        id = id_vector[_ID_FIELD_NAME]\n        vector = id_vector[_VECTOR_FIELD_NAME]\n        print(\"Search id:\", id, \", compare this id to the top0 of search result, they are equal\")\n        search(collection, vector)\n\n    # delete the picked entities\n    delete(collection, delete_ids)\n\n    # search the deleted entities to check existence\n    for id_vector in id_vectors:\n        id = id_vector[_ID_FIELD_NAME]\n        vector = id_vector[_VECTOR_FIELD_NAME]\n        print(\"Search id:\", id, \", compare this id to the top0 result, they are not equal since the id has been deleted\")\n        # here we use Stong consistency level to do search, because we need to make sure the delete operation is applied\n        search(collection, vector, consistency_level=\"Strong\")\n\n    # search by filtering the varchar field\n    vector = [round(random.random(), 6) for _ in range(_DIM)]\n    search(collection, vector, expr=\"{} like \\\"description_8%\\\"\".format(_VARCHAR_FIELD_NAME))\n\n    # release memory\n    release_collection(collection)\n\n    # drop collection\n    drop_collection()\n\n\nif __name__ == '__main__':\n    # change this value if you want to test bulkinert with partition key\n    # Note: bulkinsert supports partition key from Milvus v2.2.12\n    has_partition_key = False\n    main(has_partition_key)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source): Milvus cluster using Helm,\n- Milvus version (v2.2.13): (pymilvus==2.3.0)\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-09-26", "closed_at": "2023-09-26", "labels": ["kind/question"], "State": "closed", "Author": "chlee1016"}
{"issue_number": 1720, "issue_title": "[Bug]: ModuleNotFoundError: No module named 'milvus'", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen I do \"python -c \"from milvus import Milvus, DataType\"\" I get \"ModuleNotFoundError: No module named 'milvus'\"\nI am using\n\"\n[tool.poetry.dependencies]\npython = \">=3.9,<3.13\"\npandas = \"^2.1.1\"\nsentence-transformers = \"^2.2.2\"\ntorch = \"^2.0.1\"\npymilvus = \"^2.3.1\"\nsetuptools = \"^68.2.2\"\n\"\n\nwhith pymilvus version \"'2.3.1'\" and I can import \"from pymilvus import Milvus, DataType\" but the \"MetricType\"; in the documentation here  only \"pip install pymilvus\" is used but later, \"milvus\" is used.\nExpected Behavior\njust to import successfully according to the documentation !\nSteps/Code To Reproduce behavior\nNA\nEnvironment details\n- I am using mac OS Monterey\n- I have milvus server running through docker and would like to connect using pymilvus\nAnything else?\nNA", "created_at": "2023-09-24", "closed_at": "2023-09-25", "labels": ["kind/question"], "State": "closed", "Author": "naarkhoo"}
{"issue_number": 1797, "issue_title": "[Bug]: Incorrect metrics judgement for searchIterator", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-11-22", "closed_at": null, "labels": [], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 1796, "issue_title": "[QUESTION]: \u4f7f\u7528python\u591a\u8fdb\u7a0b\u63d2\u5165\u6570\u636e\u65f6\uff0c\u7b2c\u4e00\u6b21\u521b\u5efacollection\u63d2\u5165\u6ca1\u95ee\u9898\uff0c\u5728\u73b0\u6709\u7684collection\u57fa\u7840\u4e0a\u63d2\u5165\u62a5warning\u8fde\u63a5\u4e0d\u4e0amilvus", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nwarning\u4fe1\u606f\uff1aReceived a GOAWAY with error code ENHANCE_YOUR_CALM and debug data equal to \"too_many_pings\". Current keepalive time (before throttling): 55000ms\nAnything else?\nNo response", "created_at": "2023-11-22", "closed_at": null, "labels": [], "State": "open", "Author": "Aristomd"}
{"issue_number": 1794, "issue_title": "[Bug]: Milvus AttributeError: JSON", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI have used this same code given in the website docs Still it gives the error - https://milvus.io/docs/json_data_type.md#Define-JSON-field:~:text=FieldSchema(name%3D%22article_meta%22%2C%20dtype%3DDataType.JSON)%2C\n      2 from pymilvus import connections, Collection, FieldSchema, CollectionSchema, DataType\n      4 connections.connect(host='localhost', port='19530')\n      6 fields = [\n      7     FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=True, max_length=100),\n      8     # FieldSchema(name=\"title\", dtype=DataType.VARCHAR, max_length=512),\n      9     FieldSchema(name=\"values\", dtype=DataType.FLOAT_VECTOR, dim=768),\n---> 10     FieldSchema(name=\"metadata\", dtype=DataType.JSON),\n     11 ]\n     12 schema = CollectionSchema(\n     13         fields, \n     14         \"The schema for a medium news collection\", \n     15         enable_dynamic_field=False # Optional, defaults to 'False'.\n     16 )\n     17 collection = Collection(name=\"tw_articles_with_json\", schema=schema)\n\nFile ~/anaconda3/envs/llama/lib/python3.9/enum.py:429, in EnumMeta.__getattr__(cls, name)\n    427     return cls._member_map_[name]\n    428 except KeyError:\n--> 429     raise AttributeError(name) from None\n\nAttributeError: JSON\n\n\nExpected Behavior\nIt must import JSON format as specified but it is not happening\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-11-20", "closed_at": "2023-12-12", "labels": [], "State": "closed", "Author": "shrijayan"}
{"issue_number": 1793, "issue_title": "[Bug]: search iterator support radius and range_filter", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ncurrently, search iterator doesn't allow setting up radius and range filter parameters by users. We need to support this feature/\nExpected Behavior\nWhen doing iteration, returned result should not exceed the range defined by users with [radius, range_filter]\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-11-20", "closed_at": null, "labels": [], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 1791, "issue_title": "[QUESTION]: \u7528expr\u8fdb\u884c\u6807\u91cf\u67e5\u8be2\u65f6\u80fd\u591f\u51fa\u5185\u5bb9\uff0c\u628aexpr\u52a0\u5165\u5230\u5411\u91cf\u67e5\u8be2\u4e2d\u8fdb\u884c\u6df7\u5408\u67e5\u8be2\u65f6\uff0c\u67e5\u8be2\u4e0d\u51fa\u6765\u5185\u5bb9", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\n\u7528expr\u8fdb\u884c\u6807\u91cf\u67e5\u8be2\u65f6\u80fd\u591f\u51fa\u5185\u5bb9\uff0c\u628aexpr\u52a0\u5165\u5230\u5411\u91cf\u67e5\u8be2\u4e2d\u8fdb\u884c\u6df7\u5408\u67e5\u8be2\u65f6\uff0c\u67e5\u8be2\u4e0d\u51fa\u6765\u5185\u5bb9\uff0c\u611f\u8c22\u5e2e\u5fd9\u89e3\u7b54\u4e00\u4e0b\nAnything else?\nNo response", "created_at": "2023-11-17", "closed_at": null, "labels": [], "State": "open", "Author": "Aristomd"}
{"issue_number": 1790, "issue_title": "[Bug]: RESTFUL describe collection should return enableDynamicField: true/false", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwe found enableDynamic from the response of API: /v1/vector/collections/describe, rather than enableDynamicField as what Doc:Describe Collection said\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Milvus version (v0.3.1, or v0.4.0): v2.2-latest & v2.3-latest\nAnything else?\nNo response", "created_at": "2023-11-16", "closed_at": "2023-11-16", "labels": [], "State": "closed", "Author": "PowderLi"}
{"issue_number": 1789, "issue_title": " AttributeError: module 'pymilvus.orm.utility' has no attribute 'bulk_load'", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I run code from https://milvus.io/docs/import_data.md#:~:text=from%20pymilvus%20import%20utility%0Atasks%20%3D%20utility.bulk_load(%0A%20%20%20%20collection_name%3D%22book%22%2C%0A%20%20%20%20is_row_based%3DFalse%2C%0A%20%20%20%20files%3D%5B%22columns.json%22%2C%20%22book_intro.npy%22%5D%0A)\nfrom pymilvus import utility\ntasks = utility.bulk_load(\n    collection_name=\"book\",\n    is_row_based=False,\n    files=[\"columns.json\", \"book_intro.npy\"]\n)\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\nNo response\nAnything else?\nNo response", "created_at": "2023-11-15", "closed_at": "2023-12-12", "labels": ["kind/question"], "State": "closed", "Author": "shrijayan"}
{"issue_number": 1788, "issue_title": "[FEATURE]: Will the ARM64 architecture be supported in the future?\u662f\u5426\u80fd\u591f\u652f\u6301arm64\u67b6\u6784\uff1f", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nWhen I try to link the milvus service I get the following error\nconnections.connect(\n  alias=\"default\",\n  user='root',\n  password='',\n  host='localhost',\n  port='19530'\n)\nconnections.disconnect('default')\n\nImportError: dlopen(/Library/Python/3.9/site-packages/_cffi_backend.cpython-39-darwin.so, 0x0002): tried: '/Library/Python/3.9/site-packages/_cffi_backend.cpython-39-darwin.so' (mach-o file, but is an incompatible architecture (have 'arm64', need 'x86_64')), '/System/Volumes/Preboot/Cryptexes/OS/Library/Python/3.9/site-packages/_cffi_backend.cpython-39-darwin.so' (no such file), '/Library/Python/3.9/site-packages/_cffi_backend.cpython-39-darwin.so' (mach-o file, but is an incompatible architecture (have 'arm64', need 'x86_64'))\n\n#427 (comment)\nI have seen that in 2021, there was no attempt to do arm architecture. Is it still unable to meet the arm architecture today?\nIf yes, will it be adapted to the arm architecture in the future?\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-11-15", "closed_at": null, "labels": [], "State": "open", "Author": "iumean"}
{"issue_number": 1787, "issue_title": "[Bug]: Error message of connection failure is confusing", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\"My code snippet is:\nconnections.connect('default', uri=f\"{host}:{port}\", token=f\"{user}:{password}\")\nHowever, when I enter an incorrect password, the error message is misleading:\npymilvus.exceptions.ConnectionConfigException: <ConnectionConfigException: (code=1, message=Illegal uri: [https//xxx:19530], expected form 'http[s]://[user:password@]example.com:12345')>\n\nThis message inaccurately suggests that the error is due to an improperly formatted URI. In reality, the issue is caused by the wrong password. Therefore, this error message is not helpful for debugging and instead leads the user astray.\"\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\npymilvus==2.3.0.post1.dev4", "created_at": "2023-11-15", "closed_at": "2023-11-15", "labels": [], "State": "closed", "Author": "zhuwenxing"}
{"issue_number": 1785, "issue_title": "[Bug]: The pymilvus data type inference fails to identify the ARRAY data type for lists.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe pymilvus data type inference fails to identify the ARRAY data type for lists.\nThis is the issue with infer_dtype_bydata function. I have observed it while using langchain vectorstore connector which uses this function to infer metadata types. The inference doesn't work for metadata with list of strings or booleans.\nExpected Behavior\ninfer_dtype_bydata should return Datatype.ARRAY for list like objects.\nSteps/Code To Reproduce behavior\nCall `infer_dtype_bydata([\"A\", \"B\"])` returns DataType.UNKNOWN instead of DataType.ARRAY\nEnvironment details\nNo response\nAnything else?\nNo response", "created_at": "2023-11-15", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "abratnap"}
{"issue_number": 1784, "issue_title": "[FEATURE]: high level interface support partitioned data", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\n\nexists interfaces need to add a parameter named: partitionName\ndescribe collection need to show the partition information\nadd some new interfaces related to partition\n\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-11-14", "closed_at": null, "labels": [], "State": "open", "Author": "PowderLi"}
{"issue_number": 1783, "issue_title": "[FEATURE]: new High Level interfaces", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nadd some new high-level interfaces: upsert ...\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-11-14", "closed_at": null, "labels": [], "State": "open", "Author": "PowderLi"}
{"issue_number": 1782, "issue_title": "[Bug]: Name of field dont match", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI am inserting data into milvus using pymilvus, using DataFrames\nThis has been working fine, unitl version 2.3.2\nThere is this new check implemented\nhttps://github.com/milvus-io/pymilvus/blob/v2.3.2/pymilvus/orm/schema.py#L438\nWhich compares fields in schema to fields in DataFrame, but since they are being zipped the order needs to match exactly which feels unnecessary. Its comparing names of fields in self._schema and I have no idea what order the fields are returned in, in that case. So right now it seems I would need to know the exact order of fields in schema, make sure my DataFrame matches that exactly, which is really weird. Perhaps can just check that the same fields are in both, but not the order. Also in this case I have a auto increment primary key int field, which Im guessing is in self._schema but I am not including that in my DataFrame of course. Seems like that would cause problems as well.\nEDIT - I see that primary fields are popped from this list so that part should be ok\nhttps://github.com/milvus-io/pymilvus/blob/v2.3.2/pymilvus/orm/schema.py#L421\nExpected Behavior\nI am able to insert data using DataFrames, without worrying about the exact order of the columns, and how to get them to match to the order of what is returned from self._schema (of a Collection)\nSteps/Code To Reproduce behavior\nInsert a DataFrame into a collection. If it works, you can re-order the columns of the DataFrame and it should fail.\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-11-13", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "hakan458"}
{"issue_number": 1781, "issue_title": "[Bug]: \u793a\u4f8b\u4e2dsearch\u65b9\u6cd5\u7684limit\u6ca1\u80fd\u9650\u5236\u8fd4\u56de\u6570", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\u4ee3\u7801\u4e2dlimit=3\uff0c\u4f46\u603b\u5171\u8fd4\u56de\u4e86\u516d\u6761\u6570\u636e\n\n\u8fd9\u6bb5\u4ee3\u7801\u662f\u5b98\u65b9\u793a\u4f8b\u4e2d\u7684hello_milvus.py\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): CPU\n- Method of installation (Docker, or from source): Docker\n- Milvus version (v0.3.1, or v0.4.0): v2.3.3  pymilvus: v2.3.3\nAnything else?\nNo response", "created_at": "2023-11-13", "closed_at": "2023-11-14", "labels": ["kind/question"], "State": "closed", "Author": "liang09255"}
{"issue_number": 1780, "issue_title": "[Bug]: protobuf version conflicts.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen connections.connect(host='localhost', port='19530')\nit say protobuf need 3.20.0\nbut grpcio-tools need protobuf 4.25.0\nand pymilvus-distributed need grpcio-tools\nand pymilvus-orm need  pymilvus-distributed\nthen i update or Downgrade protobuf also failed\nprotobuf need by\nRequired-by: dm-control, grpcio-tools, mlagents-envs, onnx, onnxruntime, pymilvus, ray, tensorboard, tensorboardX, wandb    very model need protobuf\n4.25.0 + version\nExpected Behavior\nmilvus use protobuf 4.25.0+\nSteps/Code To Reproduce behavior\ncode:\nfrom pymilvus_orm import connections, FieldSchema, CollectionSchema, DataType, Collection\n\n# \u8fde\u63a5milvus\u670d\u52a1\u5668\nconnections.connect(host='localhost', port='19530')\n\n\nTypeError                                 Traceback (most recent call last)\n/home/xzpwsl2/my/work/milvus/example_code_orm.ipynb \u5355\u5143\u683c 1 line 1\n----> 1 from pymilvus_orm import connections, FieldSchema, CollectionSchema, DataType, Collection\n      3 # \u8fde\u63a5milvus\u670d\u52a1\u5668\n      4 connections.connect(host='localhost', port='19530')\n\nFile ~/.local/lib/python3.10/site-packages/pymilvus_orm/__init__.py:12\n      1 # Copyright (C) 2019-2020 Zilliz. All rights reserved.\n      2 #\n      3 # Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n   (...)\n      9 # is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n     10 # or implied. See the License for the specific language governing permissions and limitations under the License.\n---> 12 from .collection import Collection\n     13 from .connections import *\n     14 from .index import Index\n\nFile ~/.local/lib/python3.10/site-packages/pymilvus_orm/collection.py:12\n      1 # Copyright (C) 2019-2020 Zilliz. All rights reserved.\n      2 #\n      3 # Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n   (...)\n      9 # is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n     10 # or implied. See the License for the specific language governing permissions and limitations under the License.\n---> 12 from . import connections\n     13 from .schema import CollectionSchema, FieldSchema\n     14 import pandas\n\nFile ~/.local/lib/python3.10/site-packages/pymilvus_orm/connections.py:12\n      1 # Copyright (C) 2019-2020 Zilliz. All rights reserved.\n      2 #\n      3 # Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n   (...)\n      9 # is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n     10 # or implied. See the License for the specific language governing permissions and limitations under the License.\n---> 12 from milvus import Milvus\n     13 from .default_config import DefaultConfig\n     16 class Connections(object):\n\nFile ~/.local/lib/python3.10/site-packages/milvus/__init__.py:3\n      1 # -*- coding: utf-8 -*-\n----> 3 from .client.stub import Milvus\n      4 from .client.prepare import Prepare\n      5 from .client.types import Status, DataType, RangeType, IndexType, MetricType\n\nFile ~/.local/lib/python3.10/site-packages/milvus/client/stub.py:13\n     11 from .types import Status, DataType, DeployMode\n     12 from .check import check_pass_param, is_legal_host, is_legal_port, is_legal_index_metric_type, is_legal_binary_index_metric_type\n---> 13 from .pool import ConnectionPool, SingleConnectionPool, SingletonThreadPool\n     14 from .exceptions import BaseException, ParamError, DeprecatedError\n     16 from ..settings import DefaultConfig as config\n\nFile ~/.local/lib/python3.10/site-packages/milvus/client/pool.py:11\n      8 from collections import defaultdict\n     10 from . import __version__\n---> 11 from .grpc_handler import GrpcHandler, RegistryHandler\n     12 from .http_handler import HttpHandler\n     13 from milvus.client.exceptions import ConnectionPoolError, NotConnectError, VersionError\n\nFile ~/.local/lib/python3.10/site-packages/milvus/client/grpc_handler.py:12\n      9 import grpc\n     10 from grpc._cython import cygrpc\n---> 12 from ..grpc_gen import common_pb2 as common_types\n     13 from ..grpc_gen import milvus_pb2_grpc\n     14 from ..grpc_gen import milvus_pb2 as milvus_types\n\nFile ~/.local/lib/python3.10/site-packages/milvus/grpc_gen/common_pb2.py:33\n     14 _sym_db = _symbol_database.Default()\n     19 DESCRIPTOR = _descriptor.FileDescriptor(\n     20   name='common.proto',\n     21   package='milvus.proto.common',\n   (...)\n     24   serialized_pb=_b('\\n\\x0c\\x63ommon.proto\\x12\\x13milvus.proto.common\\\"L\\n\\x06Status\\x12\\x32\\n\\nerror_code\\x18\\x01 \\x01(\\x0e\\x32\\x1e.milvus.proto.common.ErrorCode\\x12\\x0e\\n\\x06reason\\x18\\x02 \\x01(\\t\\\"*\\n\\x0cKeyValuePair\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t\\\"\\x15\\n\\x04\\x42lob\\x12\\r\\n\\x05value\\x18\\x01 \\x01(\\x0c\\\"#\\n\\x07\\x41\\x64\\x64ress\\x12\\n\\n\\x02ip\\x18\\x01 \\x01(\\t\\x12\\x0c\\n\\x04port\\x18\\x02 \\x01(\\x03\\\"m\\n\\x07MsgBase\\x12.\\n\\x08msg_type\\x18\\x01 \\x01(\\x0e\\x32\\x1c.milvus.proto.common.MsgType\\x12\\r\\n\\x05msgID\\x18\\x02 \\x01(\\x03\\x12\\x11\\n\\ttimestamp\\x18\\x03 \\x01(\\x04\\x12\\x10\\n\\x08sourceID\\x18\\x04 \\x01(\\x03\\\"7\\n\\tMsgHeader\\x12*\\n\\x04\\x62\\x61se\\x18\\x01 \\x01(\\x0b\\x32\\x1c.milvus.proto.common.MsgBase*\\xa5\\x04\\n\\tErrorCode\\x12\\x0b\\n\\x07Success\\x10\\x00\\x12\\x13\\n\\x0fUnexpectedError\\x10\\x01\\x12\\x11\\n\\rConnectFailed\\x10\\x02\\x12\\x14\\n\\x10PermissionDenied\\x10\\x03\\x12\\x17\\n\\x13\\x43ollectionNotExists\\x10\\x04\\x12\\x13\\n\\x0fIllegalArgument\\x10\\x05\\x12\\x14\\n\\x10IllegalDimension\\x10\\x07\\x12\\x14\\n\\x10IllegalIndexType\\x10\\x08\\x12\\x19\\n\\x15IllegalCollectionName\\x10\\t\\x12\\x0f\\n\\x0bIllegalTOPK\\x10\\n\\x12\\x14\\n\\x10IllegalRowRecord\\x10\\x0b\\x12\\x13\\n\\x0fIllegalVectorID\\x10\\x0c\\x12\\x17\\n\\x13IllegalSearchResult\\x10\\r\\x12\\x10\\n\\x0c\\x46ileNotFound\\x10\\x0e\\x12\\x0e\\n\\nMetaFailed\\x10\\x0f\\x12\\x0f\\n\\x0b\\x43\\x61\\x63heFailed\\x10\\x10\\x12\\x16\\n\\x12\\x43\\x61nnotCreateFolder\\x10\\x11\\x12\\x14\\n\\x10\\x43\\x61nnotCreateFile\\x10\\x12\\x12\\x16\\n\\x12\\x43\\x61nnotDeleteFolder\\x10\\x13\\x12\\x14\\n\\x10\\x43\\x61nnotDeleteFile\\x10\\x14\\x12\\x13\\n\\x0f\\x42uildIndexError\\x10\\x15\\x12\\x10\\n\\x0cIllegalNLIST\\x10\\x16\\x12\\x15\\n\\x11IllegalMetricType\\x10\\x17\\x12\\x0f\\n\\x0bOutOfMemory\\x10\\x18\\x12\\x11\\n\\rIndexNotExist\\x10\\x19\\x12\\x12\\n\\rDDRequestRace\\x10\\xe8\\x07*e\\n\\nIndexState\\x12\\x12\\n\\x0eIndexStateNone\\x10\\x00\\x12\\x0c\\n\\x08Unissued\\x10\\x01\\x12\\x0e\\n\\nInProgress\\x10\\x02\\x12\\x0c\\n\\x08\\x46inished\\x10\\x03\\x12\\n\\n\\x06\\x46\\x61iled\\x10\\x04\\x12\\x0b\\n\\x07\\x44\\x65leted\\x10\\x05*X\\n\\x0cSegmentState\\x12\\x14\\n\\x10SegmentStateNone\\x10\\x00\\x12\\x0c\\n\\x08NotExist\\x10\\x01\\x12\\x0b\\n\\x07Growing\\x10\\x02\\x12\\n\\n\\x06Sealed\\x10\\x03\\x12\\x0b\\n\\x07\\x46lushed\\x10\\x04*\\xfa\\x05\\n\\x07MsgType\\x12\\r\\n\\tUndefined\\x10\\x00\\x12\\x14\\n\\x10\\x43reateCollection\\x10\\x64\\x12\\x12\\n\\x0e\\x44ropCollection\\x10\\x65\\x12\\x11\\n\\rHasCollection\\x10\\x66\\x12\\x16\\n\\x12\\x44\\x65scribeCollection\\x10g\\x12\\x13\\n\\x0fShowCollections\\x10h\\x12\\x14\\n\\x10GetSystemConfigs\\x10i\\x12\\x12\\n\\x0eLoadCollection\\x10j\\x12\\x15\\n\\x11ReleaseCollection\\x10k\\x12\\x14\\n\\x0f\\x43reatePartition\\x10\\xc8\\x01\\x12\\x12\\n\\rDropPartition\\x10\\xc9\\x01\\x12\\x11\\n\\x0cHasPartition\\x10\\xca\\x01\\x12\\x16\\n\\x11\\x44\\x65scribePartition\\x10\\xcb\\x01\\x12\\x13\\n\\x0eShowPartitions\\x10\\xcc\\x01\\x12\\x13\\n\\x0eLoadPartitions\\x10\\xcd\\x01\\x12\\x16\\n\\x11ReleasePartitions\\x10\\xce\\x01\\x12\\x11\\n\\x0cShowSegments\\x10\\xfa\\x01\\x12\\x14\\n\\x0f\\x44\\x65scribeSegment\\x10\\xfb\\x01\\x12\\x10\\n\\x0b\\x43reateIndex\\x10\\xac\\x02\\x12\\x12\\n\\rDescribeIndex\\x10\\xad\\x02\\x12\\x0e\\n\\tDropIndex\\x10\\xae\\x02\\x12\\x0b\\n\\x06Insert\\x10\\x90\\x03\\x12\\x0b\\n\\x06\\x44\\x65lete\\x10\\x91\\x03\\x12\\n\\n\\x05\\x46lush\\x10\\x92\\x03\\x12\\x0b\\n\\x06Search\\x10\\xf4\\x03\\x12\\x11\\n\\x0cSearchResult\\x10\\xf5\\x03\\x12\\x12\\n\\rGetIndexState\\x10\\xf6\\x03\\x12\\x1c\\n\\x17GetCollectionStatistics\\x10\\xf7\\x03\\x12\\x1b\\n\\x16GetPartitionStatistics\\x10\\xf8\\x03\\x12\\x10\\n\\x0bSegmentInfo\\x10\\xd8\\x04\\x12\\r\\n\\x08TimeTick\\x10\\xb0\\t\\x12\\x13\\n\\x0eQueryNodeStats\\x10\\xb1\\t\\x12\\x0e\\n\\tLoadIndex\\x10\\xb2\\t\\x12\\x0e\\n\\tRequestID\\x10\\xb3\\t\\x12\\x0f\\n\\nRequestTSO\\x10\\xb4\\t\\x12\\x14\\n\\x0f\\x41llocateSegment\\x10\\xb5\\t\\x12\\x16\\n\\x11SegmentStatistics\\x10\\xb6\\t\\x12\\x15\\n\\x10SegmentFlushDone\\x10\\xb7\\t*\\\"\\n\\x07\\x44slType\\x12\\x07\\n\\x03\\x44sl\\x10\\x00\\x12\\x0e\\n\\nBoolExprV1\\x10\\x01\\x42\\x42Z@github.com/zilliztech/milvus-distributed/internal/proto/commonpbb\\x06proto3')\n     25 )\n     27 _ERRORCODE = _descriptor.EnumDescriptor(\n     28   name='ErrorCode',\n     29   full_name='milvus.proto.common.ErrorCode',\n     30   filename=None,\n     31   file=DESCRIPTOR,\n     32   values=[\n---> 33     _descriptor.EnumValueDescriptor(\n     34       name='Success', index=0, number=0,\n     35       serialized_options=None,\n     36       type=None),\n     37     _descriptor.EnumValueDescriptor(\n     38       name='UnexpectedError', index=1, number=1,\n     39       serialized_options=None,\n     40       type=None),\n     41     _descriptor.EnumValueDescriptor(\n     42       name='ConnectFailed', index=2, number=2,\n     43       serialized_options=None,\n     44       type=None),\n     45     _descriptor.EnumValueDescriptor(\n     46       name='PermissionDenied', index=3, number=3,\n     47       serialized_options=None,\n     48       type=None),\n     49     _descriptor.EnumValueDescriptor(\n     50       name='CollectionNotExists', index=4, number=4,\n     51       serialized_options=None,\n     52       type=None),\n     53     _descriptor.EnumValueDescriptor(\n     54       name='IllegalArgument', index=5, number=5,\n     55       serialized_options=None,\n     56       type=None),\n     57     _descriptor.EnumValueDescriptor(\n     58       name='IllegalDimension', index=6, number=7,\n     59       serialized_options=None,\n     60       type=None),\n     61     _descriptor.EnumValueDescriptor(\n     62       name='IllegalIndexType', index=7, number=8,\n     63       serialized_options=None,\n     64       type=None),\n     65     _descriptor.EnumValueDescriptor(\n     66       name='IllegalCollectionName', index=8, number=9,\n     67       serialized_options=None,\n     68       type=None),\n     69     _descriptor.EnumValueDescriptor(\n     70       name='IllegalTOPK', index=9, number=10,\n     71       serialized_options=None,\n     72       type=None),\n     73     _descriptor.EnumValueDescriptor(\n     74       name='IllegalRowRecord', index=10, number=11,\n     75       serialized_options=None,\n     76       type=None),\n     77     _descriptor.EnumValueDescriptor(\n     78       name='IllegalVectorID', index=11, number=12,\n     79       serialized_options=None,\n     80       type=None),\n     81     _descriptor.EnumValueDescriptor(\n     82       name='IllegalSearchResult', index=12, number=13,\n     83       serialized_options=None,\n     84       type=None),\n     85     _descriptor.EnumValueDescriptor(\n     86       name='FileNotFound', index=13, number=14,\n     87       serialized_options=None,\n     88       type=None),\n     89     _descriptor.EnumValueDescriptor(\n     90       name='MetaFailed', index=14, number=15,\n     91       serialized_options=None,\n     92       type=None),\n     93     _descriptor.EnumValueDescriptor(\n     94       name='CacheFailed', index=15, number=16,\n     95       serialized_options=None,\n     96       type=None),\n     97     _descriptor.EnumValueDescriptor(\n     98       name='CannotCreateFolder', index=16, number=17,\n     99       serialized_options=None,\n    100       type=None),\n    101     _descriptor.EnumValueDescriptor(\n    102       name='CannotCreateFile', index=17, number=18,\n    103       serialized_options=None,\n    104       type=None),\n    105     _descriptor.EnumValueDescriptor(\n    106       name='CannotDeleteFolder', index=18, number=19,\n    107       serialized_options=None,\n    108       type=None),\n    109     _descriptor.EnumValueDescriptor(\n    110       name='CannotDeleteFile', index=19, number=20,\n    111       serialized_options=None,\n    112       type=None),\n    113     _descriptor.EnumValueDescriptor(\n    114       name='BuildIndexError', index=20, number=21,\n    115       serialized_options=None,\n    116       type=None),\n    117     _descriptor.EnumValueDescriptor(\n    118       name='IllegalNLIST', index=21, number=22,\n    119       serialized_options=None,\n    120       type=None),\n    121     _descriptor.EnumValueDescriptor(\n    122       name='IllegalMetricType', index=22, number=23,\n    123       serialized_options=None,\n    124       type=None),\n    125     _descriptor.EnumValueDescriptor(\n    126       name='OutOfMemory', index=23, number=24,\n    127       serialized_options=None,\n    128       type=None),\n    129     _descriptor.EnumValueDescriptor(\n    130       name='IndexNotExist', index=24, number=25,\n    131       serialized_options=None,\n    132       type=None),\n    133     _descriptor.EnumValueDescriptor(\n    134       name='DDRequestRace', index=25, number=1000,\n    135       serialized_options=None,\n    136       type=None),\n    137   ],\n    138   containing_type=None,\n    139   serialized_options=None,\n    140   serialized_start=388,\n    141   serialized_end=937,\n    142 )\n    143 _sym_db.RegisterEnumDescriptor(_ERRORCODE)\n    145 ErrorCode = enum_type_wrapper.EnumTypeWrapper(_ERRORCODE)\n\nFile ~/.local/lib/python3.10/site-packages/google/protobuf/descriptor.py:780, in EnumValueDescriptor.__new__(cls, name, index, number, type, options, serialized_options, create_key)\n    777 def __new__(cls, name, index, number,\n    778             type=None,  # pylint: disable=redefined-builtin\n    779             options=None, serialized_options=None, create_key=None):\n--> 780   _message.Message._CheckCalledFromGeneratedFile()\n    781   # There is no way we can build a complete EnumValueDescriptor with the\n    782   # given parameters (the name of the Enum is not known, for example).\n    783   # Fortunately generated files just pass it to the EnumDescriptor()\n    784   # constructor, which will ignore it, so returning None is good enough.\n    785   return None\n\nTypeError: Descriptors cannot be created directly.\nIf this call came from a _pb2.py file, your generated code is out of date and must be regenerated with protoc >= 3.19.0.\nIf you cannot immediately regenerate your protos, some other possible workarounds are:\n 1. Downgrade the protobuf package to 3.20.x or lower.\n 2. Set PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python (but this will use pure-Python parsing and will be much slower).\n\nMore information: https://developers.google.com/protocol-buffers/docs/news/2022-05-06#python-updates\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):wsl2 \n- Method of installation (Docker, or from source):Docker or source  I also try and same issue\n- Milvus version (v0.3.1, or v0.4.0):2.3.2\n- Milvus configuration (Settings you made in `server_config.yaml`):I donnot know\nAnything else?\nNo response", "created_at": "2023-11-11", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "xiezhipeng-git"}
{"issue_number": 1775, "issue_title": "[Bug]: error trying to install pymilvus - AttributeError: module 'pkgutil' has no attribute 'ImpImporter'. Did you mean: 'zipimporter'?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nRunning on Windows 10 Enterprise running Python 3.12.0:\npip install \"pymilvus>=2.3.1\"\nCauses the below error:\nERROR: Exception:\nTraceback (most recent call last):\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\cli\\base_command.py\", line 167, in exc_logging_wrapper\nstatus = run_func(*args)\n^^^^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\cli\\req_command.py\", line 205, in wrapper\nreturn func(self, options, args)\n^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\commands\\install.py\", line 285, in run\nsession = self.get_default_session(options)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\cli\\req_command.py\", line 75, in get_default_session\nself._session = self.enter_context(self._build_session(options))\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\cli\\req_command.py\", line 89, in build_session\nsession = PipSession(\n^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\network\\session.py\", line 282, in init\nself.headers[\"User-Agent\"] = user_agent()\n^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\network\\session.py\", line 157, in user_agent\nsetuptools_dist = get_default_environment().get_distribution(\"setuptools\")\n^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\metadata_init.py\", line 24, in get_default_environment\nfrom .pkg_resources import Environment\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\metadata\\pkg_resources.py\", line 9, in \nfrom pip.vendor import pkg_resources\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_vendor\\pkg_resources_init.py\", line 2164, in \nregister_finder(pkgutil.ImpImporter, find_on_path)\n^^^^^^^^^^^^^^^^^^^\nAttributeError: module 'pkgutil' has no attribute 'ImpImporter'. Did you mean: 'zipimporter'?\nTraceback (most recent call last):\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Scripts\\pip-script.py\", line 9, in \nsys.exit(main())\n^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\cli\\main.py\", line 70, in main\nreturn command.main(cmd_args)\n^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\cli\\base_command.py\", line 101, in main\nreturn self._main(args)\n^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\cli\\base_command.py\", line 223, in _main\nself.handle_pip_version_check(options)\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\cli\\req_command.py\", line 144, in handle_pip_version_check\nsession = self._build_session(\n^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\cli\\req_command.py\", line 89, in build_session\nsession = PipSession(\n^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\network\\session.py\", line 282, in init\nself.headers[\"User-Agent\"] = user_agent()\n^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\network\\session.py\", line 157, in user_agent\nsetuptools_dist = get_default_environment().get_distribution(\"setuptools\")\n^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\metadata_init.py\", line 24, in get_default_environment\nfrom .pkg_resources import Environment\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_internal\\metadata\\pkg_resources.py\", line 9, in \nfrom pip.vendor import pkg_resources\nFile \"C:\\Users\\rmundkowsky\\Miniconda3\\envs\\vectordb\\Lib\\site-packages\\pip_vendor\\pkg_resources_init.py\", line 2164, in \nregister_finder(pkgutil.ImpImporter, find_on_path)\n^^^^^^^^^^^^^^^^^^^\nAttributeError: module 'pkgutil' has no attribute 'ImpImporter'. Did you mean: 'zipimporter'?\n(vectordb) C:\\Users\\rmundkowsky\\git\\aiad\\backend-tools\\connect_to_vector_database>\nSteps/Code To Reproduce behavior\npip install \"pymilvus>=2.3.1\"\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Windows 10 Enterprise running Python 3.12.0\n- Method of installation (Docker, or from source): via pip\n- Milvus version (v0.3.1, or v0.4.0): n/a can't get package even installed\n- Milvus configuration (Settings you made in `server_config.yaml`): n/a can't get package even installed\nAnything else?\nNo response", "created_at": "2023-11-08", "closed_at": "2023-11-09", "labels": [], "State": "closed", "Author": "rmundkowsky"}
{"issue_number": 1774, "issue_title": "[FEATURE]: bulkwrite impl defined npy file size(default 1GB, max 10GB), milvus small file too much will be affect performance", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nbulkwrite impl defined npy file size(default 1GB, max 10GB), milvus small file too much will be affect performance\nDescribe the solution you'd like\nbulkwrite impl defined npy file size(default 1GB, max 10GB), milvus small file too much will be affect performance\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-11-08", "closed_at": null, "labels": [], "State": "open", "Author": "yelusion2"}
{"issue_number": 1771, "issue_title": "[QUESTION]: DataNotMatchException The data in the same column must be of the same type.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI'm connecting to ZillisCloud/Milvus using the client:\nself.client = MilvusClient(\n            uri = self.config.get('host',''),\n            token = self.config.get('token','')\n        )\nthen adding data to an existing collection (that has the Dynamic Schema ON):\n{\"collection_name\": \"embeddings_test\", \"auto_id\": true, \"num_shards\": 1, \"description\": \"embedding test\", \"fields\": [{\"field_id\": 100, \"name\": \"id\", \"description\": \"\", \"type\": 5, \"params\": {}, \"element_type\": 0, \"auto_id\": true, \"is_primary\": true}, {\"field_id\": 101, \"name\": \"vector\", \"description\": \"\", \"type\": 101, \"params\": {\"dim\": 384}, \"element_type\": 0}], \"aliases\": [], \"collection_id\": 445297027930315621, \"consistency_level\": 2, \"properties\": [], \"num_partitions\": 1, \"enable_dynamic_field\": true}\nbut when sending the data according to the examples in the format here\nI get th exception:\n    raise DataNotMatchException(message=ExceptionsMessage.DataTypeInconsistent) from e\npymilvus.exceptions.DataNotMatchException: <DataNotMatchException: (code=1, message=The data in the same column must be of the same type.)>\nData are sent as the array rows of items defined below calling the insert method on the client:\nres = self.client.insert(\n            collection_name=collection_name,\n            data=rows\n)\nAnything else?\nThe data format is the dict object defined here:\n{'id': '01HEAT95MAD95NCK63QB1DD6H4', 'vector': array([[5.63791315e-01, 7.82030064e-01, 3.96157914e-01, 2.40102268e-01,\n        5.34196018e-01, 4.61655917e-01, 6.14875025e-01, 4.70454194e-02,\n        1.88358886e-01, 5.04387633e-01, 8.14972780e-01, 7.31032776e-01,\n        7.29959644e-01, 4.54213551e-01, 5.08235144e-01, 2.06557017e-01,\n        6.63649205e-01, 3.11603949e-02, 1.67140109e-01, 9.49656241e-01,\n        8.29975837e-01, 1.28237784e-01, 1.22736318e-01, 6.78324180e-01,\n        7.68676253e-01, 7.92226247e-01, 2.78630943e-01, 7.45832200e-01,\n        9.44596326e-01, 7.93522375e-01, 8.29409762e-01, 6.00418227e-01,\n        6.13694091e-01, 3.97234936e-01, 6.73390125e-03, 1.15185763e-01,\n        5.64050037e-01, 3.20354197e-01, 5.96622606e-01, 1.45655558e-01,\n        5.86412141e-02, 2.29315621e-01, 3.98357425e-01, 2.55664157e-01,\n        2.30654721e-01, 3.46242767e-01, 2.59549179e-01, 3.13501321e-01,\n        8.27048985e-02, 9.67752964e-01, 8.87893071e-01, 3.13380209e-01,\n        5.28691119e-01, 7.99870663e-01, 8.80035708e-01, 4.28050883e-01,\n        3.12246294e-01, 6.98812036e-01, 3.05390560e-01, 4.53531848e-01,\n        6.88945608e-01, 2.49422576e-01, 2.76732005e-01, 5.74551941e-01,\n        5.32807242e-01, 4.38337826e-01, 9.99681541e-01, 7.93704265e-01,\n        5.84047759e-01, 1.20917683e-02, 9.58828995e-01, 2.70383297e-01,\n        6.92544629e-01, 1.87915326e-01, 3.66295651e-01, 8.74707273e-01,\n        8.28352480e-01, 6.94254991e-01, 1.28561145e-01, 3.21135337e-01,\n        8.97823298e-01, 8.26490891e-01, 9.71301226e-01, 7.49131147e-01,\n        4.24847015e-01, 2.64361306e-02, 4.39100731e-01, 6.90005231e-01,\n        8.51652660e-01, 9.33074169e-02, 6.50631695e-01, 9.03603926e-01,\n        3.38136887e-01, 3.55619826e-01, 8.98912936e-01, 6.29167506e-01,\n        2.41117787e-01, 4.71532473e-01, 6.58264763e-01, 4.93934055e-01,\n        8.94329342e-01, 4.27451821e-01, 7.93959822e-01, 6.25143583e-02,\n        8.02751570e-01, 4.51357081e-01, 9.64254890e-01, 6.50918672e-01,\n        3.31475216e-01, 4.86673324e-02, 1.68867554e-01, 1.12828978e-01,\n        7.18513724e-01, 7.32986799e-02, 8.84825682e-01, 5.80949777e-01,\n        6.05210398e-02, 2.09503283e-01, 2.56411313e-01, 4.64455580e-01,\n        1.79811595e-01, 7.69519412e-01, 8.66862168e-01, 6.81919644e-01,\n        9.06438881e-01, 8.25437558e-01, 1.72552477e-01, 3.78555711e-04,\n        7.81655841e-01, 9.67661011e-01, 7.45326649e-01, 5.54638930e-01,\n        4.11853595e-01, 2.22024478e-01, 6.92201291e-01, 4.31230511e-01,\n        1.92831519e-02, 2.76013657e-01, 7.91409431e-01, 8.29577659e-02,\n        8.06339719e-01, 4.08154710e-01, 7.62898335e-01, 5.58857921e-01,\n        5.79225309e-01, 4.05451270e-01, 9.39009435e-01, 4.43191097e-01,\n        1.23861569e-01, 4.30112645e-01, 2.97635755e-01, 5.31565564e-01,\n        2.58054158e-01, 9.24682308e-01, 2.00361564e-01, 6.83272146e-01,\n        9.96189619e-01, 8.34379442e-01, 8.55806113e-01, 2.65078732e-01,\n        4.05345692e-01, 5.42304908e-01, 8.24257869e-01, 1.32623953e-01,\n        2.19490597e-01, 4.19940658e-01, 5.90326151e-01, 1.13686145e-02,\n        2.39174542e-01, 7.51570058e-01, 5.22203097e-01, 2.98971467e-01,\n        8.35342412e-01, 4.21840507e-01, 9.52420133e-01, 3.56524881e-01,\n        1.22940543e-01, 9.59401449e-01, 7.56122207e-01, 3.48259327e-01,\n        5.27376673e-01, 6.55438721e-01, 3.72136881e-01, 3.01938274e-01,\n        9.23833684e-01, 5.85948549e-01, 9.19129744e-01, 7.87219809e-01,\n        7.62000448e-01, 4.38118895e-01, 8.76967871e-01, 9.40206114e-01,\n        1.12410073e-01, 9.58380846e-01, 3.43073788e-02, 2.99086945e-01,\n        3.53457622e-01, 9.24050271e-01, 7.22013356e-01, 3.28956413e-01,\n        5.61949329e-01, 3.37389278e-01, 8.03709306e-02, 8.20738004e-01,\n        5.31698027e-01, 7.02993484e-02, 5.61742974e-01, 8.09293981e-01,\n        4.27785812e-01, 2.78817441e-01, 6.65926067e-02, 7.95274337e-02,\n        2.89407820e-01, 3.23384552e-01, 5.44913548e-01, 3.80235834e-01,\n        7.37842543e-01, 3.08566005e-01, 6.43988793e-01, 2.52313614e-02,\n        1.13831740e-01, 2.59851439e-01, 5.41493183e-02, 5.86423635e-01,\n        5.13110349e-01, 3.90958228e-01, 3.10000879e-01, 2.79501354e-03,\n        6.55556062e-01, 4.36730618e-01, 9.53373254e-01, 7.05002496e-01,\n        3.16241853e-01, 6.41705993e-01, 9.08487683e-01, 5.77302255e-01,\n        2.04639641e-01, 1.71432599e-01, 7.19211059e-01, 8.90011631e-01,\n        7.35465753e-01, 3.23952825e-01, 2.07117832e-01, 5.05737991e-01,\n        8.95372583e-01, 7.58818680e-01, 8.25899673e-02, 7.05358647e-01,\n        9.63855319e-02, 1.08042897e-01, 6.17548534e-01, 6.21142283e-01,\n        5.34763258e-01, 9.52335403e-01, 7.00457401e-01, 9.43103430e-01,\n        5.77243608e-01, 8.67545450e-02, 4.78866056e-01, 7.78601634e-01,\n        6.80092800e-01, 7.46705272e-01, 5.81675187e-01, 2.62021046e-01,\n        4.62797931e-01, 7.75393162e-01, 3.44114692e-01, 7.76641841e-01,\n        2.62313198e-01, 3.44308104e-01, 5.53339559e-01, 5.98763380e-01,\n        8.22395817e-01, 5.38811436e-01, 8.42006393e-01, 3.60324366e-01,\n        3.99763370e-01, 6.79308224e-01, 8.27235820e-01, 5.09063223e-02,\n        4.39999971e-01, 8.99053381e-01, 6.79297117e-01, 7.99797703e-01,\n        5.14618395e-01, 4.05361299e-01, 2.92722542e-01, 8.58745804e-01,\n        6.10755488e-01, 5.14791193e-01, 2.99624240e-01, 5.86580986e-01,\n        5.53248525e-01, 2.57923829e-01, 8.32402495e-01, 8.17228761e-01,\n        1.34022027e-01, 2.27864417e-01, 4.12758435e-01, 7.95873332e-01,\n        8.74609743e-01, 7.65300176e-01, 3.63785964e-01, 8.61670024e-01,\n        1.71163104e-01, 4.21759293e-01, 9.05552036e-01, 3.31746905e-02,\n        6.97090946e-01, 6.93167759e-01, 8.92654476e-02, 3.95209128e-01,\n        5.99506718e-01, 4.54045818e-01, 7.23994841e-01, 9.93747868e-01,\n        3.35756527e-01, 4.45926075e-02, 3.16366752e-01, 5.88599129e-01,\n        9.80237245e-01, 8.93883025e-01, 5.17148109e-01, 2.93135950e-02,\n        3.55688071e-01, 9.93259333e-01, 3.56242594e-02, 4.14508166e-01,\n        7.36419899e-02, 7.93233631e-01, 5.01202115e-02, 1.63149760e-01,\n        9.11914978e-01, 9.60275944e-01, 9.32214043e-01, 1.90096053e-01,\n        6.55807875e-01, 8.45350507e-01, 5.02802277e-01, 7.10319129e-01,\n        3.92660410e-01, 6.63076235e-02, 6.85412320e-01, 7.59104305e-01,\n        8.56960816e-01, 5.12128318e-01, 4.84273792e-01, 6.82050874e-01,\n        2.88645618e-01, 2.04620941e-01, 5.92906705e-01, 4.46804912e-01,\n        7.95878010e-01, 3.38454027e-01, 9.57761368e-01, 8.78514962e-02,\n        3.46936034e-01, 7.22338436e-01, 2.05698636e-01, 9.03701609e-01,\n        7.33375396e-01, 2.22819356e-01, 1.02741867e-01, 8.58146578e-01,\n        9.79869899e-01, 6.30518357e-01, 6.55614532e-01, 4.40705851e-01,\n        8.04956330e-01, 6.41744208e-01, 4.06766405e-01, 7.68960782e-01,\n        4.25866999e-01, 4.40598109e-01, 5.00732028e-01, 6.30305946e-01,\n        2.74936497e-01, 5.99586239e-02, 3.76350883e-01, 9.12526154e-01,\n        2.78764775e-01, 5.42182112e-01, 6.92907345e-01, 1.49244054e-01]]), 'title': 'The Reported Mortality Rate of Coronavirus Is Not Important', 'keywords': 'society,news', 'duration': 3600}\nand I'm sending this single item as array of just one element:\ndata = [ item ]", "created_at": "2023-11-03", "closed_at": "2023-11-07", "labels": [], "State": "closed", "Author": "loretoparisi"}
{"issue_number": 1767, "issue_title": "[FEATURE]: mypy / PEP 561 compatible types", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nI cannot use a tool like mypy to check my project's types while using pymilvus. The tool balks at the pymilvus import due to pymilvus not being PEP 561 compatible.\nDescribe the solution you'd like\nIt would be nice if pymilvus was PEP 561 compatible (mypy guide to doing so).\nDescribe alternatives you've considered\nI've manually written the following type stubs which cover the specific subset of the API that I'm using. If I want to use new methods I need to type those as well. However Milvus methods have type hints in a lot of places, so being able to leverage those would be nice.\n\npymilvus/__init__.pyi\nfrom enum import IntEnum\nfrom typing import Any, Dict, List, Optional, Union\n\nclass DataType(IntEnum):\n    NONE = ...\n    BOOL = ...\n    INT8 = ...\n    INT16 = ...\n    INT32 = ...\n    INT64 = ...\n\n    FLOAT = ...\n    DOUBLE = ...\n\n    STRING = ...\n    VARCHAR = ...\n    ARRAY = ...\n    JSON = ...\n\n    BINARY_VECTOR = ...\n    FLOAT_VECTOR = ...\n\n    UNKNOWN = ...\n\nclass FieldSchema:\n    def __init__(\n        self,\n        name: str,\n        dtype: DataType,\n        is_primary: Optional[bool] = ...,\n        max_length: Optional[int] = ...,\n        dim: Optional[int] = ...,\n    ) -> None: ...\n\nclass CollectionSchema:\n    def __init__(self, fields: List[FieldSchema], description: str,) -> None: ...\n\nclass UpsertResult:\n    upsert_count: int\n    primary_keys: List[Any]\n\nclass DeleteResult:\n    delete_count: int\n\nclass Hit:\n    id: Union[int, str]\n    distance: float\n    fields: Dict[str, Any]\n\nclass Hits(List[Hit]):\n    ids: List[Union[int, str]]\n    distances: List[float]\n\nclass SearchResult(List[Hits]): ...\n\nclass _StoreMethodsMixin:\n    def upsert(self, data: List[Any],) -> UpsertResult: ...\n    def delete(self, expr: str, timeout: Optional[float] = ...,) -> DeleteResult: ...\n    def query(\n        self,\n        expr: str,\n        data: Optional[List[float]] = ...,\n        anns_field: Optional[str] = ...,\n        param: Optional[Dict[str, Any]] = ...,\n        limit: Optional[int] = ...,\n        output_fields: Optional[List[str]] = ...,\n        timeout: Optional[float] = ...,\n    ) -> List[Dict[str, Any]]: ...\n    def search(\n        self,\n        data: List[List[float]],\n        anns_field: str,\n        param: Dict[str, Any],\n        limit: int,\n        expr: Optional[str] = ...,\n        output_fields: Optional[List[str]] = ...,\n        timeout: Optional[float] = ...,\n        round_decimal: int = ...,\n    ) -> SearchResult: ...\n    def load(\n        self, replica_number: int = ..., timeout: Optional[float] = ...\n    ) -> None: ...\n    def release(self, timeout: Optional[float] = ...) -> None: ...\n\nclass Collection(_StoreMethodsMixin):\n    def __init__(self, name: str, schema: CollectionSchema,) -> None: ...\n    def has_index(self, index_name: str, timeout: Optional[float] = ...) -> bool: ...\n    def create_index(\n        self,\n        field_name: str,\n        index_params: Dict[str, Any],\n        timeout: Optional[float] = ...,\n    ) -> None: ...\n\nclass Partition(_StoreMethodsMixin):\n    def __init__(self, collection: Collection, name: str,) -> None: ...\n\n\npymilvus/connections.pyi\nfrom typing import Optional\n\ndef connect(\n    uri: Optional[str],\n    alias: str = ...,\n    user: str = ...,\n    password: str = ...,\n    db_name: str = ...,\n    token: str = ...,\n) -> None: ...\n\nAnything else?\nNo response", "created_at": "2023-10-31", "closed_at": null, "labels": [], "State": "open", "Author": "Mainstay-Noah-Huppert"}
{"issue_number": 1764, "issue_title": "[Bug]: Func `load_state` parameter type is error in utility.py", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nParamerter partition_names for function load_state is error, which in utility.py.\nhttps://github.com/milvus-io/pymilvus/blob/master/pymilvus/orm/utility.py#L223C5-L263\ndef load_state(\n    collection_name: str,\n    partition_names: Optional[float] = None,\n    using: str = \"default\",\n    timeout: Optional[float] = None,\n):\n    \"\"\"Show load state of collection or partitions.\n    :param collection_name: The name of collection is loading\n    :type  collection_name: str\n\n    :param partition_names: The names of partitions is loading\n    :type  partition_names: str list\n\n    :return LoadState:\n        The current state of collection or partitions.\n\n    ......\nExpected Behavior\nParameter partition_names type should be List[str] rather than float.\ndef load_state(\n    collection_name: str,\n    partition_names: Optional[List[str]] = None,\n    using: str = \"default\",\n    timeout: Optional[float] = None,\n):\nSteps/Code To Reproduce behavior\nType definition is error.\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): OS\n- Method of installation (Docker, or from source): \n- Milvus version (v0.3.1, or v0.4.0): v2.3.2\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nI will fix this bug if possible.", "created_at": "2023-10-31", "closed_at": "2023-11-04", "labels": [], "State": "closed", "Author": "simonwei97"}
{"issue_number": 1763, "issue_title": "[Bug]: Incorrect install for conda-forge", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nAfter I install pymilvus in the conda environment.\nconda list\npymilvus                  1.1.0              pyhd8ed1ab_1    conda-forge\nBut if I now try to import it - it says module not found.\nPython 3.12.0 | packaged by conda-forge | (main, Oct  3 2023, 08:43:38) [Clang 15.0.7 ] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pymilvus\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nModuleNotFoundError: No module named 'pymilvus'\n>>> \nKeyboardInterrupt\n>>> \n\nWhen I look at the install on conda, the site-packages has two folders - milvus, pymilvus-1.1.0-dist-info?  Should there not be a folder for pymilvus as well?\nhttps://anaconda.org/conda-forge/pymilvus/files\nAnything else?\nNo response", "created_at": "2023-10-30", "closed_at": null, "labels": [], "State": "open", "Author": "nishant-dani"}
{"issue_number": 1762, "issue_title": "[QUESTION]:  Failed to load data to Milvus: <DataNotMatchException: (code=1, message=The data type of field id doesn't match, expected: INT64, got FLOAT_VECTOR)>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nWhat is your question?\nin  milvus2.3.1 or milvus2.3.2\nfield1 = FieldSchema(name=\"id\", dtype=DataType.INT64,descrition=\"INT64\", is_primary=True)\nfield2 = FieldSchema(name=\"embedding\", dtype=DataType.FLOAT_VECTOR, descrition=\"float vector\",\ndim=2, is_primary=False)\nschema = CollectionSchema(fields=[field1, field2], description=\"collection description\")\nself.collection = Collection(name=collection_name, schema=schema)\ndata = [\n[i for i in range(5)],\n[[random.random() for _ in range(2)] for _ in range(5)]\n]\nself.create_collection(collection_name)\nmr = self.collection.insert(data)   #but expected:  Failed to load data to Milvus: <DataNotMatchException: (code=1, message=The data type of field id doesn't match, expected: INT64, got FLOAT_VECTOR)>\nthe data is :   [[1, 2, 3, 4, 5], [[0.3105158465744252, 0.8950156625546624], [0.9155976781469098, 0.21200714091752015], [0.39462295337332065, 0.5530498334145851], [0.33832125406240476, 0.04104237653554721], [0.3758661561451232, 0.46768507654917046]]]\nAnything else?\nPlease help me", "created_at": "2023-10-30", "closed_at": "2023-10-31", "labels": [], "State": "closed", "Author": "allisonyang123"}
{"issue_number": 1758, "issue_title": "[Bug]: Doesn\u2019t search_iterator support the radius/range_filter parameter?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen testing the pymilvus interface, I found that the distance range of the data returned by the iterator exceeded the radius. Doesn\u2019t search_iterator support the radius/range_filter parameter?\ncode:\nhttps://github.com/milvus-io/pymilvus/blob/master/examples/iterator.py\nOnly the search parameters of search_iterator_collection_with_limit have been adjusted:\n    search_params = {\n        \"metric_type\": \"L2\",\n        \"params\": {\"nprobe\": 10, \"radius\": 0.06, \"range_filter\" : 0.01},\n    }\n\n\u7ed3\u679c:\nCreate collection test_iterator\nFinish insert batch0, number of entities in Milvus: 1000\nFinish insert batch1, number of entities in Milvus: 2000\nFinish insert batch2, number of entities in Milvus: 3000\nFinish insert batch3, number of entities in Milvus: 4000\nFinish insert batch4, number of entities in Milvus: 5000\nFinish Creating index IVF_FLAT\nFinish Loading index IVF_FLAT\n0 id: 4684, distance: 0.0, entity: {'id': '4684'}\n1 id: 1668, distance: 0.058832477778196335, entity: {'id': '1668'}\n2 id: 2104, distance: 0.07056225091218948, entity: {'id': '2104'}\n3 id: 871, distance: 0.10482554882764816, entity: {'id': '871'}\n4 id: 4984, distance: 0.11532919853925705, entity: {'id': '4984'}\n5 id: 114, distance: 0.12362603843212128, entity: {'id': '114'}\n6 id: 1623, distance: 0.1285371631383896, entity: {'id': '1623'}\n7 id: 1201, distance: 0.1298251748085022, entity: {'id': '1201'}\n8 id: 2024, distance: 0.1307433396577835, entity: {'id': '2024'}\n9 id: 626, distance: 0.15230277180671692, entity: {'id': '626'}\n10 id: 801, distance: 0.17913572490215302, entity: {'id': '801'}\n11 id: 2122, distance: 0.17925119400024414, entity: {'id': '2122'}\n12 id: 778, distance: 0.1910468339920044, entity: {'id': '778'}\n13 id: 1495, distance: 0.19282037019729614, entity: {'id': '1495'}\n14 id: 1882, distance: 0.1930467188358307, entity: {'id': '1882'}\n15 id: 222, distance: 0.19953247904777527, entity: {'id': '222'}\n16 id: 652, distance: 0.2019364833831787, entity: {'id': '652'}\n17 id: 1971, distance: 0.21185579895973206, entity: {'id': '1971'}\n18 id: 2333, distance: 0.21447010338306427, entity: {'id': '2333'}\n19 id: 1706, distance: 0.21740984916687012, entity: {'id': '1706'}\npage1-------------------------\n0 id: 4340, distance: 0.21845467388629913, entity: {'id': '4340'}\n1 id: 1807, distance: 0.2201744019985199, entity: {'id': '1807'}\n2 id: 3804, distance: 0.23094269633293152, entity: {'id': '3804'}\n3 id: 4933, distance: 0.23286551237106323, entity: {'id': '4933'}\n4 id: 3385, distance: 0.23362164199352264, entity: {'id': '3385'}\n5 id: 3540, distance: 0.23481759428977966, entity: {'id': '3540'}\n6 id: 3618, distance: 0.2377282977104187, entity: {'id': '3618'}\n7 id: 4051, distance: 0.23876869678497314, entity: {'id': '4051'}\n8 id: 512, distance: 0.23946121335029602, entity: {'id': '512'}\n9 id: 1255, distance: 0.24229198694229126, entity: {'id': '1255'}\n10 id: 3519, distance: 0.24676111340522766, entity: {'id': '3519'}\n11 id: 1036, distance: 0.24679036438465118, entity: {'id': '1036'}\n12 id: 1039, distance: 0.25529831647872925, entity: {'id': '1039'}\n13 id: 2723, distance: 0.25540897250175476, entity: {'id': '2723'}\n14 id: 1498, distance: 0.2575368285179138, entity: {'id': '1498'}\n15 id: 4594, distance: 0.2586151659488678, entity: {'id': '4594'}\n16 id: 414, distance: 0.25980275869369507, entity: {'id': '414'}\n17 id: 362, distance: 0.2600921094417572, entity: {'id': '362'}\n18 id: 1643, distance: 0.26290807127952576, entity: {'id': '1643'}\n19 id: 632, distance: 0.2631430923938751, entity: {'id': '632'}\npage2-------------------------\n0 id: 266, distance: 0.26346978545188904, entity: {'id': '266'}\n1 id: 1901, distance: 0.267397940158844, entity: {'id': '1901'}\n2 id: 4400, distance: 0.2708514928817749, entity: {'id': '4400'}\n3 id: 2312, distance: 0.2709612548351288, entity: {'id': '2312'}\n4 id: 2264, distance: 0.27108797430992126, entity: {'id': '2264'}\n5 id: 2563, distance: 0.2711813449859619, entity: {'id': '2563'}\n6 id: 3094, distance: 0.27500712871551514, entity: {'id': '3094'}\n7 id: 3114, distance: 0.2754588723182678, entity: {'id': '3114'}\n8 id: 4498, distance: 0.2793983221054077, entity: {'id': '4498'}\n9 id: 56, distance: 0.28170955181121826, entity: {'id': '56'}\n10 id: 4802, distance: 0.2834174633026123, entity: {'id': '4802'}\n11 id: 4211, distance: 0.2836792469024658, entity: {'id': '4211'}\n12 id: 540, distance: 0.28387534618377686, entity: {'id': '540'}\n13 id: 2745, distance: 0.2842351794242859, entity: {'id': '2745'}\n14 id: 1543, distance: 0.2855006158351898, entity: {'id': '1543'}\n15 id: 1848, distance: 0.2956370711326599, entity: {'id': '1848'}\n16 id: 496, distance: 0.29599589109420776, entity: {'id': '496'}\n17 id: 4512, distance: 0.3055242896080017, entity: {'id': '4512'}\n18 id: 1634, distance: 0.3070176839828491, entity: {'id': '1634'}\n19 id: 3863, distance: 0.30961596965789795, entity: {'id': '3863'}\npage3-------------------------\n0 id: 4667, distance: 0.31042182445526123, entity: {'id': '4667'}\n1 id: 2949, distance: 0.31177055835723877, entity: {'id': '2949'}\n2 id: 3295, distance: 0.3135717511177063, entity: {'id': '3295'}\n3 id: 4413, distance: 0.315197616815567, entity: {'id': '4413'}\n4 id: 4481, distance: 0.31684309244155884, entity: {'id': '4481'}\n5 id: 943, distance: 0.31754884123802185, entity: {'id': '943'}\n6 id: 1295, distance: 0.31830060482025146, entity: {'id': '1295'}\n7 id: 2653, distance: 0.3184775114059448, entity: {'id': '2653'}\n8 id: 188, distance: 0.3196280002593994, entity: {'id': '188'}\n9 id: 1002, distance: 0.3219507932662964, entity: {'id': '1002'}\n10 id: 1635, distance: 0.3249959945678711, entity: {'id': '1635'}\n11 id: 306, distance: 0.3250097632408142, entity: {'id': '306'}\n12 id: 3807, distance: 0.3268061578273773, entity: {'id': '3807'}\n13 id: 413, distance: 0.32755178213119507, entity: {'id': '413'}\n14 id: 2155, distance: 0.328267902135849, entity: {'id': '2155'}\n15 id: 3653, distance: 0.3309756815433502, entity: {'id': '3653'}\n16 id: 4994, distance: 0.33139973878860474, entity: {'id': '4994'}\n17 id: 3334, distance: 0.33181750774383545, entity: {'id': '3334'}\n18 id: 2961, distance: 0.33362966775894165, entity: {'id': '2961'}\n19 id: 3108, distance: 0.3345431685447693, entity: {'id': '3108'}\npage4-------------------------\n0 id: 356, distance: 0.3356513977050781, entity: {'id': '356'}\n1 id: 4217, distance: 0.3357859253883362, entity: {'id': '4217'}\n2 id: 4897, distance: 0.3364599347114563, entity: {'id': '4897'}\n3 id: 2405, distance: 0.34114837646484375, entity: {'id': '2405'}\n4 id: 1759, distance: 0.34308934211730957, entity: {'id': '1759'}\n5 id: 290, distance: 0.3439772427082062, entity: {'id': '290'}\n6 id: 4410, distance: 0.34622740745544434, entity: {'id': '4410'}\n7 id: 3657, distance: 0.34684768319129944, entity: {'id': '3657'}\n8 id: 2856, distance: 0.34749555587768555, entity: {'id': '2856'}\n9 id: 4670, distance: 0.3494120240211487, entity: {'id': '4670'}\n10 id: 3097, distance: 0.35055315494537354, entity: {'id': '3097'}\n11 id: 982, distance: 0.3515007197856903, entity: {'id': '982'}\n12 id: 2528, distance: 0.3515781760215759, entity: {'id': '2528'}\n13 id: 321, distance: 0.3517194986343384, entity: {'id': '321'}\n14 id: 4580, distance: 0.35180824995040894, entity: {'id': '4580'}\n15 id: 4624, distance: 0.35347479581832886, entity: {'id': '4624'}\n16 id: 2017, distance: 0.35353219509124756, entity: {'id': '2017'}\n17 id: 3527, distance: 0.3547475337982178, entity: {'id': '3527'}\n18 id: 3857, distance: 0.3552432060241699, entity: {'id': '3857'}\n19 id: 1411, distance: 0.35572323203086853, entity: {'id': '1411'}\npage5-------------------------\nquery iteration finished, close\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): 2.3.1\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-10-26", "closed_at": null, "labels": [], "State": "open", "Author": "cheetahsec"}
{"issue_number": 1756, "issue_title": "[Bug]: Api key is invalid when port is not specified", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-10-25", "closed_at": "2023-10-26", "labels": [], "State": "closed", "Author": "bigsheeper"}
{"issue_number": 1823, "issue_title": "[Bug]:  fix search_iterator perf problem due to iterator_width increase too fast due ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nrelated: milvus-io/milvus#28821\nNo response", "created_at": "2023-12-20", "closed_at": "2023-12-22", "labels": [], "State": "closed", "Author": "MrPresent-Han"}
{"issue_number": 1820, "issue_title": "[FEATURE]: Add a connection pool", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\n\nDefault pool size 100\nReset the connection every 5000 reqs\n\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-12-18", "closed_at": null, "labels": [], "State": "open", "Author": "XuanYang-cn"}
{"issue_number": 1816, "issue_title": "The following error occurred when I upgraded the version to milvus 2.3.3-gpu and the pymilvus to 2.3.3  :Missing param in entities, a field must have type, name and values", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nThe following error occurred when I upgraded the version to milvus 2.3.3-gpu and the pymilvus to 2.3.3\nbin D:\\conda\\envs\\chatglm2\\lib\\site-packages\\bitsandbytes\\libbitsandbytes_cuda117.dll\nCUDA SETUP: CUDA runtime path found: D:\\conda\\envs\\chatglm2\\bin\\cudart64_110.dll\nCUDA SETUP: Highest compute capability among GPUs detected: 8.6\nCUDA SETUP: Detected CUDA version 117\nCUDA SETUP: Loading binary D:\\conda\\envs\\chatglm2\\lib\\site-packages\\bitsandbytes\\libbitsandbytes_cuda117.dll...\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1003/1003 [00:00<00:00, 996656.46it/s]\n1003\nERROR 2023-12-12 15:50:51,245-1d: RPC error: [batch_insert], <ParamError: (code=1, message=Missing param in entities, a field must have type, name and values)>, <Time:{'RPC start': '2023-12-12 15:50:51.245649', 'RPC error': '2023-12-12 15:50:51.245649'}>\nTraceback (most recent call last):\nFile \"E:\\360MoveData\\Users\\Administrator\\Desktop\\langchain_milvus\\core\\data_process\\load_data.py\", line 129, in \nload_data_db()\nFile \"E:\\360MoveData\\Users\\Administrator\\Desktop\\langchain_milvus\\core\\data_process\\load_data.py\", line 120, in load_data_db\ninsert_milvus(estateCollection,\nFile \"E:\\360MoveData\\Users\\Administrator\\Desktop\\langchain_milvus\\core\\data_process\\load_data.py\", line 101, in insert_milvus\nres = collection.insert(data=arr, partition_name=partition_name)\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\orm\\collection.py\", line 497, in insert\nres = conn.batch_insert(\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\decorators.py\", line 129, in handler\nraise e from e\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\decorators.py\", line 125, in handler\nreturn func(*args, **kwargs)\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\decorators.py\", line 164, in handler\nreturn func(self, *args, **kwargs)\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\decorators.py\", line 104, in handler\nraise e from e\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\decorators.py\", line 68, in handler\nreturn func(*args, **kwargs)\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 555, in batch_insert\nraise err from err\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 538, in batch_insert\nrequest = self._prepare_batch_insert_request(\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 522, in _prepare_batch_insert_request    else Prepare.batch_insert_param(collection_name, entities, partition_name, fields_info)\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\client\\prepare.py\", line 517, in batch_insert_param\nlocation = cls._pre_batch_check(entities, fields_info)\nFile \"D:\\conda\\envs\\chatglm2\\lib\\site-packages\\pymilvus\\client\\prepare.py\", line 456, in _pre_batch_check\nraise ParamError(\npymilvus.exceptions.ParamError: <ParamError: (code=1, message=Missing param in entities, a field must have type, name and values)>\nAnything else?\nNo response", "created_at": "2023-12-12", "closed_at": null, "labels": [], "State": "open", "Author": "xiong0827"}
{"issue_number": 1814, "issue_title": "[Bug]: limit too large ef for search iterator", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen searching with search_iterator towards hnsw index, users may set up very large ef parameter, which leads to serious latency increase. Such behaviors should be limited by search_iterator. Similar to MAX_BATCH_SIZE, the parameter ef also needs to have an upper limit\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-12-12", "closed_at": null, "labels": [], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 1812, "issue_title": "[QUESTION]: varchar \u5b57\u7b26\u957f\u5ea6\u7684\u8ba1\u7b97\u65b9\u5f0f \uff1f", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\n\u6211\u5c06VARCHAR \u7684\u6700\u5927\u957f\u5ea6\u8bbe\u7f6e\u4e3a200\uff0c\u7136\u540e\uff0c\u6211\u5728\u5b58\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f7f\u7528100\u53bb\u8fc7\u6ee4\u6587\u672c\u957f\u5ea6\uff0c\u6700\u540e\u8fd8\u662f\u62a5\u6587\u672c\u957f\u5ea6\u6709237\uff0c\u8d85\u51fa\u6700\u5927\u957f\u5ea6\u9650\u5236\u3002\u6211\u60f3\u8bf7\u95ee\uff0cmilvus\u8ba1\u7b97\u6587\u672c\u7684\u903b\u8f91\u662f\u4ec0\u4e48\u5462\uff1f\u662f\u6309\u7167\u4ec0\u4e48\u53bb\u8ba1\u7b97\u6587\u672c\u7684\u957f\u5ea6\u7684\u5462\uff1f\nAnything else?\nNo response", "created_at": "2023-12-08", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "sc-lj"}
{"issue_number": 1811, "issue_title": "[Bug]: query_iterator gives KeyError: 'is_primary' exception", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe problem stated in the issue still exists in version 2.3.4.\nAs written in this comment, checking the condition causes a KeyError exception.\nHere it is necessary to replace\nif field[IS_PRIMARY]:\nwith\nif field.get(IS_PRIMARY):\nor with\nif IS_PRIMARY in field and field[IS_PRIMARY]:\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-12-05", "closed_at": "2024-01-03", "labels": [], "State": "closed", "Author": "uncle-yura"}
{"issue_number": 1809, "issue_title": "[FEATURE]: support search-group by", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nadd parameter support for search group-operation\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-12-05", "closed_at": null, "labels": [], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 1808, "issue_title": "[FEATURE]: upgrade the builtin roles", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nadmin privileges are too great, but public privileges are too small\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-12-04", "closed_at": "2023-12-04", "labels": [], "State": "closed", "Author": "PowderLi"}
{"issue_number": 1806, "issue_title": "[Bug]: Typeissue in orm/schema.py- Incorrect type for X and Y in check_insert_data_schema()", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI ran into this error-\n  File \"<MYSCRIPT'S PATH>\", line 44, in insert_item\n    collection.insert(emb)\n  File \"/opt/homebrew/lib/python3.10/site-packages/pymilvus/orm/collection.py\", line 490, in insert\n    check_insert_data_schema(self._schema, data)\n  File \"/opt/homebrew/lib/python3.10/site-packages/pymilvus/orm/schema.py\", line 330, in check_insert_data_schema\n    raise DataNotMatchException(message=f\"The data type of field {y.name} doesn't match, expected: {y.dtype.name}, got {x.dtype.name}\")\nAttributeError: 'int' object has no attribute 'name'\n\nExpected Behavior\nAttributeError should not be thrown. Int and any other python type doesn't have .name param. X and Y therefore cannot be of base python type\nSteps/Code To Reproduce behavior\nFrustratingly, I don't know...\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): MacOS Sonoma, m1 max, 16gigs\n- Method of installation (Docker, or from source): Docker\n- Milvus version (v0.3.1, or v0.4.0): \n- Milvus configuration (Settings you made in `server_config.yaml`): \nAnything else?\nNo response", "created_at": "2023-12-02", "closed_at": "2023-12-20", "labels": [], "State": "closed", "Author": "vikramsubramanian"}
{"issue_number": 1804, "issue_title": "[Bug]: Exceptions cannot be thrown with Milvus 2.2.x", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n2.2.x milvus thown exception with old error code:\n\nWhile pymilvus didn't handle it:\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-12-02", "closed_at": "2024-01-02", "labels": [], "State": "closed", "Author": "bigsheeper"}
{"issue_number": 1801, "issue_title": "[Bug]: When incorrect tokens are entered, Milvus will continuously attempt to reconnect.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-11-28", "closed_at": "2023-11-29", "labels": [], "State": "closed", "Author": "junjiejiangjjj"}
{"issue_number": 1800, "issue_title": "[Bug]: RESTFUL some grpc calls are unnecessary", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\ncall ListDatabases to find whether the database is exists\ncall DescribeCollection to get collection's schema but ignore the cached meta data\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-11-28", "closed_at": "2023-11-28", "labels": [], "State": "closed", "Author": "PowderLi"}
{"issue_number": 1893, "issue_title": "[Bug]:  pyarrow version error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nI used langchain to connect to a zilliz cloud cluster , it  showed that there was a pyarrow version error,but when i checked the pyarrow version, it had no problem.\nExpected Behavior\nhow to fix it\nSteps/Code To Reproduce behavior\nvector_store = Zilliz(\n    embedding_function=hf, \n    connection_args=connection_args,\n    collection_name=COLLECTION_NAME,\n    drop_old=True,\n).from_documents(\n    texts,\n    embedding=hf,\n    collection_name=COLLECTION_NAME,\n    connection_args=connection_args,\n)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):GPU\n- Method of installation (Docker, or from source):kaggle jupyter notebook\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-24", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "WVVdragon"}
{"issue_number": 1892, "issue_title": "[Bug]: [milvus_client] The result of describe_alias is wrong", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe result of describe_alias is wrong\n>>> result = milvus_client.describe_alias(alias)\n>>> result\n>>> type(result)\n<class 'NoneType'>\n\nExpected Behavior\nA dict including the alias info\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n )\ndim = 8\ncollection_name = \"hello_milvus_no\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nalias = \"alias\"\nmilvus_client.create_alias(collection_name, alias)\nresult = milvus_client.describe_alias(alias)\ntype(result)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240122-a77693aa\n- pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-24", "closed_at": "2024-02-06", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1891, "issue_title": "[Bug]: [milvus_client] The error is not proper when there is no parameter for list_aliases() ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe result of list_aliases() is not a list (NoneType)\n>>> aliases = milvus_client.list_aliases()\n>>> aliases\n>>> type(aliases)\n<class 'NoneType'>\n\nExpected Behavior\nReturn all aliases list\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n )\ndim = 8\ncollection_name = \"hello_milvus_no\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nalias = \"alias\"\nmilvus_client.create_alias(collection_name, alias)\nmilvus_client.list_aliases()\naliases = milvus_client.list_aliases()\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240122-a77693aa\n- pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-24", "closed_at": "2024-02-06", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1888, "issue_title": "[Bug]: Python debug pause fails, ctrl+c fails, OpenAIEmbeddings freezes", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nembeddings.embed_query freezes if I call \"connections.connect\" first.  Ctrl+c and PDB pause no longer works either.\nThis freezes:\nfrom pymilvus import connections\nfrom langchain_openai import OpenAIEmbeddings\nimport os\n\nconnections.connect(\"default\", host=\"localhost\", port=\"19530\")\n\nembeddings = OpenAIEmbeddings(openai_api_key=os.getenv(\"OPENAI_KEY\"))\nprint(f\"Embedding START\")\nquery_result = embeddings.embed_query(\"test text\")\nprint(query_result)\n\nThis works fine and ctrl+c still works:\nfrom pymilvus import connections\nfrom langchain_openai import OpenAIEmbeddings\nimport os, time\n\n\nembeddings = OpenAIEmbeddings(openai_api_key=os.getenv(\"OPENAI_KEY\"))\nprint(f\"Embedding START\")\nquery_result = embeddings.embed_query(\"test text\")\nprint(query_result)\n\nconnections.connect(\"default\", host=\"localhost\", port=\"19530\")\nprint(f\"Sleeping\")\ntime.sleep(5)\n\n\nThis also works using OpenAI directly:\nfrom pymilvus import connections\nfrom openai import OpenAI\nimport os, time\n\nconnections.connect(\"default\", host=\"localhost\", port=\"19530\")\n\nclient = OpenAI()\nprint(f\"Embedding START\")\nquery_result = client.embeddings.create(\n    input=\"test text\", model=\"text-embedding-ada-002\"\n)\nprint(query_result)\n\nExpected Behavior\nprint(query_result) displays ...\nSteps/Code To Reproduce behavior\npip install pymilvus\npip install langchain_openai\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Darwin Kernel Version 23.2.0, M2, 64GB\n- Method of installation (Docker, or from source): Docker\n- Milvus version (v0.3.1, or v0.4.0): v2.3.5\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-23", "closed_at": null, "labels": [], "State": "open", "Author": "birdperson1970"}
{"issue_number": 1887, "issue_title": "[Bug]: Wrong arguments passed into the MilvusClient method `get_load_state()`", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ndef get_load_state(...) -> Dict:\n    ...      \n    try:\n        state = conn.get_load_state(collection_name, partition_names, tiemout=timeout, **kwargs)\n    except Exception as ex:\n        ...\n\nIn the above source code, tiemout should be timeout. Otherwise, calling this method results a prompt that reads Unexpected error: [get_load_state], GrpcHandler.get_load_state() got an unexpected keyword argument 'tiemout'\nExpected Behavior\nCorrect the incorrectly spelt argument name.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-23", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "AnthonyTsu1984"}
{"issue_number": 1886, "issue_title": "[Bug]: [milvus_client][milvus] Created HNSW index failed without ef input reporting \"efConstruction out of range: [1, 2147483647])>\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe index always be \"AUTOINDEX\" no matter what kind of index type input\n>>> milvus_client.describe_index(collection_name, \"vector\")\n>>> {'index_type': 'AUTOINDEX', 'metric_type': 'IP', 'field_name': 'vector', 'index_name': 'vector'}\n>>> index_params = milvus_client.prepare_index_params()\n>>> index_params.add_index(field_name = \"vector\", index_type=\"HNSW\", metric_type=\"L2\")\n>>> milvus_client.create_index(collection_name, index_params)\n>>> milvus_client.describe_index(collection_name, \"vector\")\n{'index_type': 'AUTOINDEX', 'metric_type': 'IP', 'field_name': 'vector', 'index_name': 'vector'}\n>>> milvus_client.release_collection(collection_name)\n>>> milvus_client.drop_index(collection_name, \"vector\")\n>>> milvus_client.describe_index(collection_name, \"vector\")\n>>> milvus_client.create_index(collection_name, index_params)\n>>> milvus_client.describe_index(collection_name, \"vector\")\n{'index_type': 'AUTOINDEX', 'metric_type': 'IP', 'field_name': 'vector', 'index_name': 'vector'}\n\nExpected Behavior\nCreate inputted type of index\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (MilvusClient )\n\ndim = 8\ncollection_name = \"hello_milvus_new_1\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nmilvus_client.release_collection(collection_name)\nmilvus_client.drop_index(collection_name, \"vector\")\nindex_params = milvus_client.prepare_index_params()\nindex_params.add_index(field_name = \"vector\", index_type=\"HNSW\", metric_type=\"L2\")\nmilvus_client.create_index(collection_name, index_params)\nmilvus_client.describe_index(collection_name, \"vector\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240122-a77693aa\n- pymilvus version: 2.4.0rc24\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-23", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 1885, "issue_title": "[Bug]: [milvus_client] Create index with invalid index type successfully without any errors", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nCreate index with invalid index type successfully without any errors\nExpected Behavior\nReport index type not valid/supported errors.\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (MilvusClient )\n\ndim = 8\ncollection_name = \"hello_milvus_new_1\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nmilvus_client.release_collection(collection_name)\nmilvus_client.drop_index(collection_name, \"vector\")\nindex_params = milvus_client.prepare_index_params()\nindex_params.add_index(field_name = \"vector\", index_type=123)\nmilvus_client.create_index(collection_name, index_params)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240122-a77693aa\n- pymilvus version: 2.4.0rc24\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-23", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1884, "issue_title": "[Bug]: [milvus_client] Index could not be created successfully when input self-defined params", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nIndex could not be created after release all the indexes:\n<MilvusException: (code=65535, message=only metric type can be passed when use AutoIndex)>\n\nExpected Behavior\nOther indexes are created successfully\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nmilvus_client.release_collection(collection_name)\nmilvus_client.drop_index(collection_name, \"vector\")\nres = milvus_client.list_indexes(collection_name)\nassert res == []\nindex_params = milvus_client.prepare_index_params()\nindex = \"HNSW\"\nparams = {\"M\": 48, \"efConstruction\": 500}\nmetric_type = \"L2\"\nindex_params.add_index(field_name = \"vector\", index_type=index, params=params, metric_type = metric_type)\nmilvus_client.create_index(collection_name, index_params)\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240122-4436effd\n- pymilvus version: 2.4.0rc24\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\nAnything else?\nNo response", "created_at": "2024-01-22", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1883, "issue_title": "[Bug]:  [milvus_client]  Unexpected error when insert invalid type data", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nUnexpected error when insert non-valid type data\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=Unexpected error, message=<'list' object has no attribute 'items'>)>\n\nExpected Behavior\nReport data type not match error\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nvectors = [[random.random() for _ in range(default_dim)] for _ in range(default_nb)]\ndata = [[i for i in range(default_nb)], vectors]\nmilvus_client.insert(collection_name, data)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240122-4436effd\n- pymilvus version: 2.4.0rc24\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-22", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1882, "issue_title": "[Bug]: [milvus_client][milvus] The error msg does not show the complete usage for query without all the required parameters ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error msg does not show the complete usage for query without all the required parameters:\nwhen run\nmilvus_client.query(collection_name)\n\nit shows \"<MilvusException: (code=65535, message=empty expression should be used with limit)\"\nExpected Behavior\nsth like \"ids or filter or limit cannot be empty\"\nplease specify the param \"filter\" or the param \"limit\"\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\n\nhas_collection = milvus_client.has_collection(collection_name, timeout=5)\nif has_collection:\n    milvus_client.drop_collection(collection_name)\nmilvus_client.create_collection(collection_name, dim, consistency_level=\"Strong\", metric_type=\"L2\")\n\nprint(fmt.format(\"    all collections    \"))\nprint(milvus_client.list_collections())\n\nprint(fmt.format(f\"schema of collection {collection_name}\"))\nprint(milvus_client.describe_collection(collection_name))\n\nrng = np.random.default_rng(seed=19530)\nrows = [\n        {\"id\": 1, \"vector\": rng.random((1, dim))[0], \"a\": 100},\n        {\"id\": 2, \"vector\": rng.random((1, dim))[0], \"b\": 200},\n        {\"id\": 3, \"vector\": rng.random((1, dim))[0], \"c\": 300},\n        {\"id\": 4, \"vector\": rng.random((1, dim))[0], \"d\": 400},\n        {\"id\": 5, \"vector\": rng.random((1, dim))[0], \"e\": 500},\n        {\"id\": 6, \"vector\": rng.random((1, dim))[0], \"f\": 600},\n]\n\nprint(fmt.format(\"Start inserting entities\"))\ninsert_result = milvus_client.insert(collection_name, rows, progress_bar=True)\nprint(fmt.format(\"Inserting entities done\"))\nprint(insert_result)\nmilvus_client.query(collection_name)\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240121-c8a78465\n- pymilvus version: 2.4.0rc24\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\nAnything else?\nNo response", "created_at": "2024-01-22", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 1880, "issue_title": "[Bug]: [milvus_client] The value of \"row_count\"  is not int for the return of the interface \"get_partition_stats\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe return data struct is not clear for the interface \"get_partition_stats\":\ncurrently, the return result is a list with the 'KeyValuePair' object in it {key: \"row_count\", value: \"0\"}:\n>>> result = milvus_client.get_partition_stats(collection_name, 'default_1')\n>>> result\n[key: \"row_count\"\nvalue: \"0\"\n]\n>>> result[0]\nkey: \"row_count\"\nvalue: \"0\"\n\nExpected Behavior\nMaybe the dict {\"row_count\": 0} is proper? And the partition_name only support single partition, so it is not necessary for a list to restore the result?\ndesign\ndef get_partition_stats(\n    collection_name: str, \n    partition_name: str,\n    timeout: Optional[float] = None, \n    **kwargs)-> Dict:\n    pass\n    \n    \"\"\"\n        {'row_count': 1000}\n    \"\"\"\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nresult = milvus_client.get_partition_stats(collection_name, '_default')\nprint(result)\nprint(result[0])\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240115-fb4fbcf4\n- pymilvus version: 2.4.0rc23\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-19", "closed_at": "2024-02-06", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1879, "issue_title": "[Bug]: [milvus_client] The error message is not meaningful when input wrong type value to parameter \"partition_name\" for interface \"get_partition_stats\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error message is not meaningful when input wrong type value to parameter \"partition_name\"\nerror: Unexpected error, message=\n>>> milvus_client.get_partition_stats(collection_name, ['_default', 'default_1'])\nUnexpected error: [get_partition_stats], bad argument type for built-in operation, <Time: {'RPC start': '2024-01-19 16:32:17.006335', 'Exception': '2024-01-19 16:32:17.006428'}>\nTraceback (most recent call last):\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 131, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 170, in handler\n    return func(self, *args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 112, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 74, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 455, in get_partition_stats\n    req = Prepare.get_partition_stats_request(collection_name, partition_name)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/prepare.py\", line 854, in get_partition_stats_request\n    return milvus_types.GetPartitionStatisticsRequest(\nTypeError: bad argument type for built-in operation\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 830, in get_partition_stats\n    return conn.get_partition_stats(collection_name, partition_name, timeout=timeout, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 153, in handler\n    raise MilvusException(message=f\"Unexpected error, message=<{e!s}>\") from e\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=Unexpected error, message=<bad argument type for built-in operation>)>\n\nExpected Behavior\nReport type not right error\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nmilvus_client.get_partition_stats(collection_name, ['_default', 'default_1'])\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240115-fb4fbcf4\n- pymilvus version: 2.4.0rc23\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-19", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1878, "issue_title": "[Bug]: Dynamic schema does not seem to work.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI was trying to follow the steps for inserting a new collection from the following pages on the docs' user guide:\n\nhttps://milvus.io/docs/manage_connection.md\nhttps://milvus.io/docs/manage_databases.md\nhttps://milvus.io/docs/create_collection.md\nhttps://milvus.io/docs/insert_data.md\n\nI got the following error instead:\nDataNotMatchException: <DataNotMatchException: (code=1, message=The data don't match with schema fields, expect 4 list, got 7)>\nExpected Behavior\nI expected the insertion step to be executed without any error.\nSteps/Code To Reproduce behavior\n# Run `python3` in your terminal to operate in the Python interactive mode.\nfrom pymilvus import connections\nconnections.connect(\n  alias=\"default\",\n  user='username',\n  password='password',\n  host='localhost',\n  port='19530'\n)\n\nfrom pymilvus import connections, db\ndatabase = db.create_database(\"book\")\n\nfrom pymilvus import CollectionSchema, FieldSchema, DataType\nbook_id = FieldSchema(\n  name=\"book_id\",\n  dtype=DataType.INT64,\n  is_primary=True,\n)\nbook_name = FieldSchema(\n  name=\"book_name\",\n  dtype=DataType.VARCHAR,\n  max_length=200,\n  # The default value will be used if this field is left empty during data inserts or upserts.\n  # The data type of `default_value` must be the same as that specified in `dtype`.\n  default_value=\"Unknown\"\n)\nword_count = FieldSchema(\n  name=\"word_count\",\n  dtype=DataType.INT64,\n  # The default value will be used if this field is left empty during data inserts or upserts.\n  # The data type of `default_value` must be the same as that specified in `dtype`.\n  default_value=9999\n)\nbook_intro = FieldSchema(\n  name=\"book_intro\",\n  dtype=DataType.FLOAT_VECTOR,\n  dim=2\n)\nschema = CollectionSchema(\n  fields=[book_id, book_name, word_count, book_intro],\n  description=\"Test book search\",\n  enable_dynamic_field=True\n)\ncollection_name = \"book\"\n\nfrom pymilvus import Collection\ncollection = Collection(\n    name=collection_name,\n    schema=schema,\n    using='default',\n    shards_num=2\n    )\n\nimport random\ndata = [\n  [i for i in range(2000)],\n  [str(i) for i in range(2000)],\n  [i for i in range(10000, 12000)],\n  [[random.random() for _ in range(2)] for _ in range(2000)],\n  # use `default_value` for a field\n  [], \n  # or\n  None,\n  # or just omit the field\n]\n\n## Once your collection is enabled with dynamic schema,\n## you can add non-existing field values.\ndata.append([str(\"dy\"*i) for i in range(2000)])\n\nfrom pymilvus import Collection\ncollection = Collection(\"book\")      # Get an existing collection.\nmr = collection.insert(data)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n  + Apple M3 Max\n  + 64 GB memory\n  + macOS Sonoma Version 14.2.1, \n\n- Method of installation (Docker, or from source):\n  + https://milvus.io/docs/install_standalone-helm.md\n\n- Milvus version (v0.3.1, or v0.4.0):\n  + v2.3.5\n\n- Milvus configuration (Settings you made in `server_config.yaml`):\n  + Default from Helm chart\nAnything else?\nNo response", "created_at": "2024-01-19", "closed_at": null, "labels": ["kind/bug", "documentation"], "State": "open", "Author": "ryzal-stengg"}
{"issue_number": 1875, "issue_title": "[Bug]: Failure to search with the search data set to a list of floats when calling MilvusClient.search()", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nAccording to the type hints of the search method, data accepts a list of lists or a list of floats. However, when running the following code with data set to a list of floats, a ParamError occurs.\nsearch_params = {\n    \"metric_type\": \"IP\",\n    \"params\": {}\n}\n\nres = client.search(\n    collection_name=\"test_collection\",\n    data=[0.05, 0.23, 0.07, 0.45, 0.13],\n    limit=3,\n    search_params=search_params\n)\nIt worked when wrapping it with a pair of square brackets.\nExpected Behavior\nThe search should succeed without any error.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-17", "closed_at": null, "labels": ["kind/bug", "documentation"], "State": "open", "Author": "AnthonyTsu1984"}
{"issue_number": 1873, "issue_title": "[Bug]: Failure to create a collection in fast-setup mode using MilvusClient.create_collection()", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I run the following code\nclient.create_collection(\n    collection_name=\"quick_setup\",\n    dimension=5,\n    primary_field_name=\"my_id\",\n    id_type=\"string\",\n    vector_field_name=\"my_vector\",\n    metric_type=\"L2\",\n    auto_id=True\n)\nThe following exception has been raised.\nRPC error: [create_collection], <MilvusException: (code=65535, message=type param(max_length) should be specified for varChar field of collection quick_setup)>, <Time:{'RPC start': '2024-01-17 17:06:30.074462', 'RPC error': '2024-01-17 17:06:30.094057'}>\nFailed to create collection: quick_setup\n\nAssume that this exception was raised because I set id_type to string. It works when I omit this parameter.\nExpected Behavior\nNo exception occurs.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-17", "closed_at": null, "labels": ["kind/bug", "documentation"], "State": "open", "Author": "AnthonyTsu1984"}
{"issue_number": 1872, "issue_title": "[Bug]: [milvus_client] create collection with invalid metric_type does not report error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ncreate collection with invalid metric_type does not report error\nNo errors\n>>> milvus_client.create_collection(collection_name, dim, metric_type=\"invalid\")\n>>>\n>>>\n\nExpected Behavior\nReport errors\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient(\"\")\nmilvus_client.create_collection(collection_name, dim, consistency_level=\"Strong\", metric_type=\"invalid\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240115-fb4fbcf4\n- pymilvus version: 2.4.0rc23\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-17", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1871, "issue_title": "[Bug]: [milvus_client][not fix] The name is not consistent between \"NotLoad\" and \"Loaded\" for the return of interface \"get_load_state\" ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe interface \"get_load_state\" reports unexpected error when input the right parameter\nmilvus_client.get_load_state(\"high_level_api_RVJQjyAY\")\nUnexpected error: [get_load_state], get_load_state() got an unexpected keyword argument 'tiemout', <Time: {'RPC start': '2024-01-17 16:02:42.570920', 'Exception': '2024-01-17 16:02:42.571020'}>\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 706, in get_load_state\n    raise ex from ex\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 704, in get_load_state\n    state = conn.get_load_state(collection_name, partition_names, tiemout=timeout, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 153, in handler\n    raise MilvusException(message=f\"Unexpected error, message=<{e!s}>\") from e\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=Unexpected error, message=<get_load_state() got an unexpected keyword argument 'tiemout'>)>\n\nExpected Behavior\nReturn loading state with no errors\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\n\nhas_collection = milvus_client.has_collection(collection_name, timeout=5)\nif has_collection:\n    milvus_client.drop_collection(collection_name)\nmilvus_client.create_collection(collection_name, dim)\nmilvus_client.get_load_state(collection_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240115-fb4fbcf4\n- pymilvus version: 2.4.0rc23\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-17", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 1870, "issue_title": "[Bug]: [milvus_client] The error msg does not show the complete usage for delete without all the required parameters", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error msg does not show the complete usage for delete without all the required parameters:\nwhen run\nmilvus_client.delete(collection_name)\n\nit shows \"code=1, message=expr cannot be empty\", but actually either ids and expr are OK, here only shows expr.\nAnd \"expr\" could be replaced with the parameter name \"filter\".\nExpected Behavior\nsth like \"ids or expr cannot be empty\"\nand it is better to replace \"expr\"  with the parameter name \"filter\"\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\nfmt = \"\\n=== {:30} ===\\n\"\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\n\nhas_collection = milvus_client.has_collection(collection_name, timeout=5)\nif has_collection:\n    milvus_client.drop_collection(collection_name)\nmilvus_client.create_collection(collection_name, dim, consistency_level=\"Strong\", metric_type=\"L2\")\n\nprint(fmt.format(\"    all collections    \"))\nprint(milvus_client.list_collections())\n\nprint(fmt.format(f\"schema of collection {collection_name}\"))\nprint(milvus_client.describe_collection(collection_name))\n\nrng = np.random.default_rng(seed=19530)\nrows = [\n        {\"id\": 1, \"vector\": rng.random((1, dim))[0], \"a\": 100},\n        {\"id\": 2, \"vector\": rng.random((1, dim))[0], \"b\": 200},\n        {\"id\": 3, \"vector\": rng.random((1, dim))[0], \"c\": 300},\n        {\"id\": 4, \"vector\": rng.random((1, dim))[0], \"d\": 400},\n        {\"id\": 5, \"vector\": rng.random((1, dim))[0], \"e\": 500},\n        {\"id\": 6, \"vector\": rng.random((1, dim))[0], \"f\": 600},\n]\n\nprint(fmt.format(\"Start inserting entities\"))\ninsert_result = milvus_client.insert(collection_name, rows, progress_bar=True)\nprint(fmt.format(\"Inserting entities done\"))\nprint(insert_result)\nmilvus_client.delete(collection_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240115-fb4fbcf4\n- pymilvus version: 2.4.0rc23\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-17", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1869, "issue_title": "[Bug]: [milvus_client] The error msg does not show what is the error is when delete with wrong format for ids ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error msg does not show what is the error is when delete with wrong format for ids:\nwhen input non-list for ids, it reports \"expr cannot be empty\" which does show what is the error for the parameter \"ids\"\n>>> milvus_client.delete(collection_name, ids=0)\nRPC error: [delete], <ParamError: (code=1, message=expr cannot be empty)>, <Time:{'RPC start': '2024-01-17 10:36:27.654276', 'RPC error': '2024-01-17 10:36:27.654381'}>\nFailed to delete primary keys in collection: hello_milvus\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 527, in delete\n    raise ex from ex\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 522, in delete\n    res = conn.delete(collection_name, expr, partition_name, timeout=timeout, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 135, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 131, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 170, in handler\n    return func(self, *args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 110, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 74, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 605, in delete\n    raise err from err\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 584, in delete\n    req = Prepare.delete_request(\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/prepare.py\", line 560, in delete_request\n    check_str(expr, \"expr\")\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/prepare.py\", line 555, in check_str\n    raise ParamError(message=f\"{prefix} cannot be empty\")\npymilvus.exceptions.ParamError: <ParamError: (code=1, message=expr cannot be empty)>\n\nExpected Behavior\nsome msg like \"ids should be ...\"\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\nfmt = \"\\n=== {:30} ===\\n\"\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\n\nhas_collection = milvus_client.has_collection(collection_name, timeout=5)\nif has_collection:\n    milvus_client.drop_collection(collection_name)\nmilvus_client.create_collection(collection_name, dim, consistency_level=\"Strong\", metric_type=\"L2\")\n\nprint(fmt.format(\"    all collections    \"))\nprint(milvus_client.list_collections())\n\nprint(fmt.format(f\"schema of collection {collection_name}\"))\nprint(milvus_client.describe_collection(collection_name))\n\nrng = np.random.default_rng(seed=19530)\nrows = [\n        {\"id\": 1, \"vector\": rng.random((1, dim))[0], \"a\": 100},\n        {\"id\": 2, \"vector\": rng.random((1, dim))[0], \"b\": 200},\n        {\"id\": 3, \"vector\": rng.random((1, dim))[0], \"c\": 300},\n        {\"id\": 4, \"vector\": rng.random((1, dim))[0], \"d\": 400},\n        {\"id\": 5, \"vector\": rng.random((1, dim))[0], \"e\": 500},\n        {\"id\": 6, \"vector\": rng.random((1, dim))[0], \"f\": 600},\n]\n\nprint(fmt.format(\"Start inserting entities\"))\ninsert_result = milvus_client.insert(collection_name, rows, progress_bar=True)\nprint(fmt.format(\"Inserting entities done\"))\nprint(insert_result)\nmilvus_client.delete(collection_name, ids=0)\nmilvus_client.delete(collection_name, 0)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240115-fb4fbcf4\n- pymilvus version: 2.4.0rc23\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-17", "closed_at": "2024-02-06", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1868, "issue_title": "[Bug]: [milvus_client][Defer] Row count shows 0 for interface \"get_collection_stats\" and \"get_partition_stats\" when the collection/partition is not empty", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nRow count shows 0 for interface \"get_collection_stats\" when the collection is not empty\n>>> milvus_client.get_collection_stats(collection_name)\n{'row_count': 0}\n>>>\n>>>\n>>>\n>>> query_results = milvus_client.query(collection_name, ids=[2])\n>>> query_results\n[{'id': 2, 'vector': [0.9007387, 0.44944635, 0.18477614, 0.42930314, 0.40345728, 0.3957196, 0.6963897, 0.24356908], 'b': 200}]\n\nExpected Behavior\nShows the correct row count\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\nfmt = \"\\n=== {:30} ===\\n\"\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\n\nhas_collection = milvus_client.has_collection(collection_name, timeout=5)\nif has_collection:\n    milvus_client.drop_collection(collection_name)\nmilvus_client.create_collection(collection_name, dim, consistency_level=\"Strong\", metric_type=\"L2\")\n\nprint(fmt.format(\"    all collections    \"))\nprint(milvus_client.list_collections())\n\nprint(fmt.format(f\"schema of collection {collection_name}\"))\nprint(milvus_client.describe_collection(collection_name))\n\nrng = np.random.default_rng(seed=19530)\nrows = [\n        {\"id\": 1, \"vector\": rng.random((1, dim))[0], \"a\": 100},\n        {\"id\": 2, \"vector\": rng.random((1, dim))[0], \"b\": 200},\n        {\"id\": 3, \"vector\": rng.random((1, dim))[0], \"c\": 300},\n        {\"id\": 4, \"vector\": rng.random((1, dim))[0], \"d\": 400},\n        {\"id\": 5, \"vector\": rng.random((1, dim))[0], \"e\": 500},\n        {\"id\": 6, \"vector\": rng.random((1, dim))[0], \"f\": 600},\n]\n\nprint(fmt.format(\"Start inserting entities\"))\ninsert_result = milvus_client.insert(collection_name, rows, progress_bar=True)\nprint(fmt.format(\"Inserting entities done\"))\nprint(insert_result)\nres = milvus_client.get_collection_stats(collection_name)\nprint(res)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240115-fb4fbcf4\n- pymilvus version: 2.4.0rc23\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-17", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 1867, "issue_title": "InvalidateCollectionMetaCache failed", "issue_body": "          I am learning from the [Run Milvus using Python](https://milvus.io/docs/example_code.md) using the Milvus lite on my mac directly, and when I first run the code, it encounter the error below and then leave a collection in my DB.However, the second time I run it just few seconds after, everything went right but the collection it made in the first try remains.I don't know why it will the error occurs and I don't know why it returns normal.\n\n=== start connecting to Milvus     ===\n\nDoes collection hello_milvus exist in Milvus: False\n\n=== Create collection `hello_milvus` ===\n\nRPC error: [create_collection], <MilvusException: (code=65535, message=InvalidateCollectionMetaCache failed, proxyID = 2, err = stack trace: /Users/jibin/Working/milvus-lite/milvus_binary/milvus/pkg/tracer/stack_trace.go:51 github.com/milvus-io/milvus/pkg/tracer.StackTrace\n/Users/jibin/Working/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:515 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n/Users/jibin/Working/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:529 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n/Users/jibin/Working/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:76 github.com/milvus-io/milvus/internal/distributed/proxy/client.wrapGrpcCall[...]\n/Users/jibin/Working/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:109 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).InvalidateCollectionMetaCache\n/Users/jibin/Working/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:157 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).InvalidateCollectionMetaCache.func1\n/Users/jibin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n/opt/homebrew/Cellar/go/1.21.4/libexec/src/runtime/asm_arm64.s:1197 runtime.goexit: attempt #0: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #1: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #2: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #3: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #4: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #5: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #6: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #7: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #8: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #9: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match)>, <Time:{'RPC start': '2024-01-16 19:27:20.388750', 'RPC error': '2024-01-16 19:28:33.203917'}>\nTraceback (most recent call last):\n  File \"/Users/liuzihao/Desktop/Draft/milvus/hello_Milvus/hello_milvus.py\", line 59, in <module>\n    hello_milvus = Collection(\"hello_milvus\", schema, consistency_level=\"Strong\")\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/liuzihao/Desktop/Draft/milvus/milvus/lib/python3.11/site-packages/pymilvus/orm/collection.py\", line 147, in __init__\n    conn.create_collection(self._name, schema, **kwargs)\n  File \"/Users/liuzihao/Desktop/Draft/milvus/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 129, in handler\n    raise e from e\n  File \"/Users/liuzihao/Desktop/Draft/milvus/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 125, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/liuzihao/Desktop/Draft/milvus/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 164, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/liuzihao/Desktop/Draft/milvus/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 104, in handler\n    raise e from e\n  File \"/Users/liuzihao/Desktop/Draft/milvus/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 68, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/liuzihao/Desktop/Draft/milvus/milvus/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 293, in create_collection\n    check_status(status)\n  File \"/Users/liuzihao/Desktop/Draft/milvus/milvus/lib/python3.11/site-packages/pymilvus/client/utils.py\", line 54, in check_status\n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=InvalidateCollectionMetaCache failed, proxyID = 2, err = stack trace: /Users/jibin/Working/milvus-lite/milvus_binary/milvus/pkg/tracer/stack_trace.go:51 github.com/milvus-io/milvus/pkg/tracer.StackTrace\n/Users/jibin/Working/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:515 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n/Users/jibin/Working/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:529 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n/Users/jibin/Working/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:76 github.com/milvus-io/milvus/internal/distributed/proxy/client.wrapGrpcCall[...]\n/Users/jibin/Working/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:109 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).InvalidateCollectionMetaCache\n/Users/jibin/Working/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:157 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).InvalidateCollectionMetaCache.func1\n/Users/jibin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n/opt/homebrew/Cellar/go/1.21.4/libexec/src/runtime/asm_arm64.s:1197 runtime.goexit: attempt #0: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #1: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #2: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #3: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #4: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #5: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #6: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #7: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #8: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match: attempt #9: rpc error: code = Unknown desc = expectedNodeID=2, actualNodeID=3: node not match)>\n\nOriginally posted by @Phobia-Cosmos in milvus-io/milvus#21181 (comment)", "created_at": "2024-01-16", "closed_at": "2024-03-05", "labels": [], "State": "closed", "Author": "Phobia-Cosmos"}
{"issue_number": 1866, "issue_title": "[Bug]: [milvus_client] Search specifying the same metric type with that in create collection reports error \"metric type not match: service internal error: UnknownError)\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nSearch with the same metric type using in create collection report error \"metric type not match: service internal error: UnknownError)\"\nif search without \"metric_type\", it is successful.\n>>> search_params = {\"metric_type\": \"L2\"}\n>>>\n>>> result = milvus_client.search(collection_name, vectors_to_search, limit=3, output_fields=[\"pk\", \"a\", \"b\"], search_params=search_params)\nRPC error: [search], <MilvusException: (code=65535, message=fail to search on QueryNode 1: worker(1) query failed: Assert \"metric_str == index_meta.GeMetricType()\" at /go/src/github.com/milvus-io/milvus/internal/core/src/segcore/SegmentGrowingImpl.h:291\n => metric type not match: service internal error: UnknownError)>, <Time:{'RPC start': '2024-01-16 18:38:16.881802', 'RPC error': '2024-01-16 18:38:17.696215'}>\nFailed to search collection: hello_milvus\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 320, in search\n    raise ex from ex\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 306, in search\n    res = conn.search(\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 135, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 131, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 170, in handler\n    return func(self, *args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 110, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 74, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 786, in search\n    return self._execute_search(request, timeout, round_decimal=round_decimal, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 728, in _execute_search\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 721, in _execute_search\n    check_status(response.status)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/utils.py\", line 58, in check_status\n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=fail to search on QueryNode 1: worker(1) query failed: Assert \"metric_str == index_meta.GeMetricType()\" at /go/src/github.com/milvus-io/milvus/internal/core/src/segcore/SegmentGrowingImpl.h:291\n => metric type not match: service internal error: UnknownError)>\n\nExpected Behavior\ndo not report error\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n     MilvusClient,\n )\n\n\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\n\nmilvus_client.create_collection(collection_name, dim, consistency_level=\"Strong\", metric_type=\"L2\")\nrng = np.random.default_rng(seed=19530)\nrows = [\n         {\"id\": 1, \"vector\": rng.random((1, dim))[0], \"a\": 100},\n         {\"id\": 2, \"vector\": rng.random((1, dim))[0], \"b\": 200},\n         {\"id\": 3, \"vector\": rng.random((1, dim))[0], \"c\": 300},\n         {\"id\": 4, \"vector\": rng.random((1, dim))[0], \"d\": 400},\n         {\"id\": 5, \"vector\": rng.random((1, dim))[0], \"e\": 500},\n         {\"id\": 6, \"vector\": rng.random((1, dim))[0], \"f\": 600},\n ]\ninsert_result = milvus_client.insert(collection_name, rows, progress_bar=True)\nrng = np.random.default_rng(seed=19530)\nvectors_to_search = rng.random((1, dim))\nresult = milvus_client.search(collection_name, vectors_to_search, limit=3, output_fields=[\"pk\", \"a\", \"b\"])\nsearch_params = {\"metric_type\": \"L2\"}\nresult = milvus_client.search(collection_name, vectors_to_search, limit=3, output_fields=[\"pk\", \"a\", \"b\"], search_params=search_params)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240115-fb4fbcf4\n- pymilvus version: 2.4.0rc23\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-16", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1865, "issue_title": "[Bug]:  [milvus_client] The error msg is not user friendly when lack of required parameters for interface create_collection", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error msg is not user friendly when lack of required parameters for interface create_collection\nmilvus_client.create_collection(collection_name)\nRPC error: [create_collection], <MilvusException: (code=65535, message=strconv.ParseInt: parsing \"None\": invalid syntax)>, <Time:{'RPC start': '2024-01-16 15:02:20.547216', 'RPC error': '2024-01-16 15:02:20.640490'}>\nFailed to create collection: hello_milvus\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 82, in create_collection\n    return self._fast_create_collection(\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 139, in _fast_create_collection\n    raise ex from ex\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 135, in _fast_create_collection\n    conn.create_collection(collection_name, schema, timeout=timeout, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 135, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 131, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 170, in handler\n    return func(self, *args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 110, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 74, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 304, in create_collection\n    check_status(status)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/utils.py\", line 58, in check_status\n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=strconv.ParseInt: parsing \"None\": invalid syntax)>\n\nExpected Behavior\nThe error msg should remind that all the required parameters, like \"create_collection() missing 1 required positional argument: 'collection_name'\"\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n    DataType\n)\n\nmilvus_client = MilvusClient()\ncollection_name = \"hello_milvus\"\nmilvus_client.create_collection(collection_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240115-fb4fbcf4\n- pymilvus version: 2.4.0rc23\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-16", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1864, "issue_title": "[Bug]:  [milvus_client] add field to schema is failed with error \"'NoneType' object has no attribute 'auto_id'\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n[milvus_client] add field to schema is failed with error \"'NoneType' object has no attribute 'auto_id'\"\nschema = milvus_client.create_schema(enable_dynamic_field=True)\n>>> schema.add_field(\"id\", DataType.INT64, is_primary=True)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/orm/schema.py\", line 138, in __repr__\n    return str(self.to_dict())\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/orm/schema.py\", line 230, in to_dict\n    \"auto_id\": self.auto_id,\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/orm/schema.py\", line 213, in auto_id\n    return self.primary_field.auto_id\nAttributeError: 'NoneType' object has no attribute 'auto_id'\n\nAnd\n>>> schema = milvus_client.create_schema()\n>>>\n>>> schema\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/orm/schema.py\", line 138, in __repr__\n    return str(self.to_dict())\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/orm/schema.py\", line 230, in to_dict\n    \"auto_id\": self.auto_id,\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/orm/schema.py\", line 213, in auto_id\n    return self.primary_field.auto_id\nAttributeError: 'NoneType' object has no attribute 'auto_id'\n>>> schema.add_field(\"id\", DataType.INT64, is_primary=True)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/orm/schema.py\", line 138, in __repr__\n    return str(self.to_dict())\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/orm/schema.py\", line 230, in to_dict\n    \"auto_id\": self.auto_id,\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/orm/schema.py\", line 213, in auto_id\n    return self.primary_field.auto_id\nAttributeError: 'NoneType' object has no attribute 'auto_id'\n\nExpected Behavior\nNo error\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n    DataType\n)\n\nmilvus_client = MilvusClient()\nschema = milvus_client.create_schema(enable_dynamic_field=True)\nschema.add_field(\"id\", DataType.INT64, is_primary=True)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240115-fb4fbcf4\n- pymilvus version: 2.4.0rc23\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-16", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1863, "issue_title": "[QUESTION]: Says Collection is not loaded after creation but I think it is loaded?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nIf you look at this code from example code that is provided it notes that # collection is not loaded after creation\nHowever when I checked the  .create_collection source code, I found that load_collection function is called and it returns ._create_collection_with_schema which has load_collection function within it. Can you guys check this for me?\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n    DataType\n)\n\nfmt = \"\\n=== {:30} ===\\n\"\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient(\"http://localhost:19530\")\n\nhas_collection = milvus_client.has_collection(collection_name, timeout=5)\nif has_collection:\n    milvus_client.drop_collection(collection_name)\n\nschema = milvus_client.create_schema(enable_dynamic_field=True)\nschema.add_field(\"id\", DataType.INT64, is_primary=True)\nschema.add_field(\"embeddings\", DataType.FLOAT_VECTOR, dim=dim)\nschema.add_field(\"title\", DataType.VARCHAR, max_length=64)\n\n# collection is not loaded after creation\nmilvus_client.create_collection(collection_name, schema=schema, consistency_level=\"Strong\")\n\nmilvus_client.py code:\n    def create_collection():\n...\n...\n...\n        return self._create_collection_with_schema(\n            collection_name, schema, index_params, timeout=timeout, **kwargs\n        )\n    def _create_collection_with_schema(\n        self,\n        collection_name: str,\n        schema: CollectionSchema,\n        index_params: IndexParams,\n        timeout: Optional[float] = None,\n        **kwargs,\n    ):\n        schema.verify()\n        if kwargs.get(\"auto_id\", False):\n            schema.auto_id = True\n        if kwargs.get(\"enable_dynamic_field\", False):\n            schema.enable_dynamic_field = True\n        schema.verify()\n\n        conn = self._get_connection()\n        if \"consistency_level\" not in kwargs:\n            kwargs[\"consistency_level\"] = DEFAULT_CONSISTENCY_LEVEL\n        try:\n            conn.create_collection(collection_name, schema, timeout=timeout, **kwargs)\n            logger.debug(\"Successfully created collection: %s\", collection_name)\n        except Exception as ex:\n            logger.error(\"Failed to create collection: %s\", collection_name)\n            raise ex from ex\n\n        if index_params:\n            self.create_index(collection_name, index_params, timeout=timeout)\n            self.load_collection(collection_name, timeout=timeout) ############# load_collection()??\n\nAnything else?\nNo response", "created_at": "2024-01-16", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "molo6379"}
{"issue_number": 1856, "issue_title": "[Bug]: Zero width cause search failure for iterator", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nrelated: milvus-io/milvus#29305\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\ncurrently, width may be zero when the last page has results with completely same distances, which may lead to failure on the next iteration.\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-05", "closed_at": null, "labels": [], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 1850, "issue_title": "[Bug]: The functionality of the alias link is not working.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I call add_connection() to add connections to Zilliz Cloud clusters, the following are identified:\n\n\nNot clear about valid fields in the connection dictionary: Can I add token, user, password in the dictionary?\n\n\nCase 1: Include token in the alias definition\nconnections.add_connection(\n    default={\"host\": \"localhost\", \"port\": 19530},\n    dev2={ \n      \"uri\": \"https://in01-**********.aws-us-west-2.vectordb.zillizcloud.com:19530\", \n      \"token\": \"db_admin:***\"\n    },\n)\n\nconnections.connect(alias=\"dev2\")\n\n# MilvusException: <MilvusException: (code=2, message=Fail connecting to server on in01-*********.aws-us-west-2.vectordb.zillizcloud.com:19530. Timeout)>\n\n\nCase 2: Exclude token in the alias definition\nconnections.add_connection(\n    default={\"host\": \"localhost\", \"port\": 19530},\n    dev2={ \n      \"uri\": \"https://in01-**********.aws-us-west-2.vectordb.zillizcloud.com:19530\"\n    },\n)\n\nconnections.connect(\n    alias=\"dev2\",\n    token=\"*******\"\n )\n\n# MilvusException: <MilvusException: (code=2, message=Fail connecting to server on in01-*********.aws-us-west-2.vectordb.zillizcloud.com:19530. Timeout)>\n\n\nCase 3: Use user and password instead\nconnections.add_connection(\n    default={\"host\": \"localhost\", \"port\": 19530},\n    dev2={ \n      \"uri\": \"https://in01-**********.aws-us-west-2.vectordb.zillizcloud.com:19530\"\n    },\n)\n\nconnections.connect(\n    alias=\"dev2\",\n    user=\"db-*****\",\n    password=\"******\"\n )\n\n# MilvusException: <MilvusException: (code=2, message=Fail connecting to server on in01-*********.aws-us-west-2.vectordb.zillizcloud.com:19530. Timeout)>\n\n\n\n\nAfter setting uri to an endpoint URI without a trailing port number (i.e. the endpoint URI of any serverless cluster), pymilvus automatically adds 19530 to the end of the specified endpoint, resulting in timeout failure.\nWhen I initiate a connection using the alias added above as follows:\n  connections.add_connection(\n     default={\"host\": \"localhost\", \"port\": 19530},\n     dev2={ \n        \"uri\": \"https://in01-**********.aws-us-west-2.vectordb.zillizcloud.com\", \n         token\": \"db_admin:***\"\n      },\n  )\n\nconnections.connection(alias=\"dev2\")\nThe following error occurs:\nMilvusException: <MilvusException: (code=2, message=Fail connecting to server on in01-*********.aws-us-west-2.vectordb.zillizcloud.com:19530. Timeout)>\n\n\nExpected Behavior\nAll the above cases should work instead of throwing timeout errors.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Software conditions (OS, CPU, GPU, Memory):\n\n  Mac OS, Apple M1, No GPU, 8G\n\n- Method of installation (Docker, or from source):\n\n  Docker Compose\n\n- Milvus version (v0.3.1, or v0.4.0):\n\n  v2.3.3\n\n- PyMilvus version\n\n  v2.3.4\nAnything else?\nNo response", "created_at": "2024-01-04", "closed_at": "2024-03-05", "labels": [], "State": "closed", "Author": "AnthonyTsu1984"}
{"issue_number": 1849, "issue_title": "[Bug]: The functionality of the alias link is not working.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-04", "closed_at": "2024-01-04", "labels": [], "State": "closed", "Author": "czs007"}
{"issue_number": 1848, "issue_title": "[Bug]: when milvus service is down, search will retry many times. It will result the client wail for a long time, but got a timeout exception in the end.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen milvus service is down, search will retry many times\uff0cfinally return timeout\u3002It will result the client wail for a long time, but got a timeout exception in the end.\nI want it fast fail. No retry.\nThis is my search code:\ncollection.search(vectors_to_search, \"embedding\", search_params, expr=exp, limit=3, output_fields=[\"user_msg\",\"npc_msg\"], timeout=0.2)\nExpected Behavior\nI want it fast fail. No retry.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-04", "closed_at": "2024-03-05", "labels": [], "State": "closed", "Author": "micronetboy"}
{"issue_number": 1847, "issue_title": "[Bug]: upgrade grpcio to support python 3.12", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nInstall grpcio in Python 3.12 requires >=1.59, is there any plan to support Python 3.12 version?\nNow I've solved the problem by cloning the code and changing grpcio>=1.49.1,<=1.59.0.\nSee: grpc/grpc#34398\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-03", "closed_at": "2024-01-03", "labels": [], "State": "closed", "Author": "tianyax"}
{"issue_number": 1844, "issue_title": "[FEATURE]: Try auto reconnect when connection state changes to idle", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nPart of #1843\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2024-01-02", "closed_at": "2024-01-02", "labels": [], "State": "closed", "Author": "haorenfsa"}
{"issue_number": 1843, "issue_title": "[Bug]:  Recovery issue when server endpoint DNS record changes", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen server endpoint DNS record changes, if there's no continuous request. It takes a long time(about 2min) to recover for next coming request.\nExpected Behavior\nNext request should recover in a relatively short time.\nSteps/Code To Reproduce behavior\n\nDeploy a milvus in a K8s cluster\nDeploy ingress-nginx\nDeploy a ingress uses ingress-nginx's ingressclass\n\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/backend-protocol: GRPC\n  name: my-release\n  namespace: default\nspec:\n  ingressClassName: nginx-internal\n  rules:\n    - host: my-release-test.zilliz.cc\n      http:\n        paths:\n        - backend:\n            service:\n              name: my-release-milvus\n              port:\n                number: 19530\n          path: /\n          pathType: ImplementationSpecific\n\nsetup a DNS record A record my-release-test.zilliz.cc, record values are ingress-nginx Pods' IPs\nconnect your client to url https://my-release-test.zilliz.cc:19530\nuse netstat -netp to check the connection state, it should be reset with 2 minutes by default.\nAfter connection reset, delete current  ingress-nginx Pods, then update new Pods IPs in  DNS record my-release-test.zilliz.cc\nuse your client in step 5 to lanch grpc calls, for example has_collection\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\n\n Short term solution: #1844\n Long term solution: Add a connection pool to keep at least 1 available connection. #1820\n", "created_at": "2024-01-02", "closed_at": null, "labels": [], "State": "open", "Author": "haorenfsa"}
{"issue_number": 1839, "issue_title": "[FEATURE]: pipeline", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nHello, I noticed that the pipeline feature is still in the Beta stage. Could you please confirm if pymilvus currently supports the pipeline, and if there are any examples available? Thank you very much!\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-12-31", "closed_at": null, "labels": [], "State": "open", "Author": "WQL782795"}
{"issue_number": 1838, "issue_title": "[QUESTION]: Connect to a domain instead of ip", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI'm putting Milvus behind a reverse proxy. but when I try to connect to that domain, it always times out.\nWhen I access the domain myself it works.\nCan you clarify if milvus can access domains instead of ips?\nThanks!\nAnything else?\nNo response", "created_at": "2023-12-30", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "asennoussi"}
{"issue_number": 1830, "issue_title": "[Bug]: enable reduce_stop_for_best for iterator", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nIn the past, without using reduce_stop_for_best, iterator may get incorrect results from query node due to duplicated ids, which result in iteration ending ahead\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2023-12-27", "closed_at": "2024-01-02", "labels": [], "State": "closed", "Author": "MrPresent-Han"}
{"issue_number": 1828, "issue_title": "[FEATURE]: Support delete with consistency level", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nNo response\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2023-12-27", "closed_at": "2024-01-02", "labels": [], "State": "closed", "Author": "aoiasd"}
{"issue_number": 1933, "issue_title": "[Bug]: [milvus_client] The result is empty for describe_role", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe result is empty for describe_role:\nclient.create_role(role_name=\"read_only\")\n>>> client.describe_role(role_name=\"read_only\")\n[]\n\nExpected Behavior\nShow the role info\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient\n\n# 1. Create a milvus client\nclient = MilvusClient()\n\n# 2. Create a role\nclient.create_role(role_name=\"read_only\")\n\n# 3. Describe the role\nclient.describe_role(role_name=\"read_only\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240222-16b4c9a7\n- pymilvus version: 2.4.0rc35\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-24", "closed_at": "2024-03-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1931, "issue_title": "[Bug]: [mmap] Enable mmap for index through alter_index and report an error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen I set mmap to index\nhello_milvus.alter_index(\"default_index_name\", {'mmap.enabled': True})\n\npymilvus error:\nUnexpected error: [alter_index], status, <Time: {'RPC start': '2024-02-22 10:37:55.533745', 'Exception': '2024-02-22 10:37:55.536358'}>\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.8/dist-packages/pymilvus/decorators.py\", line 131, in handler\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python3.8/dist-packages/pymilvus/decorators.py\", line 170, in handler\n    return func(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.8/dist-packages/pymilvus/decorators.py\", line 112, in handler\n    raise e from e\n  File \"/usr/local/lib/python3.8/dist-packages/pymilvus/decorators.py\", line 74, in handler\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python3.8/dist-packages/pymilvus/client/grpc_handler.py\", line 942, in alter_index\n    status = response.status\nAttributeError: status\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"sss.py\", line 107, in <module>\n    hello_milvus.alter_index(\"default_index_name\", {'mmap.enabled': True})\n  File \"/usr/local/lib/python3.8/dist-packages/pymilvus/orm/collection.py\", line 1392, in alter_index\n    return conn.alter_index(self._name, index_name, extra_params, timeout=timeout)\n  File \"/usr/local/lib/python3.8/dist-packages/pymilvus/decorators.py\", line 153, in handler\n    raise MilvusException(message=f\"Unexpected error, message=<{e!s}>\") from e\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=Unexpected error, message=<status>)>\n\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n1. connect to Milvus\n  2. create collection\n  3. insert data\n  4. create index\n  5. set index enable mmap => fail \n  5. search, query\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):master-20240222-e5353ad0 \n- pymilvus==2.4.0rc11\nAnything else?\nNo response", "created_at": "2024-02-22", "closed_at": "2024-03-01", "labels": [], "State": "closed", "Author": "elstic"}
{"issue_number": 1930, "issue_title": "[Bug]: Failed to get file size for bulk insert API", "issue_body": "Describe the bug\nI am running a standalone milvusv2.3.4 using the command bash standalone_embed.sh and Minio in a docker using the command  docker run -p 9000:9000 -p 9001:9001 minio/minio server /data --console-address \":9001\"\nI am trying to execute this example script  using  pymilvus==2.3.6\nFirstly, this package isn't updated for RemoteBulkWriter.S3ConnectParam so i need to update the script to be RemoteBulkWriter.ConnectParam.\nI created a new bucket called a-bucket in Minio and this script can  upload the files to Minio.\nWhen it comes to bulk insert it fails with the following error\n===================== call bulkinsert ====================\nCollection 'all_types_for_bulkwriter' created\nCreate a bulkinert task, task id: 447896987652805397\nWait 1 second to check bulkinsert tasks state...\nThe task 447896987652805397 failed, reason: failed to get file size of 'bulk_data/c08b98aa-cae9-4f6c-860b-cfa06ab3d4d3/1/id.npy', error:stat bulk_data/c08b98aa-cae9-4f6c-860b-cfa06ab3d4d3/1/id.npy: no such file or directory: importing data failed\nCollection row number: 0\nCreate index...\nLoad collection and query items [100, 5000]\nid in [100, 5000]\nQuery results:\n\nI see the files upload to Minio bucket\n(base) [rakesh@t1b milvus]$ ../minio-binaries/mc ls local/a-bucket/bulk_data/c08b98aa-cae9-4f6c-860b-cfa06ab3d4d3/1\n[2024-02-22 20:40:06 AEDT] 9.7MiB STANDARD $meta.npy\n[2024-02-22 20:40:06 AEDT]  20KiB STANDARD bool.npy\n[2024-02-22 20:40:06 AEDT] 156KiB STANDARD double.npy\n[2024-02-22 20:40:06 AEDT]  78KiB STANDARD float.npy\n[2024-02-22 20:40:06 AEDT] 156KiB STANDARD id.npy\n[2024-02-22 20:40:06 AEDT]  39KiB STANDARD int16.npy\n[2024-02-22 20:40:06 AEDT]  78KiB STANDARD int32.npy\n[2024-02-22 20:40:06 AEDT] 156KiB STANDARD int64.npy\n[2024-02-22 20:40:06 AEDT]  20KiB STANDARD int8.npy\n[2024-02-22 20:40:06 AEDT] 2.6MiB STANDARD json.npy\n[2024-02-22 20:40:06 AEDT] 938KiB STANDARD varchar.npy\n[2024-02-22 20:40:06 AEDT] 1.2MiB STANDARD vector.npy\n\nI am quite stuck with this issue for 2 days. Any help on this will be highly appreciated.\nMany thanks.\nExpected Behavior\nI should see the script doing bulk inserts and return results for the queries.\nSteps/Code To Reproduce behavior\nPlease refer above.\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nPlease update the documentation for bulk inserts.", "created_at": "2024-02-22", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "RakeshRaj97"}
{"issue_number": 1929, "issue_title": "[Bug]: [Milvus 2.3.7-GPU] Fail to Query", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nAfter generating with gpu index, the following error occurs when query with the collection.query command in pymilvus.\n\nERROR:pymilvus.decorators:RPC error: [query], <MilvusException: (code=1, message=failed to search/query delegator 18 for channel by-dev-rootcoord-dml_11_447378442453326967v1: fail to Query, QueryNode ID = 18, reason=worker(18) query failed:  => failed to get vector, not implemented)>, <Time:{'RPC start': '2024-02-13 15:44:10.161790', 'RPC error': '2024-02-13 15:44:10.833928'}>\n\nenvironment is below\ncurrent milvus version : 2.3.7-gpu\npymilvus version : 2.3.6 & 2.2.12\nindex params :   {\n        \"index_type\": \"GPU_IVF_FLAT\",\n        \"metric_type\": \"L2\",\n        \"params\": {\"nlist\": 128},\n    }\n\nquery code : \n    expr = f\"pk in [0, 1, 2]\"\n    output_fields = [ID_FIELD_NAME, EMBEDDING_FIELD_NAME]\n\n    result = collection.query(\n        expr=expr,\n        offset=0,\n        limi=10,\n        output_fields=output_fields,\n    )\n\n\nExpected Behavior\nsolve this error\nSteps/Code To Reproduce behavior\nindex params :   {\n        \"index_type\": \"GPU_IVF_FLAT\",\n        \"metric_type\": \"L2\",\n        \"params\": {\"nlist\": 128},\n    }\n\nquery code : \n    expr = f\"pk in [0, 1, 2]\"\n    output_fields = [ID_FIELD_NAME, EMBEDDING_FIELD_NAME]\n\n    result = collection.query(\n        expr=expr,\n        offset=0,\n        limi=10,\n        output_fields=output_fields,\n    )\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): centos, enough\n- Method of installation (Docker, or from source): milvusdb/milvus:v2.3.7-gpu\n- Milvus version (v0.3.1, or v0.4.0): 2.3.7\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-16", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "Nanjangpan"}
{"issue_number": 1928, "issue_title": "Getting exception when trying to delete entity in Milvis vector database using pymilvus", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nam working on the python application and I am storing data in Milvus vector database. I have written the following code to delete entity in Milvus vector database using pymilvus library.\ndef delete_entities(self, collection_name, entity_id):\n        expr = \"obj_id in [\" + entity_id + \"]\"\n        collection = Collection(collection_name)\n        collection.delete(expr)\n\nWhen I execute the code, I am getting this error:\nRPC error: [delete], <MilvusException: (code=65535, message=failed to create expr plan, expr = obj_id in [65ce930d39989b871863b5dd])>, <Time:{'RPC start': '2024-02-16 00:53:20.651576', 'RPC error': '2024-02-16 00:53:20.653786'}>\nException in thread Thread-9:\nTraceback (most recent call last):\n  File \"C:\\Users\\usajid\\AppData\\Local\\Programs\\Python\\Python39\\lib\\threading.py\", line 980, in _bootstrap_inner\n    self.run()\n  File \"C:\\Users\\usajid\\AppData\\Local\\Programs\\Python\\Python39\\lib\\threading.py\", line 917, in run\n    self._target(*self._args, **self._kwargs)\n  File \"C:\\Users\\usajid\\Desktop\\semanticsearch\\src\\backend\\components\\consumer.py\", line 61, in subscribe_topic\n    self.COOPERANTS.delete_entities(collection_name, payload['documentKey']['_id']['$oid'])\n  File \"C:\\Users\\usajid\\Desktop\\semanticsearch\\src\\backend\\components\\clients.py\", line 50, in delete_entities\n    collection.delete(expr)\n  File \"c:\\Users\\usajid\\Desktop\\semanticsearch\\.venv\\lib\\site-packages\\pymilvus\\orm\\collection.py\", line 573, in delete        \n    res = conn.delete(self._name, expr, partition_name, timeout=timeout, **kwargs)\n  File \"c:\\Users\\usajid\\Desktop\\semanticsearch\\.venv\\lib\\site-packages\\pymilvus\\decorators.py\", line 135, in handler\n    raise e from e\n  File \"c:\\Users\\usajid\\Desktop\\semanticsearch\\.venv\\lib\\site-packages\\pymilvus\\decorators.py\", line 131, in handler\n    return func(*args, **kwargs)\n  File \"c:\\Users\\usajid\\Desktop\\semanticsearch\\.venv\\lib\\site-packages\\pymilvus\\decorators.py\", line 170, in handler\n    return func(self, *args, **kwargs)\n  File \"c:\\Users\\usajid\\Desktop\\semanticsearch\\.venv\\lib\\site-packages\\pymilvus\\decorators.py\", line 110, in handler\n    raise e from e\n  File \"c:\\Users\\usajid\\Desktop\\semanticsearch\\.venv\\lib\\site-packages\\pymilvus\\decorators.py\", line 74, in handler\n    return func(*args, **kwargs)\n  File \"c:\\Users\\usajid\\Desktop\\semanticsearch\\.venv\\lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 602, in delete   \n    raise err from err\n  File \"c:\\Users\\usajid\\Desktop\\semanticsearch\\.venv\\lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 596, in delete   \n    check_status(response.status)\n  File \"c:\\Users\\usajid\\Desktop\\semanticsearch\\.venv\\lib\\site-packages\\pymilvus\\client\\utils.py\", line 54, in check_status     \n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=failed to create expr plan, expr = obj_id in [65ce930d39989b871863b5dd])>\n\nCan anyone tell me how to fix this issue?\nAnything else?\nNo response", "created_at": "2024-02-16", "closed_at": "2024-02-16", "labels": [], "State": "closed", "Author": "MUsman1992"}
{"issue_number": 1927, "issue_title": "[QUESTION]: Import has failed when using BulkWriter() API. ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nFailure when loading data using the BulkWrite API\nI am currently deploying a milvus cluster using k8s on my server, and I have set up port forwarding for 0.0.0.0 to allow external access to the following k8s services.\nmy-release-milvus ClusterIP 10.96.163.96 <none> 19530/TCP,9091/TCP 4h7m\nmy-release-minio ClusterIP 10.108.47.114 <none> 9000/TCP 4h11m\n\nIt works fine to connect to the milvus cluster and access minio. However, when I import the parquet file uploaded to minio into the collection by referring to the bulk_writer example in pymilvus/examples, I get the following error.\nThe task 447549569471477180 failed, reason : failed to get file size of 'bulk_data/4abc0d48-a8aa-46a1-bdf9-141737e71893/1.parquet', error:NoSuchKey(key=bulk_data/4abc0d48-a8aa-46a1-bdf9-141737e71893/1.parquet): importing data failed\n\nYou can see that the 1.parquet file is successfully uploaded to minio.\nmc ls --recursive --versions myminio/a-bucket\n[2024-02-07 16:19:54 KST]  19MiB STANDARD null v1 PUT bulk_data/4abc0d48-a8aa-46a1-bdf9-141737e71893/1.parquet\n\nI am currently using milvus v2.3.7, pymilvus v2.3.6.\nWhat am I doing wrong?\nAnything else?\nNo response", "created_at": "2024-02-07", "closed_at": "2024-02-09", "labels": [], "State": "closed", "Author": "steviego"}
{"issue_number": 1926, "issue_title": "[Bug]: [milvus_client][as design] Create \"AUTOINDEX\" failed on scalar field failed with error message \"index type not match: invalid parameter[expected=STL_SORT][actual=AUTOINDEX]\"\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nCreate \"AUTOINDEX\" failed on scalar field failed with error message \"index type not match: invalid parameter[expected=STL_SORT][actual=AUTOINDEX]\"\"\nExpected Behavior\nIndex is create successfully\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n     MilvusClient,\n )\n\n\nmilvus_client = MilvusClient()\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client.create_collection(collection_name, dim)\nmilvus_client.release_collection(collection_name)\nmilvus_client.drop_index(collection_name, \"vector\")\nindex_params = milvus_client.prepare_index_params()\nindex_params.add_index(field_name = \"vector\", index_type=\"AUTOINDEX\", metric_type = \"L2\")\nindex_params.add_index(field_name = \"id\", index_type=\"AUTOINDEX\", metric_type = \"L2\")\nmilvus_client.create_index(collection_name, index_params)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240205-a68b3213\n- Pymilvus version: 2.4.0rc34\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-06", "closed_at": null, "labels": [], "State": "open", "Author": "binbinlv"}
{"issue_number": 1925, "issue_title": "[Bug]: [milvus_client] The state is not proper when get the load state of the non-exist partition", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe load status is not right when get the load state of the non-exist partition\ncurrent, if other partition is loaded, then the non-exist partition is loaded;\nif other patition is NotLoad, then the non-exist partition is NotLoad.\nBut when the collection is not existed, the load state is \"NotExist\"\nExpected Behavior\nwhen collection_name is not exists, it return:\n{'state': <LoadState: NotExist>}\nI think it should keep the consistency of these two behaviors.\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim, consistency_level=\"Strong\", metric_type=\"L2\")\nmilvus_client.get_load_state(collection_name, partition_name=\"non-existed\")\nmilvus_client.release_collection(collection_name)\nmilvus_client.get_load_state(collection_name, partition_name=\"non-existed\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):master-20240205-a68b3213\n- Pymilvus version: 2.4.0rc34\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-06", "closed_at": "2024-03-04", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1922, "issue_title": "[Bug]: [milvus_client][milvus] The error is not consistent with other API when collection name is not valid for describe_alias", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error is not consistent with other API when collection name is not valid for describe_alias\npymilvus.exceptions.MilvusException: <MilvusException: (code=1600, message=alias not found[database=default][alias=\u4e2d\u6587])>\n\nExpected Behavior\nOther API:\nfor invalid collection name\nerror = {ct.err_code: 1100, ct.err_msg: f\"Invalid collection name: {alias_name}. the first character of a \"\n                                                f\"collection name must be an underscore or letter: invalid parameter\"}\n\nfor collection name more than 255 characters:\nerror = {ct.err_code: 1100, ct.err_msg: f\"invalid dimension: {alias}. \"\n                                                f\"the length of a collection name must be less than 255 characters: \"\n                                                f\"invalid parameter\"}\n\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n )\nmilvus_client = MilvusClient()\nalias = \"12-s\"\nmilvus_client.describe_alias(alias)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240205-a68b3213\n- Pymilvus version: pymilvus-2.4.0rc33\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-06", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 1921, "issue_title": "[Bug]: [milvus_client][milvus] The error is not consistent with other API when collection name is not valid for list_aliases", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error is not consistent with other API when collection name is more than 255 characters for list_aliases\n[2024-02-06 10:51:19 - ERROR - ci_test]: (api_response) : <MilvusException: (code=100, message=collection not found[collection=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa......\n\nExpected Behavior\nOther api:\nthe length of a collection name must be less than 255 characters: invalid parameter\n\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n )\nmilvus_client = MilvusClient()\ncollection_name = \"a\".join(\"a\" for i in range(256))\nmilvus_client.list_aliases(collection_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240205-a68b3213\n- Pymilvus version: pymilvus-2.4.0rc33\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-06", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 1918, "issue_title": "[Bug]: [milvus_client][milvus] The \"delete_count\" is not accurate when delete the non-existed or deleted id", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe \"delete_count\" is not accurate when delete the non-existed or deleted id\n>>> milvus_client.delete(collection_name, ids=0)\n{'delete_count': 1}\n>>>\n>>>\n>>> milvus_client.delete(collection_name, ids=1000)\n{'delete_count': 1}\n>>>\n>>>\n>>> milvus_client.delete(collection_name, ids=0)\n{'delete_count': 1}\n\nExpected Behavior\nMay be  {'delete_count': 0}\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\nfmt = \"\\n=== {:30} ===\\n\"\ndim = 8\ncollection_name = \"hello_milvus\"\nmilvus_client = MilvusClient()\n\nhas_collection = milvus_client.has_collection(collection_name, timeout=5)\nif has_collection:\n    milvus_client.drop_collection(collection_name)\nmilvus_client.create_collection(collection_name, dim, consistency_level=\"Strong\", metric_type=\"L2\")\n\nprint(fmt.format(\"    all collections    \"))\nprint(milvus_client.list_collections())\n\nprint(fmt.format(f\"schema of collection {collection_name}\"))\nprint(milvus_client.describe_collection(collection_name))\n\nrng = np.random.default_rng(seed=19530)\nrows = [\n        {\"id\": 1, \"vector\": rng.random((1, dim))[0], \"a\": 100},\n        {\"id\": 2, \"vector\": rng.random((1, dim))[0], \"b\": 200},\n        {\"id\": 3, \"vector\": rng.random((1, dim))[0], \"c\": 300},\n        {\"id\": 4, \"vector\": rng.random((1, dim))[0], \"d\": 400},\n        {\"id\": 5, \"vector\": rng.random((1, dim))[0], \"e\": 500},\n        {\"id\": 6, \"vector\": rng.random((1, dim))[0], \"f\": 600},\n]\n\nprint(fmt.format(\"Start inserting entities\"))\ninsert_result = milvus_client.insert(collection_name, rows, progress_bar=True)\nprint(fmt.format(\"Inserting entities done\"))\nprint(insert_result)\nmilvus_client.delete(collection_name, ids=0)\nmilvus_client.delete(collection_name, ids=0)\nmilvus_client.delete(collection_name, ids=100000)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240205-a68b3213\n- Pymilvus version: 2.4.0rc30\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-05", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 1911, "issue_title": "[FEATURE]: Add compression support for grpc", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nGRPC support gzip compression.\nThis could significantly reduce network traffic under many use cases.\nhttps://grpc.io/docs/guides/compression/\nWe need to enable the compression and test the performance under different use cases.\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2024-02-04", "closed_at": null, "labels": ["kind/feature"], "State": "open", "Author": "xiaofan-luan"}
{"issue_number": 1910, "issue_title": "[Bug]: [milvus_client] Reset password will not report error when new password is the same as the old", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nReset password will not report error when new password is the same as the old\nExpected Behavior\nreport error\nSteps/Code To Reproduce behavior\nupdate_password(user_name=user_name, old_password=password, new_password=password)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240129-033eae9e\n- Pymilvus version: 2.4.0rc24\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-01", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "NicoYuan1986"}
{"issue_number": 1908, "issue_title": "[Bug]: [milvus_client][doc] Create collection failed when granting a role with privilege CreateCollection", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nCreate collection failed when granting a role with privilege CreateCollection.\n[2024-02-01 11:36:58 - DEBUG - ci_test]: (api_request)  : [MilvusClient.create_collection] args: ['test_zbhT0wDg', 128], kwargs: {'consistency_level': 'Strong', 'timeout': 120} (api_request.py:62)\n[2024-02-01 11:36:58 - DEBUG - pymilvus.milvus_client.milvus_client]: Successfully created collection: test_zbhT0wDg (milvus_client.py:136)\n[2024-02-01 11:36:58 - ERROR - pymilvus.decorators]: grpc RpcError: [create_index], <_MultiThreadedRendezvous: StatusCode.PERMISSION_DENIED, PrivilegeCreateIndex: permission deny to user_RFqP0r7J>, <Time:{'RPC start': '2024-02-01 11:36:58.713369', 'gRPC error': '2024-02-01 11:36:58.753124'}> (decorators.py:145)\n[2024-02-01 11:36:58 - ERROR - pymilvus.milvus_client.milvus_client]: Failed to create an index on collection: test_zbhT0wDg (milvus_client.py:179)\n[2024-02-01 11:36:58 - ERROR - ci_test]: Traceback (most recent call last):\n  File \"/Users/zilliz/nico/milvus/tests/python_client/utils/api_request.py\", line 32, in inner_wrapper\n    res = func(*args, **_kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/nico/milvus/tests/python_client/utils/api_request.py\", line 63, in api_request\n    return func(*arg, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 82, in create_collection\n    return self._fast_create_collection(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 147, in _fast_create_collection\n    self.create_index(collection_name, index_params, timeout=timeout)\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 158, in create_index\n    self._create_index(collection_name, index_param, timeout=timeout, **kwargs)\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 180, in _create_index\n    raise ex from ex\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 169, in _create_index\n    conn.create_index(\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 149, in handler\n    raise e from e\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 131, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 170, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 85, in handler\n    raise e from e\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 74, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 934, in create_index\n    status = future.result()\n             ^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/grpc/_channel.py\", line 797, in result\n    raise self\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\n\tstatus = StatusCode.PERMISSION_DENIED\n\tdetails = \"PrivilegeCreateIndex: permission deny to user_RFqP0r7J\"\n\tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:10.102.9.164:19530 {created_time:\"2024-02-01T11:36:58.747062+08:00\", grpc_status:7, grpc_message:\"PrivilegeCreateIndex: permission deny to user_RFqP0r7J\"}\"\n>\n (api_request.py:45)\n[2024-02-01 11:36:58 - ERROR - ci_test]: (api_response) : <_MultiThreadedRendezvous of RPC that terminated with:\n\tstatus = StatusCode.PERMISSION_DENIED\n\tdetails = \"PrivilegeCreateIndex: permission deny to user_RFqP0r7J\"\n\tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:10.102.9.164:19530 {created_time:\"2024-02-01T11:36:58.747062+08:00\", grpc_sta...... (api_request.py:46)\n\nExpected Behavior\ncreate successfully\nSteps/Code To Reproduce behavior\n1. create a role and a user in it\n2. grant the role with CreateCollection\n3. create collection: client.create_collection(coll_name, default_dim, consistency_level=\"Strong\") -> \u274c\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240129-033eae9e\n- Pymilvus version: 2.4.0rc24\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-01", "closed_at": null, "labels": ["kind/bug", "documentation"], "State": "open", "Author": "NicoYuan1986"}
{"issue_number": 1906, "issue_title": "How to implement Database-Oriented Multi-tenancy feature using pymilvus?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHi, I have deployed Milvus using helm and able to access it using pymilvus connections.connect(). I'm looking for a way to implement multi-tenancy using the library. The feature is supported by the Milvus as described here - https://milvus.io/docs/multi_tenancy.md#Database-oriented-multi-tenancy\nI'm using Milvus version 2.3.1.\nAnything else?\nNo response", "created_at": "2024-01-30", "closed_at": "2024-02-14", "labels": [], "State": "closed", "Author": "mayankrathore"}
{"issue_number": 1901, "issue_title": "[Bug]: Milvus 2.3.5 not compatible with pymilvus 2.3.5?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI'm running milvus standalone 2.3.5 and pymilvus 2.3.5. These are the recommended versions according to release notes. However, when I use connections.connect(), I get the error:\nE               pymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=this version of sdk is incompatible with server, please downgrade your sdk or upgrade your server)>\n\n\nExpected Behavior\nI expect connections.connect() to connect.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Archlinux\n- Method of installation (Docker, or from source): docker standalone\n- Milvus version (v0.3.1, or v0.4.0): v2.3.5\nAnything else?\nFull backtrace\n    @pytest.fixture(scope=\"module\")\n    def milvus_client() -> Generator[MilvusClient, None, None]:\n        global client\n        settings = get_settings()\n        # Initialize a Milvus client\n        if client is not None:\n            yield client\n        client = MilvusClient(settings.milvus_host, settings.milvus_port)\n>       client.connect()\n\ntests/conftest.py:18:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nrag/retriever.py:51: in connect\n    connections.connect(\"default\", host=self.host, port=self.port)\n/home/wing/.conda/envs/xoul_API/lib/python3.11/site-packages/pymilvus/orm/connections.py:354: in connect\n    connect_milvus(**kwargs, user=user, password=password, token=token, db_name=db_name)\n/home/wing/.conda/envs/xoul_API/lib/python3.11/site-packages/pymilvus/orm/connections.py:302: in connect_milvus\n    gh._wait_for_channel_ready(timeout=timeout)\n/home/wing/.conda/envs/xoul_API/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py:139: in _wait_for_channel_ready\n    raise e from e\n/home/wing/.conda/envs/xoul_API/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py:132: in _wait_for_channel_ready\n    self._setup_identifier_interceptor(self._user)\n/home/wing/.conda/envs/xoul_API/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py:249: in _setup_identifier_interceptor\n    self._identifier = self.__internal_register(user, host)\n/home/wing/.conda/envs/xoul_API/lib/python3.11/site-packages/pymilvus/decorators.py:127: in handler\n    raise e from e\n/home/wing/.conda/envs/xoul_API/lib/python3.11/site-packages/pymilvus/decorators.py:123: in handler\n    return func(*args, **kwargs)\n/home/wing/.conda/envs/xoul_API/lib/python3.11/site-packages/pymilvus/decorators.py:162: in handler\n    return func(self, *args, **kwargs)\n/home/wing/.conda/envs/xoul_API/lib/python3.11/site-packages/pymilvus/decorators.py:102: in handler\n    raise e from e\n/home/wing/.conda/envs/xoul_API/lib/python3.11/site-packages/pymilvus/decorators.py:68: in handler\n    return func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = (<pymilvus.client.grpc_handler.GrpcHandler object at 0x7493d107f790>, '', 'anubis'), kwargs = {}\nmsg = 'this version of sdk is incompatible with server, please downgrade your sdk or upgrade your server'\n\n    @functools.wraps(func)\n    def handler(*args, **kwargs):\n        try:\n            return func(*args, **kwargs)\n        except grpc.RpcError as e:\n            if e.code() == grpc.StatusCode.UNIMPLEMENTED:\n                msg = (\n                    \"this version of sdk is incompatible with server, \"\n                    \"please downgrade your sdk or upgrade your server\"\n                )\n>               raise MilvusException(message=msg) from e\nE               pymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=this version of sdk is incompatible with server, please downgrade your sdk or upgrade your server)>\n", "created_at": "2024-01-29", "closed_at": "2024-01-29", "labels": [], "State": "closed", "Author": "drawnwren"}
{"issue_number": 1900, "issue_title": "[Bug]: [milvus_client][Defer] The error message is not valid when input invalid type data to \"db_name\" of interface \"using_database\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n[milvus_client] The error message is not valid when input invalid type data to \"db_name\" of interface \"using_database\"\nmessage=database not found[database=%$#])\n\nExpected Behavior\nI think here it is better to report like the following error: report the naming rules for db_name if has.\nhere is the error message for invalid partition name in partition related interface:\nInvalid partition name: {partition_name}. The first character of a partition name must be an underscore or letter.]\n\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\nmilvus_client = MilvusClient()\nmilvus_client.using_database(\"%$#\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):master-20240122-a77693aa\n- Pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-26", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 1899, "issue_title": "[Bug]: [milvus_client][Defer] Can not rename collection in different db if no create_db related interface", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nCan not rename collection in different db if no create_db related interface:\nwe have \"target_db\" parameters in rename collection, but how to create a new db? Seems no interface yet\nrename_collections(old_name, new_name, target_db, timeout=timeout, **kwargs)\nExpected Behavior\ntwo options:\n\nadd db related interfaces\ntarget_db only has default db in the first client phase, so hide this parameter or something else?\n\nSteps/Code To Reproduce behavior\nrename_collections(old_name, new_name, target_db, timeout=timeout, **kwargs)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):master-20240122-a77693aa\n- Pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-26", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 1898, "issue_title": "[Bug]: [milvus_client] Unexpected error when input extra parameter to the interface \"release_collection\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nUnexpected error when input extra parameter to the interface \"release_collection\"\n>>> milvus_client.release_collection(collection_name)\n>>> milvus_client.release_collection(collection_name, partition_name)\nUnexpected error: [release_collection], unsupported operand type(s) for +: 'float' and 'str', <Time: {'RPC start': '2024-01-26 15:29:23.318781', 'Exception': '2024-01-26 15:29:23.318995'}>\nFailed to load collection: milvus_client_api_partition_hn7yW89N\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 690, in release_collection\n    raise ex from ex\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 684, in release_collection\n    conn.release_collection(collection_name, timeout=timeout, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 153, in handler\n    raise MilvusException(message=f\"Unexpected error, message=<{e!s}>\") from e\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=Unexpected error, message=<unsupported operand type(s) for +: 'float' and 'str'>)\n\nExpected Behavior\nHandle this exception using milvus error\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\nmilvus_client = MilvusClient()\ncollection_name = \"hello_milvus\"\npartition_name = \"extra\"\nmilvus_client.release_collection(collection_name, partition_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):master-20240122-a77693aa\n- Pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-26", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1897, "issue_title": "[Bug]: [milvus_client][milvus] Typo in the error message when input empty to partition names for interface release_partitions", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n(code=1100, message=invalid parameter[expected=any parttiion][actual=empty partition list])\n\"parttiion\" should be \"partition\"\nExpected Behavior\n\"parttiion\" should be \"partition\"\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\nmilvus_client = MilvusClient()\ncollection_name = \"hello_milvus\"\nmilvus_client.release_partitions(collection_name, [])\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):master-20240122-a77693aa\n- Pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-26", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 1896, "issue_title": "[Bug]: [milvus_client]  The error message is not valid when input invalid type data to \"partition_names\" of interface \"release_partitions\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error message is not valid when input invalid type data to \"partition_names\" of interface \"release_partitions\"\ncode=200, message=partition not found[partition=12-s])\n\nExpected Behavior\nIn other interfaces, like create_partition, drop_partition, it reports:\nInvalid partition name: {partition_name}. The first character of a partition name must be an underscore or letter.]\n\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n)\n\nmilvus_client = MilvusClient()\ncollection_name = \"hello_milvus\"\nmilvus_client.release_partitions(collection_name, \"\") \nmilvus_client.release_partitions(collection_name, \"%$#\")\nmilvus_client.release_partitions(collection_name,  [\"%$#\"])\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):master-20240122-a77693aa\n- Pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-26", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1895, "issue_title": "[Bug]: [milvus_client]  Insert invalid empty data  successfully without any errors", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nInsert invalid empty data  successfully without any errors\nmilvus_client.insert(collection_name, \"\")\n{'insert_count': 0}\n\nExpected Behavior\nReport data not valid error\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n )\ndim = 8\ncollection_name = \"hello_milvus_no\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nmilvus_client.insert(collection_name, \"\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240122-a77693aa\n- pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-25", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1894, "issue_title": "[Bug]: [milvus_client] The error message could be better when insert invalid data ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error message could be better when insert invalid data  by providing what is the \"valid rows\":\n[2024-01-25 14:34:52 - ERROR - ci_test]: (api_response) : <ParamError: (code=1, message=None rows, please provide valid row data.)> (api_request.py:46)\n\nExpected Behavior\nReport more specific and operation-able error message by explaining what is the valid row data\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n )\ndim = 8\ncollection_name = \"hello_milvus_no\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nmilvus_client.insert(collection_name, \"data\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240122-a77693aa\n- pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-25", "closed_at": "2024-02-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1893, "issue_title": "[Bug]:  pyarrow version error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nI used langchain to connect to a zilliz cloud cluster , it  showed that there was a pyarrow version error,but when i checked the pyarrow version, it had no problem.\nExpected Behavior\nhow to fix it\nSteps/Code To Reproduce behavior\nvector_store = Zilliz(\n    embedding_function=hf, \n    connection_args=connection_args,\n    collection_name=COLLECTION_NAME,\n    drop_old=True,\n).from_documents(\n    texts,\n    embedding=hf,\n    collection_name=COLLECTION_NAME,\n    connection_args=connection_args,\n)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):GPU\n- Method of installation (Docker, or from source):kaggle jupyter notebook\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-24", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "WVVdragon"}
{"issue_number": 1892, "issue_title": "[Bug]: [milvus_client] The result of describe_alias is wrong", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe result of describe_alias is wrong\n>>> result = milvus_client.describe_alias(alias)\n>>> result\n>>> type(result)\n<class 'NoneType'>\n\nExpected Behavior\nA dict including the alias info\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n )\ndim = 8\ncollection_name = \"hello_milvus_no\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nalias = \"alias\"\nmilvus_client.create_alias(collection_name, alias)\nresult = milvus_client.describe_alias(alias)\ntype(result)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240122-a77693aa\n- pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-24", "closed_at": "2024-02-06", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1891, "issue_title": "[Bug]: [milvus_client] The error is not proper when there is no parameter for list_aliases() ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe result of list_aliases() is not a list (NoneType)\n>>> aliases = milvus_client.list_aliases()\n>>> aliases\n>>> type(aliases)\n<class 'NoneType'>\n\nExpected Behavior\nReturn all aliases list\nSteps/Code To Reproduce behavior\nimport time\nimport numpy as np\nfrom pymilvus import (\n    MilvusClient,\n )\ndim = 8\ncollection_name = \"hello_milvus_no\"\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name, dim)\nalias = \"alias\"\nmilvus_client.create_alias(collection_name, alias)\nmilvus_client.list_aliases()\naliases = milvus_client.list_aliases()\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240122-a77693aa\n- pymilvus version: 2.4.0rc26\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-01-24", "closed_at": "2024-02-06", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 2000, "issue_title": "[QUESTION]: what milvus version need while use hybrid_search for bge-m3", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nwhen i use hybrid search code, i got the error below:\nTraceback (most recent call last):\nFile \"/data/guoweizhang/code/llm-knowledge-base/tests/test_bge_m3.py\", line 88, in \ncol.create_index(\"sparse_vector\", sparse_index)\nFile \"/root/.conda/envs/llm_know/lib/python3.10/site-packages/pymilvus/orm/collection.py\", line 1364, in create_index\nreturn conn.create_index(self._name, field_name, index_params, timeout=timeout, **kwargs)\nFile \"/root/.conda/envs/llm_know/lib/python3.10/site-packages/pymilvus/decorators.py\", line 147, in handler\nraise e from e\nFile \"/root/.conda/envs/llm_know/lib/python3.10/site-packages/pymilvus/decorators.py\", line 143, in handler\nreturn func(*args, **kwargs)\nFile \"/root/.conda/envs/llm_know/lib/python3.10/site-packages/pymilvus/decorators.py\", line 182, in handler\nreturn func(self, *args, **kwargs)\nFile \"/root/.conda/envs/llm_know/lib/python3.10/site-packages/pymilvus/decorators.py\", line 122, in handler\nraise e from e\nFile \"/root/.conda/envs/llm_know/lib/python3.10/site-packages/pymilvus/decorators.py\", line 87, in handler\nreturn func(*args, **kwargs)\nFile \"/root/.conda/envs/llm_know/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 980, in create_index\ncheck_status(status)\nFile \"/root/.conda/envs/llm_know/lib/python3.10/site-packages/pymilvus/client/utils.py\", line 60, in check_status\nraise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=create index on json field is not supported: expected=supported field, actual=create index on 104 field: invalid parameter)>\npymilvus package version: 2.4.0\ndocker version: 2.3.x\nAnything else?\nNo response", "created_at": "2024-03-23", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "wayne2tech"}
{"issue_number": 1999, "issue_title": "[QUESTION]: The location of the milvus_model package cannot be found", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nWhen loading the model through the BGEM3EmbeddingFunction method, it is prompted that a milvus_model package is missing, but the provided github url does not exist. The specific environment information and process are as follows.How should I deal with it?\nenv\npython 3.8\npymilvus 2.4.0-1\ncode\nimport random\nimport string\nimport numpy as np\nimport pathlib\n\nfrom pymilvus import (\n    utility,\n    FieldSchema, CollectionSchema, DataType,\n    Collection, AnnSearchRequest, RRFRanker, connections,\n)\n\ndocs = [\n    \"Artificial intelligence was founded as an academic discipline in 1956.\",\n    \"Alan Turing was the first person to conduct substantial research in AI.\",\n    \"Born in Maida Vale, London, Turing was raised in southern England.\",\n]\n# add some randomly generated texts\ndocs.extend([' '.join(''.join(random.choice(string.ascii_lowercase) for _ in range(random.randint(1, 8))) for _ in range(10)) for _ in range(1000)])\nquery = \"Who started AI research?\"\n\nfrom pymilvus.model.hybrid import BGEM3EmbeddingFunction\nef = BGEM3EmbeddingFunction(model_name=bge_m3_model_path, use_fp16=False, device=\"cpu\")\nerror\nFile ~/Documents/Repository/project2024/sec_llm_know/a_venv/lib/python3.8/site-packages/pymilvus/model/__init__.py:33, in MilvusModelLoader._load_milvus_model(self)\n     27 except ImportError as e:\n     28     err_str = (\n     29         \"The 'milvus_model' package is not installed. \"\n     30         \"For installation, use 'pip install pymilvus[model]'. \"\n     31         \"For more information, please visit https://github.com/milvus-io/milvus-model.\"\n     32     )\n---> 33     raise ImportError(err_str) from e\n     34 self._milvus_model_loaded = True\n\nImportError: The 'milvus_model' package is not installed. For installation, use 'pip install pymilvus[model]'. For more information, please visit https://github.com/milvus-io/milvus-model.\n\n\nAnything else?\nNo response", "created_at": "2024-03-22", "closed_at": "2024-03-22", "labels": ["kind/question"], "State": "closed", "Author": "wwb306"}
{"issue_number": 1998, "issue_title": "[Bug]: \u77e5\u8bc6\u5e93\u6784\u5efa\u7d22\u5f15\u51fa\u9519", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nmilvus \u7248\u672c 2.3.3 \uff0c  \u4f7f\u7528 docker \u90e8\u7f72\u3002\n\u5b58\u50a8\u60c5\u51b5\u5982\u4e0b\uff1a\n[root@server volumes]# du ./ --max-depth=1 -h\n367M\t./etcd\n8.9M\t./minio\n888M\t./milvus\n1.3G\t./\n\n\u8fd0\u884c\u60c5\u51b5\u5982\u4e0b\uff1a\n[root@gpu-server milvus]# docker-compose ps\nNAME                IMAGE                                      COMMAND                   SERVICE      CREATED       STATUS                 PORTS\nattu                zilliz/attu:v2.3.2                         \"docker-entrypoint.s\u2026\"   attu         6 hours ago   Up 6 hours             0.0.0.0:8000->3000/tcp, :::8000->3000/tcp\nmilvus-etcd         quay.io/coreos/etcd:v3.5.5                 \"etcd -advertise-cli\u2026\"   etcd         6 hours ago   Up 6 hours (healthy)   2379-2380/tcp\nmilvus-minio        minio/minio:RELEASE.2023-03-20T20-16-18Z   \"/usr/bin/docker-ent\u2026\"   minio        6 hours ago   Up 6 hours (healthy)   0.0.0.0:9000-9001->9000-9001/tcp, :::9000-9001->9000-9001/tcp\nmilvus-standalone   milvusdb/milvus:v2.3.3                     \"/tini -- milvus run\u2026\"   standalone   6 hours ago   Up 6 hours (healthy)   0.0.0.0:19530->19530/tcp, :::19530->19530/tcp\n\n\u9519\u8bef\u65e5\u5fd7\u5982\u4e0b\uff1a\n[2024-03-21 20:43:06,020: ERROR/MainProcess] RPC error: [insert_rows], <DataNotMatchException: (code=1, message=Attempt to insert an unexpected field to collection without enabling dynamic field)>, <Time:{'RPC start': '2024-03-21 20:43:06.017347', 'RPC error': '2024-03-21 20:43:06.020646'}>\n[2024-03-21 20:43:06,021: ERROR/MainProcess] Failed to insert batch starting at entity: 0/11\n[2024-03-21 20:43:06,021: ERROR/MainProcess] Failed to insert batch starting at entity: 0/11\n[2024-03-21 20:43:06,021: ERROR/MainProcess] consume document failed\nTraceback (most recent call last):\n  File \"/app/api/core/indexing_runner.py\", line 70, in run\n    self._load(\n  File \"/app/api/core/indexing_runner.py\", line 667, in _load\n    index_processor.load(dataset, chunk_documents)\n  File \"/app/api/core/rag/index_processor/processor/paragraph_index_processor.py\", line 59, in load\n    vector.create(documents)\n  File \"/app/api/core/rag/datasource/vdb/vector_factory.py\", line 121, in create\n    self._vector_processor.create(\n  File \"/app/api/core/rag/datasource/vdb/milvus/milvus_vector.py\", line 75, in create\n    self.add_texts(texts, embeddings)\n  File \"/app/api/core/rag/datasource/vdb/milvus/milvus_vector.py\", line 101, in add_texts\n    raise e\n  File \"/app/api/core/rag/datasource/vdb/milvus/milvus_vector.py\", line 95, in add_texts\n    ids = self._client.insert(collection_name=self._collection_name, data=batch_insert_list)\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 206, in insert\n    raise ex from ex\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 198, in insert\n    res = conn.insert_rows(collection_name, insert_batch, timeout=timeout)\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 127, in handler\n    raise e from e\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 123, in handler\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 162, in handler\n    return func(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 102, in handler\n    raise e from e\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 68, in handler\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 501, in insert_rows\n    request = self._prepare_row_insert_request(\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 482, in _prepare_row_insert_request\n    return Prepare.row_insert_param(\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/client/prepare.py\", line 422, in row_insert_param\n    return cls._parse_row_request(request, fields_info, enable_dynamic, entities)\n  File \"/usr/local/lib/python3.10/site-packages/pymilvus/client/prepare.py\", line 370, in _parse_row_request\n    raise DataNotMatchException(message=ExceptionsMessage.InsertUnexpectedField)\npymilvus.exceptions.DataNotMatchException: <DataNotMatchException: (code=1, message=Attempt to insert an unexpected field to collection without enabling dynamic field)>\n[2024-03-21 20:43:06,028: INFO/MainProcess] Processed dataset: bd66a1d2-d871-42c4-8fe7-4275be32a591 latency: 6.201149852946401\n[2024-03-21 20:43:06,064: INFO/MainProcess] Task tasks.document_indexing_task.document_indexing_task[0df93ed7-9cae-4670-842d-8032b3d5852b] succeeded in 6.23699377477169s: None\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-03-21", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "andylzming"}
{"issue_number": 1987, "issue_title": "[Bug]: Insert method of MilvusClient doesnt support partitions", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nInsert method of MilvusClient doesnt have partition_name parameter but docs have. Lib code doesnt use kwargs and not use this parameter (2.3.6 version):\n\n\ndocs:\n\nNow this method insert all data only to collection\nExpected Behavior\ninsert method use parameter partition_name\nSteps/Code To Reproduce behavior\nfrom pymilvus import (\n    connections,\n    utility,\n    FieldSchema,\n    CollectionSchema,\n    DataType,\n    Collection,\n    Connections,\n    db,\n    MilvusClient, Partition\n)\n\n\ndef is_collection_exists(collection: str, database: str) -> bool:\n    return utility.has_collection(collection_name=collection, using=database)\n\n\ndef get_collection(collection: str, database: str):\n    if not is_collection_exists(collection, database):\n        raise Exception(f'Collection \"{collection}\" not exists')\n\n    return Collection(name=collection, using=database)\n\n\ndef drop_collection(name: str = 'test_collection'):\n    utility.drop_collection(name)\n\n\ndef is_database_exists(database: str):\n    dbs = db.list_database()\n    return database in dbs\n\n\ndef drop_database(name: str):\n    clear_database(name)\n    db.drop_database(name)\n\n\ndef use_database(database: str):\n    db.using_database(database)\n\n\ndef create_database(database: str):\n    db.create_database(database)\n\n\ndef connect_to_milvus(database: str = 'default'):\n    connections.connect(database, host='localhost', port='19530', db_name=database)\n    return connections\n\n\ndef disconnect_from_milvus(database: str):\n    connections.disconnect(database)\n\n\ndef get_milvus_client(database: str):\n    client = MilvusClient(uri='http://localhost:19530', db_name=database, token='root:Milvus')\n    return client\n\n\ndef create_test_collection(collection_name: str, database: str):\n    fields = [\n        FieldSchema(name='id', dtype=DataType.INT64, is_primary=True, auto_id=True),\n        FieldSchema(name='some_field', dtype=DataType.VARCHAR, max_length=1000),\n        FieldSchema(name='some_field_2', dtype=DataType.INT64),\n        FieldSchema(name='fake_vector_field', dtype=DataType.FLOAT_VECTOR, dim=1)\n    ]\n    schema = CollectionSchema(fields)\n    collection = Collection(name=collection_name, schema=schema, using=database, consistency_level='Strong')\n\n    collection.create_index(\n        'fake_vector_field',\n        dict(\n            index_type=\"IVF_FLAT\",\n            metric_type=\"COSINE\",\n            params={\"nlist\": 4096},\n        ),\n        index_name='fake_vector_field_idx'\n    )\n\n    collection.create_index(\n        'some_field_2',\n        dict(index_type=\"STL_SORT\"),\n        index_name='some_field_2_idx'\n    )\n\n    collection.create_partition('Dairy_partition')\n    collection.create_partition('SomeAA_partition')\n    collection.create_partition('tHIrd_partition')\n\n\ndef fill_test_collection_with_mock_data(collection_name, database):\n    data = []\n    client = get_milvus_client(database)\n\n    for i in range(100000):\n        row = dict(\n            some_field=fake.name(),\n            some_field_2=randint(1, 14535345352),\n            fake_vector_field=[0]\n        )\n        data.append(row)\n\n    collection = get_collection(collection_name, database)\n    res = client.insert(data, partition_name='Dairy_partition')\n    res = client.insert(data[:5000], partition_name='SomeAA_partition')\n    res = client.insert(data[:234], partition_name='tHIrd_partition')\n\n\ndef main():\n    connect_to_milvus()\n\n    if is_database_exists('test_database'):\n        drop_database('test_database')\n\n    create_database('test_database')\n\n    connect_to_milvus('test_database')\n\n    use_database('test_database')\n\n    try:\n        # create_collection_with_vectors('test_collection', 'test_database')\n        # import_vectors_to_milvus('test_collection', 'test_database')\n\n        create_test_collection('test_data_collection', 'test_database')\n        fill_test_collection_with_mock_data('test_data_collection', 'test_database')\n        get_just_data('test_data_collection', 'test_database')\n    except Exception as e:\n        logger.error(str(e))\n    finally:\n        disconnect_from_milvus('test_database')\n        disconnect_from_milvus('default')\n\n\nif __name__ == '__main__':\n    main()\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): MacBook Pro 2020 (M1), 16, 256, Sonoma 14.2.1\n- Method of installation (Docker, or from source): from Docker\n- Milvus version (v0.3.1, or v0.4.0): last with script standalone_embed.sh from Milvus site\n- Milvus configuration (Settings you made in `server_config.yaml`): default with script standalone_embed.sh from Milvus site\nAnything else?\nNo response", "created_at": "2024-03-20", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "nightblure"}
{"issue_number": 1982, "issue_title": "[Bug]: pymilvus2.3.7\u7248\u672c\u6ca1\u6709AnnSearchRequest, RRFRanker, WeightedRanker\u8fd9\u4e9b\u7c7b", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\u73af\u5883\uff1apy310\n\u5b89\u88c5\u6765\u6e90\uff1a\u6e05\u534e\u955c\u50cf\n\u7cfb\u7edf\uff1awin10\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-03-19", "closed_at": "2024-03-21", "labels": ["kind/question"], "State": "closed", "Author": "seetimee"}
{"issue_number": 1979, "issue_title": "[Bug]: Tidy interceptors", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-03-18", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "XuanYang-cn"}
{"issue_number": 1974, "issue_title": "[Bug]: Confused recommended milvus version", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe milvus version recommended in the readme and doc are inconsistent\nREADME\uff1a\n\nDOC\uff1a\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-03-18", "closed_at": "2024-03-18", "labels": ["kind/bug"], "State": "closed", "Author": "xige-16"}
{"issue_number": 1970, "issue_title": "[FEATURE]: Support clustering key in create collection", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nNo response\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2024-03-14", "closed_at": "2024-03-14", "labels": ["kind/feature"], "State": "closed", "Author": "wayblink"}
{"issue_number": 1962, "issue_title": "[Bug]: `server_pem_path` is not working without `server_name` when using `connect()`", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nserver_pem_path is not working without server_name when using connect()\nboth these 2 params should be working alone.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-03-12", "closed_at": "2024-03-20", "labels": ["kind/bug"], "State": "closed", "Author": "haorenfsa"}
{"issue_number": 1960, "issue_title": "[Bug]: iterator cannot handle primary keys with \"\\n\" or \"\\t\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\niterator cannot handle primary keys with \"\\n\" or \"\\t\"\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nRun this script to reproduce:\n\n\nimport random\n\nfrom pymilvus import (\n    connections,\n    FieldSchema, CollectionSchema, DataType,\n    Collection,\n    utility,\n)\n\nconnections.connect(host='localhost', port='19530', user=\"root\", password=\"Milvus\")\nprint(utility.get_server_version())\n\n\ncollection_name = \"mycoll\"\ndim = 128\nmetric_type = \"L2\"\n\n\nfields=[\n    FieldSchema(name=\"doc_text\", dtype=DataType.VARCHAR, max_length=1024, is_primary=True, auto_id=False),\n    FieldSchema(name=\"doc_vector\", dtype = DataType.FLOAT_VECTOR, dim=dim),\n    FieldSchema(name=\"doc_metadata\", dtype = DataType.VARCHAR, max_length=1024),\n]\n\nschema = CollectionSchema(fields=fields, enable_dynamic_field=False)\n\nif utility.has_collection(collection_name):\n    utility.drop_collection(collection_name)\n\ncollection = Collection(name=collection_name, schema=schema)\nprint(f\"Collection '{collection_name}' created\")\nprint(collection.describe())\n\n\nfor i in range(50):\n    collection.insert({\"doc_text\": f\"hello\\n\\nworld\\n\\n\\nhello there\", \"doc_vector\": [random.random() for _ in range(dim)], \"doc_metadata\": f\"metadata_{i}\"})\n\ncollection.flush()\nprint(\"inserted\")\n\nindex_params = {\n    'metric_type': metric_type,\n    'index_type': \"IVF_FLAT\",\n    'params': {\"nlist\": 256},\n}\ncollection.create_index(field_name=\"doc_vector\", index_params=index_params)\nprint(\"index created\")\n\n\ncollection = Collection(collection_name)\ncollection.load()\nprint(\"collection loaded\")\n\n\nres = collection.query(expr=\"\", consistency_level=\"Strong\", output_fields=[\"count(*)\"])\nprint(\"count(*):\", res[0][\"count(*)\"])\nprint(\"collection.num_entities = \", collection.num_entities)\n\nexpr = None\noutput_fields=[\"doc_text\", \"doc_metadata\", \"doc_vector\"]\n\nbatch_size = 10\nlimit = 3000\n\nquery_iterator = collection.query_iterator(batch_size, limit, expr, output_fields)\n\ncount = 0\nwhile True:\n    # turn to the next page\n    res = query_iterator.next()\n    if len(res) == 0:\n        print(\"query iteration finished, close\")\n        print(f\"total iterator number: {count}\")\n        # close the iterator\n        query_iterator.close()\n        break\n    for i in range(len(res)):\n        print(res[i])\n        count = count + 1\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): 2.3.x\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\nAnything else?\nNo response", "created_at": "2024-03-12", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "yhmo"}
{"issue_number": 1953, "issue_title": "[QUESTION]: conection ERROR", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nwhen I run this code \" docker-compose up -d\" docker docker ps show\n\nbut I can't visit \"http://localhost:19530/\"\nwhen I run th \"hello_milvuis.py\" from \"milvus-io/pymilvus/v2.2.8/examples\"\nreport error show\n\nhow to solve this problem\nAnything else?\nNo response", "created_at": "2024-03-07", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "sssssshf"}
{"issue_number": 1952, "issue_title": "[Bug]: [milvus_client] Failed to enable dynamic field for an existing non-dynamic field when not specifying it in the scheme before", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nFailed to enable dynamic field for an existing non-dynamic field when not specifying it in the scheme before\n{'collection_name': 'customized_setup_binbin_new_1', 'auto_id': False, 'num_shards': 1, 'description': '', 'fields': [{'field_id': 100, 'name': 'my_id', 'description': '', 'type': 5, 'params': {}, 'element_type': 0, 'is_primary': True}, {'field_id': 101, 'name': 'my_vector', 'description': '', 'type': 101, 'params': {'dim': 5}, 'element_type': 0}], 'aliases': [], 'collection_id': 448169809257578564, 'consistency_level': 2, 'properties': {}, 'num_partitions': 1, 'enable_dynamic_field': False}\n\nExpected Behavior\n'enable_dynamic_field': True\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient, DataType\nimport numpy as np\n\nclient = MilvusClient()\n\n\nschema = MilvusClient.create_schema()\nschema.add_field(field_name=\"my_id\", datatype=DataType.INT64, is_primary=True)\nschema.add_field(field_name=\"my_vector\", datatype=DataType.FLOAT_VECTOR, dim=5)\n\ndim = 5\ncollection_name = \"customized_setup_binbin_new_1\"\nif collection_name in client.list_collections():\n    client.drop_collection(collection_name)\n    print(\"dropped collection\")\nclient.create_collection(collection_name=collection_name, schema=schema)\nclient.create_collection(collection_name=collection_name, schema=schema, enable_dynamic_field=True)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240305-1936aa4c\n- pymilvus: 2.4.0rc47\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-03-05", "closed_at": "2024-03-09", "labels": ["kind/bug"], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1951, "issue_title": "[Bug]: [milvus_client] \"partition_key_field\" does not take effect for self defined collection creation", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\"partition_key_field\" does not take effect for self defined collection creation\npymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=num_partitions should only be specified with partition key field enabled)>\n\nAnd for fast create collection, it takes effect:\nclient.create_collection(collection_name=collection_name, dimension=8, partition_key_field=\"id\")\npymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=the partition key field must not be primary field)>\n\nExpected Behavior\ncreate collection successfully\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient, DataType\nimport numpy as np\n\nclient = MilvusClient()\n\n\nschema = MilvusClient.create_schema()\nschema.add_field(field_name=\"my_id\", datatype=DataType.INT64, is_primary=True)\nschema.add_field(field_name=\"my_id_1\", datatype=DataType.INT64, is_primary=False, is_partition_key=False)\nschema.add_field(field_name=\"my_vector\", datatype=DataType.FLOAT_VECTOR, dim=5)\n\ndim = 5\ncollection_name = \"customized_setup_binbin_new_1\"\nif collection_name in client.list_collections():\n    client.drop_collection(collection_name)\n    print(\"dropped collection\")\nclient.create_collection(collection_name=collection_name, schema=schema, partition_key_field=\"my_id_1\", num_partitions=3)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240305-1936aa4c\n- pymilvus: 2.4.0rc47\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-03-05", "closed_at": "2024-03-09", "labels": ["kind/bug"], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1950, "issue_title": "[Bug]: MilvusException: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530. Timeout)>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nfrom pymilvus import connections\nconnections.connect(\"default\", host=\"localhost\", port=\"19530\")\nWhen I pass these two lines of code, I get the following error:MilvusException: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530. Timeout)>\u3002\nExpected Behavior\nI hope the connection is successful\nSteps/Code To Reproduce behavior\n---------------------------------------------------------------------------\nFutureTimeoutError                        Traceback (most recent call last)\nFile ~/anaconda3/envs/milvus/lib/python3.12/site-packages/pymilvus/client/grpc_handler.py:143, in GrpcHandler._wait_for_channel_ready(self, timeout)\n    142 try:\n--> 143     grpc.channel_ready_future(self._channel).result(timeout=timeout)\n    144     self._setup_identifier_interceptor(self._user, timeout=timeout)\n\nFile ~/anaconda3/envs/milvus/lib/python3.12/site-packages/grpc/_utilities.py:162, in _ChannelReadyFuture.result(self, timeout)\n    161 def result(self, timeout: Optional[float] = None) -> None:\n--> 162     self._block(timeout)\n\nFile ~/anaconda3/envs/milvus/lib/python3.12/site-packages/grpc/_utilities.py:106, in _ChannelReadyFuture._block(self, timeout)\n    105 if remaining < 0:\n--> 106     raise grpc.FutureTimeoutError()\n    107 else:\n\nFutureTimeoutError: \n\nThe above exception was the direct cause of the following exception:\n\nMilvusException                           Traceback (most recent call last)\nCell In[3], line 2\n      1 from pymilvus import connections\n----> 2 connections.connect(\"default\", host=\"localhost\", port=\"19530\")\n\nFile ~/anaconda3/envs/milvus/lib/python3.12/site-packages/pymilvus/orm/connections.py:414, in Connections.connect(self, alias, user, password, db_name, token, **kwargs)\n    411         if parsed_uri.scheme == \"https\":\n    412             kwargs[\"secure\"] = True\n--> 414     connect_milvus(**kwargs, user=user, password=password, token=token, db_name=db_name)\n    415     return\n    417 # 2nd Priority, connection configs from env\n\nFile ~/anaconda3/envs/milvus/lib/python3.12/site-packages/pymilvus/orm/connections.py:365, in Connections.connect.<locals>.connect_milvus(**kwargs)\n    362 t = kwargs.get(\"timeout\")\n    363 timeout = t if isinstance(t, (int, float)) else Config.MILVUS_CONN_TIMEOUT\n--> 365 gh._wait_for_channel_ready(timeout=timeout)\n    366 if kwargs.get(\"keep_alive\", False):\n    367     gh.register_state_change_callback(\n    368         ReconnectHandler(self, alias, kwargs_copy).reconnect_on_idle\n    369     )\n\nFile ~/anaconda3/envs/milvus/lib/python3.12/site-packages/pymilvus/client/grpc_handler.py:146, in GrpcHandler._wait_for_channel_ready(self, timeout)\n    144     self._setup_identifier_interceptor(self._user, timeout=timeout)\n    145 except grpc.FutureTimeoutError as e:\n--> 146     raise MilvusException(\n    147         code=Status.CONNECT_FAILED,\n    148         message=f\"Fail connecting to server on {self._address}. Timeout\",\n    149     ) from e\n    150 except Exception as e:\n    151     raise e from e\n\nMilvusException: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530. Timeout)>\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\npython3.12.2\nMilvus2.3.10\npymilvus2.3.6\nAnything else?\n", "created_at": "2024-03-05", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "LLLiHaotian"}
{"issue_number": 1939, "issue_title": "[Bug]: operations missing param check", "issue_body": "for example grpc_handler.py::search calls check_pass_param\u200e but is not passing param to check_pass_param\u200e. Some other operations such as create_index, insert and upsert doesn't call check_pass_param\u200e at all.\nEven if we have server side check, we should still check those prior sending the RPC. We have the checkers already anyway, we should use them.", "created_at": "2024-02-29", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "zhengbuqian"}
{"issue_number": 1938, "issue_title": "[Bug]: Too much retry for unimplemented error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nToo much retry for unimplemented error\n[2024-02-28 19:29:02 - WARNING - pymilvus.decorators]: [describe_alias] retry:4, cost: 0.27s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:02 - WARNING - pymilvus.decorators]: [describe_alias] retry:5, cost: 0.81s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:03 - WARNING - pymilvus.decorators]: [describe_alias] retry:6, cost: 2.43s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:06 - WARNING - pymilvus.decorators]: [describe_alias] retry:7, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:09 - WARNING - pymilvus.decorators]: [describe_alias] retry:8, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:12 - WARNING - pymilvus.decorators]: [describe_alias] retry:9, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:15 - WARNING - pymilvus.decorators]: [describe_alias] retry:10, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:18 - WARNING - pymilvus.decorators]: [describe_alias] retry:11, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:21 - WARNING - pymilvus.decorators]: [describe_alias] retry:12, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:24 - WARNING - pymilvus.decorators]: [describe_alias] retry:13, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:27 - WARNING - pymilvus.decorators]: [describe_alias] retry:14, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:30 - WARNING - pymilvus.decorators]: [describe_alias] retry:15, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:33 - WARNING - pymilvus.decorators]: [describe_alias] retry:16, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:36 - WARNING - pymilvus.decorators]: [describe_alias] retry:17, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:40 - WARNING - pymilvus.decorators]: [describe_alias] retry:18, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:43 - WARNING - pymilvus.decorators]: [describe_alias] retry:19, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:46 - WARNING - pymilvus.decorators]: [describe_alias] retry:20, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:49 - WARNING - pymilvus.decorators]: [describe_alias] retry:21, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:52 - WARNING - pymilvus.decorators]: [describe_alias] retry:22, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:55 - WARNING - pymilvus.decorators]: [describe_alias] retry:23, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:29:58 - WARNING - pymilvus.decorators]: [describe_alias] retry:24, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:01 - WARNING - pymilvus.decorators]: [describe_alias] retry:25, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:04 - WARNING - pymilvus.decorators]: [describe_alias] retry:26, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:07 - WARNING - pymilvus.decorators]: [describe_alias] retry:27, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:10 - WARNING - pymilvus.decorators]: [describe_alias] retry:28, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:13 - WARNING - pymilvus.decorators]: [describe_alias] retry:29, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:16 - WARNING - pymilvus.decorators]: [describe_alias] retry:30, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:19 - WARNING - pymilvus.decorators]: [describe_alias] retry:31, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:22 - WARNING - pymilvus.decorators]: [describe_alias] retry:32, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:26 - WARNING - pymilvus.decorators]: [describe_alias] retry:33, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:29 - WARNING - pymilvus.decorators]: [describe_alias] retry:34, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:32 - WARNING - pymilvus.decorators]: [describe_alias] retry:35, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:35 - WARNING - pymilvus.decorators]: [describe_alias] retry:36, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:38 - WARNING - pymilvus.decorators]: [describe_alias] retry:37, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:41 - WARNING - pymilvus.decorators]: [describe_alias] retry:38, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:44 - WARNING - pymilvus.decorators]: [describe_alias] retry:39, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:47 - WARNING - pymilvus.decorators]: [describe_alias] retry:40, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:50 - WARNING - pymilvus.decorators]: [describe_alias] retry:41, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:53 - WARNING - pymilvus.decorators]: [describe_alias] retry:42, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:56 - WARNING - pymilvus.decorators]: [describe_alias] retry:43, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:30:59 - WARNING - pymilvus.decorators]: [describe_alias] retry:44, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, unknown method DescribeAlias for service milvus.proto.milvus.MilvusService> (decorators.py:94)\n[2024-02-28 19:31:02 - ERROR - pymilvus.decorators]: RPC error: [describe_alias], <MilvusException: (code=<bound method _MultiThreadedRendezvous.code of <_MultiThreadedRendezvous of RPC that terminated with:\n\tstatus = StatusCode.UNIMPLEMENTED\n\tdetails = \"unknown method DescribeAlias for service milvus.proto.milvus.MilvusService\"\n\tdebug_error_string = \"UNKNOWN:Error received from peer  {created_time:\"2024-02-28T19:31:02.933745+08:00\", grpc_status:12, grpc_message:\"unknown method DescribeAlias for service milvus.proto.milvus.MilvusService\"}\"\n\nExpected Behavior\nCould we not retry for unimplemented error\nSteps/Code To Reproduce behavior\ncall \"describe_alias\" interface to not supported milvus version (like 2.2.16)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): v2.2.16\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-29", "closed_at": "2024-03-07", "labels": ["kind/bug"], "State": "closed", "Author": "binbinlv"}
{"issue_number": 1937, "issue_title": "[Bug]: [milvus_client] Create a collection will take about 3 seconds on average", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nCreate a collection will take about 3 seconds on average.\nfor example, client.create_collection(collection_name, dim=128).\nExpected Behavior\nshorten the time\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-28", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "NicoYuan1986"}
{"issue_number": 1935, "issue_title": "[Bug]: Enhance sdk's side params for groupby", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nCurrently, when doing groupby with range_search params or doing iteration with groupby will not produce errors, which is unexpected from user's prospective\nExpected Behavior\nMilvus capture the wrong combination of usage and report error\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-26", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 1933, "issue_title": "[Bug]: [milvus_client] The result is empty for describe_role", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe result is empty for describe_role:\nclient.create_role(role_name=\"read_only\")\n>>> client.describe_role(role_name=\"read_only\")\n[]\n\nExpected Behavior\nShow the role info\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient\n\n# 1. Create a milvus client\nclient = MilvusClient()\n\n# 2. Create a role\nclient.create_role(role_name=\"read_only\")\n\n# 3. Describe the role\nclient.describe_role(role_name=\"read_only\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master-20240222-16b4c9a7\n- pymilvus version: 2.4.0rc35\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-02-24", "closed_at": "2024-03-05", "labels": [], "State": "closed", "Author": "binbinlv"}
{"issue_number": 2050, "issue_title": "[Bug]: Offset parameter did not take effect in hybrid search", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nsee milvus-io/milvus#32376\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-24", "closed_at": "2024-06-11", "labels": ["kind/bug"], "State": "closed", "Author": "czs007"}
{"issue_number": 2046, "issue_title": "[Bug]: FieldSchema.construct_from_dict() not support params  max_length and dim", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen dict has max_length or dim\n{'name': 'error_message', 'type': <DataType.VARCHAR: 21>, 'max_length': 1024}\n a_dict={'name': 'error_msg_vector', 'type': <DataType.FLOAT_VECTOR: 101>, 'dim': 768}\nWhen I new FieldSchema.construct_from_dict(a_dict),  got\nTypeError: pymilvus.orm.schema.FieldSchema() got multiple values for keyword argument 'max_length'\nand\npymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=dimension is not defined in field type params, check type param dim for vector field)>\nExpected Behavior\nWhen I new FieldSchema.construct_from_dict(a_dict)  no error.\nSteps/Code To Reproduce behavior\nfields_dict = [\n    {'name': 'error_message', 'type': <DataType.VARCHAR: 21>, 'max_length': 1024},\n    {'name': 'error_msg_vector', 'type': <DataType.FLOAT_VECTOR: 101>, 'dim': 768}\n]\nfields = []\nfor f_dict in fields_dict:\n    fields.append(FieldSchema.construct_from_dict(f_dict))\nEnvironment details\npymilvus==2.4.0\nAnything else?\nadd  below  code  at pymilvus/orm/schema.py  can fix it.\nwithin  def construct_from_dict(cls, raw: Dict):\n371         if raw.get(\"max_length\") is not None:\n372             kwargs[\"max_length\"] = raw.get(\"max_length\")\n373         if raw.get(\"dim\") is not None:\n374             kwargs[\"dim\"] = raw.get(\"dim\")\n", "created_at": "2024-04-18", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "james-gone"}
{"issue_number": 2045, "issue_title": "collection.load() very slow ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nPlease tell me why my collection.load() is very slow, and finally waits for 600 seconds and reports an error. I have about 100,000 data, the dimension of the vector is 1024, and I use the milvus2.4-gpu version.\nAnything else?\nNo response", "created_at": "2024-04-17", "closed_at": "2024-05-30", "labels": ["kind/question"], "State": "closed", "Author": "zhongJY1998"}
{"issue_number": 2044, "issue_title": "[QUESTION]: Is it possible to use `query_iterator` with `MilvusClient`?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nReading the documentation, it seems that the only way to paginate, using the MilvusClient interface is by setting offset and limit in the query method.\nReading the docs, to avoid this complexity we can use query_iterator but this seems to be supported only if using the ORM Mode.\nAnything else?\nIn addition to this, if i follow the example here, it does not work:\nfrom pymilvus import MilvusClient\n\n# 1. Set up a Milvus client\nclient = MilvusClient(\n    uri=\"http://localhost:19530\"\n)\n\n# 2. Create a collection\nclient.create_collection(\n    collection_name=\"quick_setup\",\n    dimension=5,\n)\n\n# 3. Insert randomly generated vectors \ncolors = [\"green\", \"blue\", \"yellow\", \"red\", \"black\", \"white\", \"purple\", \"pink\", \"orange\", \"brown\", \"grey\"]\ndata = [ {\n        \"id\": i, \n        \"vector\": [ random.uniform(-1, 1) for _ in range(5) ], \n        \"color\": random.choice(colors), \n        \"tag\": random.randint(1000, 9999) \n    } for i in range(10000) ]\n\nfor i in data:\n    i[\"color_tag\"] = \"{}_{}\".format(i[\"color\"], i[\"tag\"])\n\n# 4. Insert entities to the collection\nres = client.insert(\n    collection_name=\"quick_setup\",\n    data=data\n)\n\nfrom pymilvus import Collection\n\n# 1. Get the prepared collection\ncollection = Collection(\"quick_setup\") \n# this raises \"ConnectionNotExistException: <ConnectionNotExistException: (code=1, message=should create connect first.)>\"", "created_at": "2024-04-16", "closed_at": "2024-04-19", "labels": ["kind/question"], "State": "closed", "Author": "emanueledomingo"}
{"issue_number": 2043, "issue_title": "[Enhancement]: Support major compaction in compact", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nSupport major compaction in compact\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-04-16", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "wayblink"}
{"issue_number": 2042, "issue_title": "[Bug]: The error message of unmatched collection dim during insert is not user-friendly", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nBefore, collection dim is 128, insert data dim is 127, error message is like:\nCollection field dim is 128, but entities field dim is 127.\nBut error message is\nthe length(254000) of float data should divide the dim(128)\nIt is not good, and i can not understand.\nExpected Behavior\nimprove the error message\nSteps/Code To Reproduce behavior\ntest_partition.py::TestPartitionOperations::test_partition_upsert_mismatched_data\ntest_insert.py::TestInsertParams::test_insert_dim_not_match\ntest_partition.py::TestPartitionOperations::test_partition_insert_mismatched_dimensions\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-16", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "NicoYuan1986"}
{"issue_number": 2041, "issue_title": "[Bug]: The error check of max_capacity of array was removed", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen the value of \"max_capacity\" is one of [[], 'a', (), -1, 4097], an error will be reported like the maximum capacity specified for a Array should be in (0, 4096].\nBut now the error message has been removed.\n[2024-04-16 14:49:46 - DEBUG - ci_test]: (api_request)  : [FieldSchema] args: ['int_array', <DataType.ARRAY: 22>, ''], kwargs: {'element_type': <DataType.INT64: 5>, 'max_capacity': (), 'is_primary': False} (api_request.py:62)\n[2024-04-16 14:49:46 - ERROR - ci_test]: Traceback (most recent call last):\n  File \"/Users/zilliz/nico/milvus/tests/python_client/utils/api_request.py\", line 32, in inner_wrapper\n    res = func(*args, **_kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/nico/milvus/tests/python_client/utils/api_request.py\", line 63, in api_request\n    return func(*arg, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/orm/schema.py\", line 328, in __init__\n    self._parse_type_params()\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/orm/schema.py\", line 358, in _parse_type_params\n    self._type_params[k] = int(self._kwargs[k])\n                           ^^^^^^^^^^^^^^^^^^^^\nTypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'\n (api_request.py:45)\n[2024-04-16 14:49:46 - ERROR - ci_test]: (api_response) : int() argument must be a string, a bytes-like object or a real number, not 'tuple' (api_request.py:46)\n\n\nThe error message should be improved.\nExpected Behavior\nThe error message should be improved.\nSteps/Code To Reproduce behavior\ntest_collection.py::TestCollectionARRAY::test_collection_array_field_invalid_capacity\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-16", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "NicoYuan1986"}
{"issue_number": 2040, "issue_title": "[QUESTION]: ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHere is the code for creating a collection:\nCheck if the 'huzf_milvus' collection exists in Milvus\nhas = utility.has_collection(\"huzf_milvus\")\nprint(f\"Does collection 'huzf_milvus' exist in Milvus: {has}\")\nfields = [\nFieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=False),\nFieldSchema(name=\"text\", dtype=DataType.VARCHAR, max_length=1024),\nFieldSchema(name=\"text_vector\", dtype=DataType.FLOAT_VECTOR, dim=1024)\n]\nschema = CollectionSchema(fields, \"huzf_milvus is the simplest demo to introduce the APIs\")\nprint(fmt.format(\"Create collection 'huzf_milvus'\"))\nhuzf_milvus = Collection(\"huzf_milvus\", schema, consistency_level=\"Strong\")\nHere is the code for inserting data:\nprint(fmt.format(\"Start inserting entities\"))\nentities = [\n[row['id'], row['text'], list(map(float, row['text_vector'].strip('[]').split(',')))]\nfor index, row in data.iterrows()\n]\ninsert_result = huzf_milvus.insert(entities)\nhuzf_milvus.flush()\nprint(f\"Number of entities in Milvus: {huzf_milvus.num_entities}\")  # check the num_entities\nAn error occurred when inserting data:\nDataNotMatchException                     Traceback (most recent call last)\nCell In[5], line 7\n1 print(fmt.format(\"Start inserting entities\"))\n3 entities = [\n4     [row['id'], row['text'], list(map(float, row['text_vector'].strip('[]').split(',')))]\n5     for index, row in data.iterrows()\n6 ]\n----> 7 insert_result = huzf_milvus.insert(entities)\n9 huzf_milvus.flush()\n10 print(f\"Number of entities in Milvus: {huzf_milvus.num_entities}\")  # check the num_entities\nFile ~/anaconda3/envs/milvus/lib/python3.12/site-packages/pymilvus/orm/collection.py:495, in Collection.insert(self, data, partition_name, timeout, **kwargs)\n493 conn = self._get_connection()\n494 if not row_based:\n--> 495     check_insert_schema(self._schema, data)\n496     entities = Prepare.prepare_insert_data(data, self._schema)\n497     res = conn.batch_insert(\n498         self._name,\n499         entities,\n(...)\n503         **kwargs,\n504     )\nFile ~/anaconda3/envs/milvus/lib/python3.12/site-packages/pymilvus/orm/schema.py:457, in check_insert_schema(schema, data)\n...\n--> 436     raise DataNotMatchException(message=message)\n438 if is_dataframe:\n439     for x, y in zip(list(data.columns), tmp_fields):\nDataNotMatchException: <DataNotMatchException: (code=1, message=The data don't match with schema fields, expect 3 list, got 1000)>\nOutput is truncated. View as a scrollable element or open in a text editor. Adjust cell output settings...\nAnything else?\nI checked the format of the dataset and it seems fine. I\u2019m not sure why there is an error. Please help me.", "created_at": "2024-04-12", "closed_at": "2024-04-29", "labels": ["kind/question"], "State": "closed", "Author": "zhmingzhaung"}
{"issue_number": 2034, "issue_title": "[Bug]: Wrong data type when import array by bulkwriter", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe float32 array intended for import via the bulk writer was imported as double instead.\nFor the float32 type, we should specify \"datatype=float32\" just like float vectors; otherwise, it will default to double.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-11", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "bigsheeper"}
{"issue_number": 2033, "issue_title": "[Bug]: `ModuleNotFoundError: No module named 'scipy'`", "issue_body": "Describe the bug\nImporting almost anything from pymilvus, for example:\nfrom pymilvus import Collection\n\nResults in an exception being raised:\n  File \"/Users/jacob.summers/repos/ads-korok-pipeline/korok_inference/datamodels/request_context.py\", line 5, in <module>\n    from pymilvus import Collection\n  File \"/Users/jacob.summers/Library/Caches/pypoetry/virtualenvs/korok-inference-jyWwJgRH-py3.10/lib/python3.10/site-packages/pymilvus/__init__.py\", line 30, in <module>\n    from .client.abstract import AnnSearchRequest, Hit, Hits, RRFRanker, SearchResult, WeightedRanker\n  File \"/Users/jacob.summers/Library/Caches/pypoetry/virtualenvs/korok-inference-jyWwJgRH-py3.10/lib/python3.10/site-packages/pymilvus/client/abstract.py\", line 10, in <module>\n    from . import entity_helper\n  File \"/Users/jacob.summers/Library/Caches/pypoetry/virtualenvs/korok-inference-jyWwJgRH-py3.10/lib/python3.10/site-packages/pymilvus/client/entity_helper.py\", line 7, in <module>\n    from scipy import sparse\nModuleNotFoundError: No module named 'scipy'\n\nRoot cause\nIt looks like this issue was introduce somewhere between 2.3.7 and 2.4.0.\nIn version2.4.0 scipy is imported in pymilvus/client/entity_helper.py despite the fact that scipy is not listed as a dependency of pymilvus:\n$ poetry show pymilvus\n name         : pymilvus\n version      : 2.4.0\n description  : Python Sdk for Milvus\n\ndependencies\n - azure-storage-blob *\n - environs <=9.5.0\n - grpcio >=1.49.1,<=1.60.0\n - minio >=7.0.0\n - pandas >=1.2.4\n - protobuf >=3.20.0\n - pyarrow >=12.0.0\n - requests *\n - setuptools >=67\n - ujson >=2.0.0\n\nWorkaround\nInstall scipy via poetry add scipy or pip ....", "created_at": "2024-04-11", "closed_at": "2024-10-14", "labels": ["kind/bug"], "State": "closed", "Author": "JakeSummers"}
{"issue_number": 2027, "issue_title": "[QUESTION]: How can I query all the data in a given collection and print it out", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHow can I query all the data in a given collection and print it out\nAnything else?\nNo response", "created_at": "2024-04-10", "closed_at": "2024-04-10", "labels": ["kind/question"], "State": "closed", "Author": "2970333926"}
{"issue_number": 2024, "issue_title": "[Bug]: bfloat16 and float16 vector does not support panda Dataframe data type with not user friendly error message", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nbfloat16 and float16 vector does not support panda Dataframe data type with not user friendly error message\n>>> import pandas as pd\n>>> df = pd.DataFrame({\"int64\": [i for i in range(nb)], \"float16_vector\": vectors})\n>>> res = collection.insert(df)\nRPC error: [batch_insert], <ParamError: (code=1, message=Collection field dim is 128, but entities field dim is 64)>, <Time:{'RPC start': '2024-04-09 18:04:56.172554', 'RPC error': '2024-04-09 18:04:56.172686'}>\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/orm/collection.py\", line 500, in insert\n    return conn.batch_insert(\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 147, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 143, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 182, in handler\n    return func(self, *args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 122, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 87, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 575, in batch_insert\n    raise err from err\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 558, in batch_insert\n    request = self._prepare_batch_insert_request(\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 542, in _prepare_batch_insert_request\n    else Prepare.batch_insert_param(collection_name, entities, partition_name, fields_info)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/prepare.py\", line 527, in batch_insert_param\n    location = cls._pre_batch_check(entities, fields_info)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/prepare.py\", line 472, in _pre_batch_check\n    location, primary_key_loc, auto_id_loc = traverse_info(fields_info, entities)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/utils.py\", line 303, in traverse_info\n    raise ParamError(\npymilvus.exceptions.ParamError: <ParamError: (code=1, message=Collection field dim is 128, but entities field dim is 64)>\n\nExpected Behavior\nFloat32_vector support Dataframe, it is better to support it for bfloat16 and float16 vector data. At least, the error message should be more user friendly such as \"non-float32 vector not support dataframe...\"\nSteps/Code To Reproduce behavior\nfrom pymilvus import CollectionSchema, FieldSchema\nfrom pymilvus import Collection\nfrom pymilvus import connections\nfrom pymilvus import DataType\nfrom pymilvus import Partition\nfrom pymilvus import utility\n\nconnections.connect()\ndim = 128\nint64_field = FieldSchema(name=\"int64\", dtype=DataType.INT64, is_primary=True)\nbfloat16_vector = FieldSchema(name=\"float16_vector\", dtype=DataType.BFLOAT16_VECTOR, dim=dim)\nschema = CollectionSchema(fields=[int64_field, bfloat16_vector])\ncollection_name = \"vector\"\ncollection = Collection(collection_name, schema=schema)\ndef gen_bf16_vectors(num, dim):\n    \"\"\"\n    generate brain float16 vector data\n    raw_vectors : the vectors\n    bf16_vectors: the bytes used for insert\n    return: raw_vectors and bf16_vectors\n    \"\"\"\n    raw_vectors = []\n    bf16_vectors = []\n    for _ in range(num):\n        raw_vector = [random.random() for _ in range(dim)]\n        raw_vectors.append(raw_vector)\n        bf16_vector = tf.cast(raw_vector, dtype=tf.bfloat16).numpy()\n        bf16_vectors.append(bf16_vector)\n    return raw_vectors, bf16_vectors\n\nnum = 1000\nimport random\nimport tensorflow as tf\nvectors = gen_bf16_vectors(num, dim)[1]\nnb = num\nres = collection.insert([[i for i in range(nb)], vectors])\nimport pandas as pd\ndf = pd.DataFrame({\"int64\": [i for i in range(nb)], \"float16_vector\": vectors})\nres = collection.insert(df)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-09", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 2021, "issue_title": "[QUESTION]: Support of dense, sparse, and colbert hybrid search.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nIs the hybrid search of dense, sparse, and colbert vector embeddings supported? If it is supported, can you give a full example like in this?\nAnything else?\nIf it currently is not supported, can we create a workaround by using a custom scoring function like in this? And, is the scoring function diver based on each model being used?", "created_at": "2024-04-06", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "muazhari"}
{"issue_number": 2020, "issue_title": "[QUESTION]: How to reduce pymilvus package size?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI need to build my script so where I used pymilvus package and I want to install locally zip it then upload to lambda but the size of folders seems 400MB so lambda doesn\u2019t accept more than 250MB file size so how to reduce the package size and what are the supported sub packages as it installed lot of supportive packages?\nAnything else?\nNo response", "created_at": "2024-04-06", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "mahaveer08"}
{"issue_number": 2019, "issue_title": "[QUESTION]: How to copy collection from one milvus instance to another?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHi,\nI want to copy a collection with auto-id on from one instance to another, and keeps all fields unchanged.\nI tried the LocalBulkWriter to save the rows generated by collection.query_iterator, and an error was thrown:\n<MilvusException: (code=1, message=The primary key field 'id' is auto-id, no need to provide)>\nSo my question is, how to copy all rows of a collection on to another collection (both with audo-id on), to keep the primary field id unchanged.\nAnything else?\nNo response", "created_at": "2024-04-03", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "heibaidaolx123"}
{"issue_number": 2018, "issue_title": "[Bug]: Insert float16 vector to bfloat16 field could be successful ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nInsert float16 vector to bfloat16 field could be successful\nExpected Behavior\nReport error\nSteps/Code To Reproduce behavior\nfrom pymilvus import connections\nfrom pymilvus import DataType\nfrom pymilvus import Partition\nfrom pymilvus import utility\nimport time\nimport h5py\n\nimport json\nfrom pymilvus import CollectionSchema, FieldSchema, DataType, utility, connections, Collection\ncollection_name = \"test_f16\"\nconnections.connect()\n\ndim = 128\nint64_field = FieldSchema(name=\"int64\", dtype=DataType.INT64, is_primary=True)\nbfloat16_vector = FieldSchema(name=\"bfloat16_vector\", dtype=DataType.BFLOAT16_VECTOR, dim=dim)\n\n\nschema = CollectionSchema(fields=[int64_field, bfloat16_vector])\nif utility.has_collection(collection_name):\n    old_collection = Collection(collection_name)\n    old_collection.drop()\n    print(\"drop\")\n\ncollection = Collection(collection_name, schema=schema)\n\ndef gen_bf16_vectors(data):\n      bf16_vectors = []\n      for i in range(data.shape[0]):\n            raw_vector = data[i]\n            bf16_vector = tf.cast(raw_vector, dtype=tf.bfloat16).numpy()\n            bf16_vectors.append(bf16_vector)\n      return bf16_vectors\n\ndef gen_fp16_vectors(data):\n       fp16_vectors = []\n       for i in range(data.shape[0]):\n             raw_vector =  data[i]\n             fp16_vector = np.array(raw_vector, dtype=np.float16)\n             fp16_vectors.append(fp16_vector)\n       return fp16_vectors\n\nimport numpy as np\nimport tensorflow as tf\n\nfname = \"/home/sift-128-euclidean.hdf5\"\nf = h5py.File(fname, 'r')\ndata = f['train']\ntest = f['test']\nneighbors = f['neighbors']\nprint(data.shape)\nprint(neighbors.shape)\nprint(test.shape)\n\nprint(\"begin insert...\")\ncounter = 0\nblock_num = 100\nblock_size = int(data.shape[0]/block_num)\nstart = time.time()\n\nfor t in range(block_num):\n    print(\"inserting: \", counter, \" to \", counter + block_size )\n    #bytes_data = gen_bf16_vectors(data[counter: counter + block_size])\n    bytes_data = gen_fp16_vectors(data[counter: counter + block_size])\n    #bytes_data = data[counter: counter + block_size]\n    entities = [\n            [i for i in range(counter, counter + block_size)],\n            bytes_data\n            ]\n    insert_result =  collection.insert(entities)\n    print(insert_result)\n    counter = counter + block_size\nprint (\"end of insert, cost: \", time.time()-start)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-02", "closed_at": "2024-09-02", "labels": ["kind/bug"], "State": "closed", "Author": "binbinlv"}
{"issue_number": 2017, "issue_title": "[Bug]: When an offset value is passed into the queryIterator interface, the resulting data is lost.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nBuild a data ID/vector column, the relevant schema information is as follows:\n\nfields = [\n    FieldSchema(name=USER_ID, dtype=DataType.INT64, is_primary=True,\n                auto_id=False),\n    FieldSchema(name=AGE, dtype=DataType.INT64),\n    FieldSchema(name=DEPOSIT, dtype=DataType.DOUBLE),\n    FieldSchema(name=PICTURE, dtype=DataType.FLOAT_VECTOR, dim=DIM)\n]\n\nschema = CollectionSchema(fields)\n\n\nInsert data for USER_ID and AGE from 1 to 5000 for the purpose of tracking whether the iterator is working correctly.\n\ndef insert_data(collection):\n    rng = np.random.default_rng(seed=19530)\n    batch_count = 5\n    filter_set: set = {}\n    for i in range(batch_count):\n        entities = [\n            [(i * NUM_ENTITIES + ni) for ni in range(NUM_ENTITIES)],\n            [(i * NUM_ENTITIES + ni) for ni in range(NUM_ENTITIES)],\n            [float(ni) for ni in range(NUM_ENTITIES)],\n            rng.random((NUM_ENTITIES, DIM)),\n        ]\n        collection.insert(entities)\n        collection.flush()\n        print(f\"Finish insert batch{i}, number of entities in Milvus: {collection.num_entities}\")\n\n\nUsing queryIterator (with offset) will result in the loss of data for the first 'limit-2' items, and each concurrently returned batch does not meet expectations\n\ndef query_iterate_collection_with_offset(collection):\n    expr = f\"10 <= {AGE} <= 100\"\n    query_iterator = collection.query_iterator(expr=expr, output_fields=[USER_ID, AGE],\n                                               offset=10, batch_size=50, consistency_level=CONSISTENCY_LEVEL)\n    page_idx = 0\n    while True:\n        res = query_iterator.next()\n        if len(res) == 0:\n            print(\"query iteration finished, close\")\n            query_iterator.close()\n            break\n        for i in range(len(res)):\n            print(res[i])\n        page_idx += 1\n        print(f\"page{page_idx}-------------------------\")\n\nExpected Behavior\nThe expected result:\n{'age': 20, 'id': 20}\n{'age': 21, 'id': 21}\n{'age': 22, 'id': 22}\n{'age': 23, 'id': 23}\n{'age': 24, 'id': 24}\n{'age': 25, 'id': 25}\n{'age': 26, 'id': 26}\n{'age': 27, 'id': 27}\n{'age': 28, 'id': 28}\n{'age': 29, 'id': 29}\n{'age': 30, 'id': 30}\n{'age': 31, 'id': 31}\n{'age': 32, 'id': 32}\n{'age': 33, 'id': 33}\n{'age': 34, 'id': 34}\n{'age': 35, 'id': 35}\n{'age': 36, 'id': 36}\n{'age': 37, 'id': 37}\n{'age': 38, 'id': 38}\n{'age': 39, 'id': 39}\n{'age': 40, 'id': 40}\n{'age': 41, 'id': 41}\n{'age': 42, 'id': 42}\n{'age': 43, 'id': 43}\n{'age': 44, 'id': 44}\n{'age': 45, 'id': 45}\n{'age': 46, 'id': 46}\n{'age': 47, 'id': 47}\n{'age': 48, 'id': 48}\n{'age': 49, 'id': 49}\n{'age': 50, 'id': 50}\n{'age': 51, 'id': 51}\n{'age': 52, 'id': 52}\n{'age': 53, 'id': 53}\n{'age': 54, 'id': 54}\n{'age': 55, 'id': 55}\n{'age': 56, 'id': 56}\n{'age': 57, 'id': 57}\n{'age': 58, 'id': 58}\n{'age': 59, 'id': 59}\n{'age': 60, 'id': 60}\n{'age': 61, 'id': 61}\n{'age': 62, 'id': 62}\n{'age': 63, 'id': 63}\n{'age': 64, 'id': 64}\n{'age': 65, 'id': 65}\n{'age': 66, 'id': 66}\n{'age': 67, 'id': 67}\n{'age': 68, 'id': 68}\n{'age': 69, 'id': 69}\npage1-------------------------\n{'age': 70, 'id': 70}\n{'age': 71, 'id': 71}\n{'age': 72, 'id': 72}\n{'age': 73, 'id': 73}\n{'age': 74, 'id': 74}\n{'age': 75, 'id': 75}\n{'age': 76, 'id': 76}\n{'age': 77, 'id': 77}\n{'age': 78, 'id': 78}\n{'id': 79, 'age': 79}\n{'id': 80, 'age': 80}\n{'id': 81, 'age': 81}\n{'id': 82, 'age': 82}\n{'id': 83, 'age': 83}\n{'id': 84, 'age': 84}\n{'id': 85, 'age': 85}\n{'id': 86, 'age': 86}\n{'id': 87, 'age': 87}\n{'id': 88, 'age': 88}\n{'id': 89, 'age': 89}\n{'id': 90, 'age': 90}\n{'id': 91, 'age': 91}\n{'id': 92, 'age': 92}\n{'id': 93, 'age': 93}\n{'id': 94, 'age': 94}\n{'id': 95, 'age': 95}\n{'id': 96, 'age': 96}\n{'id': 97, 'age': 97}\n{'id': 98, 'age': 98}\n{'id': 99, 'age': 99}\n{'id': 100, 'age': 100}\nThe actual result obtained:\n{'age': 29, 'id': 29}\n{'age': 30, 'id': 30}\n{'age': 31, 'id': 31}\n{'age': 32, 'id': 32}\n{'age': 33, 'id': 33}\n{'age': 34, 'id': 34}\n{'age': 35, 'id': 35}\n{'age': 36, 'id': 36}\n{'age': 37, 'id': 37}\n{'age': 38, 'id': 38}\n{'age': 39, 'id': 39}\n{'age': 40, 'id': 40}\n{'age': 41, 'id': 41}\n{'age': 42, 'id': 42}\n{'age': 43, 'id': 43}\n{'age': 44, 'id': 44}\n{'age': 45, 'id': 45}\n{'age': 46, 'id': 46}\n{'age': 47, 'id': 47}\n{'age': 48, 'id': 48}\n{'age': 49, 'id': 49}\n{'age': 50, 'id': 50}\n{'age': 51, 'id': 51}\n{'age': 52, 'id': 52}\n{'age': 53, 'id': 53}\n{'age': 54, 'id': 54}\n{'age': 55, 'id': 55}\n{'age': 56, 'id': 56}\n{'age': 57, 'id': 57}\n{'age': 58, 'id': 58}\n{'age': 59, 'id': 59}\n{'age': 60, 'id': 60}\n{'age': 61, 'id': 61}\n{'age': 62, 'id': 62}\n{'age': 63, 'id': 63}\n{'age': 64, 'id': 64}\n{'age': 65, 'id': 65}\n{'age': 66, 'id': 66}\n{'age': 67, 'id': 67}\n{'age': 68, 'id': 68}\n{'age': 69, 'id': 69}\n{'age': 70, 'id': 70}\n{'age': 71, 'id': 71}\n{'age': 72, 'id': 72}\n{'age': 73, 'id': 73}\n{'age': 74, 'id': 74}\n{'age': 75, 'id': 75}\n{'age': 76, 'id': 76}\n{'age': 77, 'id': 77}\n{'age': 78, 'id': 78}\npage1-------------------------\n{'id': 79, 'age': 79}\n{'id': 80, 'age': 80}\n{'id': 81, 'age': 81}\n{'id': 82, 'age': 82}\n{'id': 83, 'age': 83}\n{'id': 84, 'age': 84}\n{'id': 85, 'age': 85}\n{'id': 86, 'age': 86}\n{'id': 87, 'age': 87}\n{'id': 88, 'age': 88}\n{'id': 89, 'age': 89}\n{'id': 90, 'age': 90}\n{'id': 91, 'age': 91}\n{'id': 92, 'age': 92}\n{'id': 93, 'age': 93}\n{'id': 94, 'age': 94}\n{'id': 95, 'age': 95}\n{'id': 96, 'age': 96}\n{'id': 97, 'age': 97}\n{'id': 98, 'age': 98}\n{'id': 99, 'age': 99}\npage2-------------------------\n{'id': 100, 'age': 100}\npage3-------------------------\nSteps/Code To Reproduce behavior\nAs described in \"Describe the bug\", if the queryIterator interface is provided with an offset value, data corresponding to the previous 'offset-2' numbers will be lost, and each concurrently returned batch does not meet expectations.\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):None\n- Method of installation (Docker, or from source):Zilliz\n- Milvus version (v0.3.1, or v0.4.0):v2.3.13-91cdada-219\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-02", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "lentitude2tk"}
{"issue_number": 2016, "issue_title": "[Bug]: The error message is not very clear when insert not supported data type for bfloat16/float16 field", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error message is not very clear when insert not supported data type for bfloat16/float16 field\n(1) insert \"bf16_vector = tf.cast(raw_vector, dtype=tf.bfloat16).numpy()\", it is successfully\n(2) insert \"bf16_vector = tf.cast(raw_vector, dtype=tf.bfloat16)\", it reports error \"(code=1, message=Collection field dim is 128, but entities field dim is 64)\", I think this error is not very clear to show that now it only supports list of \"numpy.ndarray\" type.\nExpected Behavior\nThe error message should show what is the error straight-forwardly, something like the type is not valid, it only supports...\nSteps/Code To Reproduce behavior\nfrom pymilvus import connections\nfrom pymilvus import DataType\nfrom pymilvus import Partition\nfrom pymilvus import utility\nimport time\nimport h5py\n\nimport json\nfrom pymilvus import CollectionSchema, FieldSchema, DataType, utility, connections, Collection\ncollection_name = \"test_bf16\"\nconnections.connect()\n\ndim = 128\nint64_field = FieldSchema(name=\"int64\", dtype=DataType.INT64, is_primary=True)\nbfloat16_vector = FieldSchema(name=\"bfloat16_vector\", dtype=DataType.BFLOAT16_VECTOR, dim=dim)\n\n\nschema = CollectionSchema(fields=[int64_field, bfloat16_vector])\n\nold_collection = Collection(collection_name, schema)\nold_collection.drop()\nprint(\"drop\")\n\ncollection = Collection(collection_name, schema=schema)\n\ndef gen_bf16_vectors(data):\n      bf16_vectors = []\n      for i in range(data.shape[0]):\n            raw_vector = data[i]\n            bf16_vector = tf.cast(raw_vector, dtype=tf.bfloat16)\n            bf16_vectors.append(bytes(bf16_vector))\n      return bf16_vectors\n\ndef gen_fp16_vectors(data):\n       fp16_vectors = []\n       for i in range(data.shape[0]):\n             raw_vector =  data[i]\n             fp16_vector = np.array(raw_vector, dtype=np.float16)\n             data_bytes = bytes(fp16_vector)\n             fp16_vectors.append(data_bytes)\n       return fp16_vectors\n\nimport numpy as np\nimport tensorflow as tf\n\nfname = \"data set path\"\nf = h5py.File(fname, 'r')\ndata = f['train']\ntest = f['test']\nneighbors = f['neighbors']\nprint(data.shape)\nprint(neighbors.shape)\nprint(test.shape)\n\nprint(\"begin insert...\")\ncounter = 0\nblock_num = 100\nblock_size = int(data.shape[0]/block_num)\nstart = time.time()\nfor t in range(block_num):\n    print(\"inserting: \", counter, \" to \", counter + block_size )\n    #bytes_data = gen_bf16_vectors(data[counter: counter + block_size])\n    bytes_data = gen_bf16_vectors(data[counter: counter + block_size])\n    #bytes_data = data[counter: counter + block_size]\n    entities = [\n            [i for i in range(counter, counter + block_size)],\n            bytes_data\n            ]\n    insert_result =  collection.insert(entities)\n    print(insert_result)\n    counter = counter + block_size\nprint (\"end of insert, cost: \", time.time()-start)\n# flush inside this function\ncollection.flush()\nprint(collection.num_entities)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-02", "closed_at": "2024-09-02", "labels": ["kind/bug"], "State": "closed", "Author": "binbinlv"}
{"issue_number": 2013, "issue_title": "[Bug]: the files list of bulk writer can not be passed into bulk insert api in pymilvus", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ncode example\n\n[2024-04-01T12:58:12.775Z]         with RemoteBulkWriter(\n\n[2024-04-01T12:58:12.775Z]             schema=schema,\n\n[2024-04-01T12:58:12.775Z]             remote_path=\"bulk_data\",\n\n[2024-04-01T12:58:12.775Z]             connect_param=RemoteBulkWriter.ConnectParam(\n\n[2024-04-01T12:58:12.775Z]                 bucket_name=self.bucket_name,\n\n[2024-04-01T12:58:12.775Z]                 endpoint=self.minio_endpoint,\n\n[2024-04-01T12:58:12.775Z]                 access_key=\"minioadmin\",\n\n[2024-04-01T12:58:12.775Z]                 secret_key=\"minioadmin\",\n\n[2024-04-01T12:58:12.775Z]             ),\n\n[2024-04-01T12:58:12.775Z]             file_type=BulkFileType.NUMPY,\n\n[2024-04-01T12:58:12.775Z]         ) as remote_writer:\n\n[2024-04-01T12:58:12.775Z]             for i in range(entities):\n\n[2024-04-01T12:58:12.775Z]                 row = {\n\n[2024-04-01T12:58:12.775Z]                     df.pk_field: i,\n\n[2024-04-01T12:58:12.775Z]                     df.int_field: 1,\n\n[2024-04-01T12:58:12.775Z]                     df.float_field: 1.0,\n\n[2024-04-01T12:58:12.775Z]                     df.string_field: \"string\",\n\n[2024-04-01T12:58:12.775Z]                     df.json_field: {\"key\": \"value\"},\n\n[2024-04-01T12:58:12.775Z]                     df.vec_field: [random.random() for _ in range(dim)]\n\n[2024-04-01T12:58:12.775Z]                 }\n\n[2024-04-01T12:58:12.775Z]                 if auto_id:\n\n[2024-04-01T12:58:12.775Z]                     row.pop(df.pk_field)\n\n[2024-04-01T12:58:12.775Z]                 if enable_dynamic_field:\n\n[2024-04-01T12:58:12.775Z]                     row[\"name\"] = fake.name()\n\n[2024-04-01T12:58:12.775Z]                     row[\"address\"] = fake.address()\n\n[2024-04-01T12:58:12.775Z]                 remote_writer.append_row(row)\n\n[2024-04-01T12:58:12.775Z]             remote_writer.commit()\n\n[2024-04-01T12:58:12.775Z]             files = remote_writer.batch_files\n\n[2024-04-01T12:58:12.775Z]         # import data\n\n[2024-04-01T12:58:12.775Z]         t0 = time.time()\n\n[2024-04-01T12:58:12.775Z] >       task_id, _ = self.utility_wrap.do_bulk_insert(\n\n[2024-04-01T12:58:12.775Z]             collection_name=c_name, files=files\n\n[2024-04-01T12:58:12.775Z]         )\n\nremote_writer.batch_files is a list of list, however do_bulk_insert can only accept list datatype\n[2024-04-01T12:58:12.777Z] [2024-04-01 12:48:52 - INFO - ci_test]: files to load: [['bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/uid.npy', 'bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/int_scalar.npy', 'bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/float_scalar.npy', 'bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/string_scalar.npy', 'bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/json.npy', 'bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/vectors.npy', 'bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/$meta.npy']] (utility_wrapper.py:26)\n\n[2024-04-01T12:58:12.777Z] [2024-04-01 12:48:52 - DEBUG - ci_test]: (api_request)  : [do_bulk_insert] args: ['bulk_insert_sjlEr93H', [['bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/uid.npy', 'bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/int_scalar.npy', 'bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/float_scalar.npy', 'bulk_data/4f972d7b-5130-4b19-9f28-0344b2aa7fef/1/string_scalar.npy', 'bulk_d......, kwargs: {} (api_request.py:62)\n\n[2024-04-01T12:58:12.777Z] [2024-04-01 12:48:52 - ERROR - pymilvus.decorators]: Unexpected error: [do_bulk_insert], bad argument type for built-in operation, <Time: {'RPC start': '2024-04-01 12:48:52.299627', 'Exception': '2024-04-01 12:48:52.299699'}> (decorators.py:164)\n\nExpected Behavior\ndo_bulk_insert can accept list of list and list datatype\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-02", "closed_at": "2024-04-02", "labels": ["kind/bug"], "State": "closed", "Author": "zhuwenxing"}
{"issue_number": 2010, "issue_title": "[QUESTION]: Function client.create_index_params() not found", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\npymilvus version: 2.4.0\nI saw examples in the documentation using client.create_index_params to create index parameters,\nbut I didn't actually find this function.\n\nAnything else?\nNo response", "created_at": "2024-04-01", "closed_at": "2024-04-01", "labels": ["kind/question"], "State": "closed", "Author": "zhaijunxiao"}
{"issue_number": 2009, "issue_title": "[Bug]: MilvusClient isn't setting nlist while creating IVF_FLAT IP index ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nBelow is my code\n    fields = [\n        FieldSchema(\n            name=Columns.ID.value,\n            dtype=DataType.VARCHAR,\n            max_length=50,\n            is_primary=True,\n            auto_id=False,\n        ),\n        FieldSchema(name=Columns.IS_ENABLED.value, dtype=DataType.BOOL),\n        FieldSchema(name=Columns.COUNTRY_CODES.value, dtype=DataType.JSON),\n        FieldSchema(name=Columns.APPLICABLE_FOR.value, dtype=DataType.JSON),\n        FieldSchema(name=Columns.EMBEDDING.value, dtype=DataType.FLOAT_VECTOR, dim=MODEL_DIM),\n    ]\n    schema = CollectionSchema(\n        fields=fields, description=\"search recipes\", enable_dynamic_field=True\n    )\n\n    index_params = MilvusClient.prepare_index_params()\n    index_params.add_index(\n        field_name=Columns.EMBEDDING.value,\n        index_type=IndexType.IVF_FLAT,\n        metric_type=MetricType.IP,\n        params={\"nlist\": 1536}\n    )\n\n    client.create_collection(\n        collection_name,\n        id_type=\"string\",\n        vector_field_name=Columns.EMBEDDING.value,\n        metric_type=MetricType.IP,\n        schema=schema,\n        index_params=index_params\n    )\n\nIt does result in creation of an IVF_FLAT IP index but the nlist isn't getting set.\n\nIf I use the Collection class it works;\n    collection = Collection(collection_name, schema=schema, using=client._using)\n\n    index_params = {\n        \"metric_type\": MetricType.IP,\n        \"index_type\": IndexType.IVF_FLAT,\n        \"params\": {\"nlist\": 1536},\n    }\n\n    collection.create_index(\n        field_name=Columns.EMBEDDING.value, index_params=index_params\n    )\n\nBut as you see I'm forced to use a private variable from the MilvusClient instance, _using. Please fix this.\nExpected Behavior\nThe nlist should get set.\n\nSteps/Code To Reproduce behavior\nUse the code from my bug description.\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): macOS Monterey (12.1)\n- Method of installation (Docker, or from source): Zilliz cloud\n- Milvus version (v0.3.1, or v0.4.0): Not sure. Zilliz says `Compatible With Milvus 2.3.x`. PyMilvus version is 2.4.0\n- Milvus configuration (Settings you made in `server_config.yaml`): -\nAnything else?\nNo response", "created_at": "2024-03-28", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "afzalIbnSH"}
{"issue_number": 2006, "issue_title": "[QUESTION]: How can I store slightly large data in milvus?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI intend to store data about 500M and try to search with vectors.\nWhen I deposited the data into milvus all at once, the following error occurred:\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\nstatus = StatusCode.RESOURCE_EXHAUSTED\ndetails = \"grpc: received message larger than max (475051940 vs. 67108864)\"\ndebug_error_string = \"UNKNOWN:Error received from peer ipv6:%5B::1%5D:19530 {grpc_message:\"grpc: received message larger than max (475051940 vs. 67108864)\", grpc_status:8, created_time:\"2024-03-19T18:35:06.0173942+00:00\"}\"\nEven though I added the following codes in the script, the error still exists:\n\nSo I try to deposit data into milvus several times in small amounts, for example 100 items. And I completed storation.\nBut when I did a query based on the vector, it only returned me a maximum of 100 entries. However, I wanna find the most similar data in the whole data.\nTherefore, how can I store data so that I can successfully achieve my query?\nAnything else?\nNo response", "created_at": "2024-03-27", "closed_at": "2024-04-11", "labels": ["kind/question"], "State": "closed", "Author": "pipi357"}
{"issue_number": 2004, "issue_title": "[Bug]: PlaceHolderValue type is incorrect when input vector is fp16/bf16", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen search with bf16/fp16 vector the place holder type is always binary\nExpected Behavior\nPlace holder type shall be exactly the input vector type\nSteps/Code To Reproduce behavior\nSee\nhttps://github.com/milvus-io/pymilvus/blob/b9a10c9c41708d4b4d3735d4d1f76713872e31ba/pymilvus/client/prepare.py#L596-L617\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-03-27", "closed_at": "2024-09-02", "labels": ["kind/bug"], "State": "closed", "Author": "congqixia"}
{"issue_number": 2003, "issue_title": "[QUESTION]: \u8bf7\u95ee\u4e3a\u4ec0\u4e48\u793a\u4f8b\u4e2d\u7684dense_index\u4f7f\u7528L2 metric_type,\u5b98\u65b9m3\u6a21\u578b\u7684\u793a\u4f8b\u597d\u50cf\u662f\u7535\u79ef", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nhttps://github.com/milvus-io/pymilvus/blob/master/examples/hello_hybrid_sparse_dense.py\nAnything else?\nNo response", "created_at": "2024-03-26", "closed_at": "2024-03-26", "labels": ["kind/question"], "State": "closed", "Author": "seetimee"}
{"issue_number": 2103, "issue_title": "[Bug]: <MilvusException: (code=1, message=Unexpected error, message=<Cannot invoke RPC: Channel closed!>)>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nFile \"/root/miniconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 131, in handler\nreturn func(*args, **kwargs)\nFile \"/root/miniconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 170, in handler\nreturn func(self, *args, **kwargs)\nFile \"/root/miniconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 112, in handler\nraise e from e\nFile \"/root/miniconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 74, in handler\nreturn func(*args, **kwargs)\nFile \"/root/miniconda3/lib/python3.9/site-packages/pymilvus/client/grpc_handler.py\", line 353, in describe_collection\nresponse = rf.result()\nFile \"/root/miniconda3/lib/python3.9/site-packages/grpc/_interceptor.py\", line 171, in result\nraise self._exception\nFile \"/root/miniconda3/lib/python3.9/site-packages/grpc/_interceptor.py\", line 389, in future\nreturn self._interceptor.intercept_unary_unary(\nFile \"/root/miniconda3/lib/python3.9/site-packages/pymilvus/client/interceptor.py\", line 35, in intercept_unary_unary\nresponse = continuation(new_details, next(new_request_iterator))\nFile \"/root/miniconda3/lib/python3.9/site-packages/grpc/_interceptor.py\", line 379, in continuation\nreturn self._thunk(new_method).future(\nFile \"/root/miniconda3/lib/python3.9/site-packages/grpc/_channel.py\", line 1197, in future\ncall = self._managed_call(\nFile \"/root/miniconda3/lib/python3.9/site-packages/grpc/_channel.py\", line 1709, in create\ncall = state.channel.integrated_call(\nFile \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 502, in grpc._cython.cygrpc.Channel.integrated_call\nFile \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 318, in grpc._cython.cygrpc._integrated_call\nFile \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 236, in grpc._cython.cygrpc._call\nFile \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 281, in grpc._cython.cygrpc._call\nValueError: Cannot invoke RPC: Channel closed!\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\nFile \"/home/education-ai/ai-backend/common/chunk_embedding.py\", line 136, in get_content_by_kw\ncollection = Collection(collection_name)\nFile \"/root/miniconda3/lib/python3.9/site-packages/pymilvus/orm/collection.py\", line 117, in init\nresp = conn.describe_collection(self._name, **kwargs)\nFile \"/root/miniconda3/lib/python3.9/site-packages/pymilvus/decorators.py\", line 153, in handler\nraise MilvusException(message=f\"Unexpected error, message=<{e!s}>\") from e\npymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=Unexpected error, message=<Cannot invoke RPC: Channel closed!>)>\nThe above is my error message. This problem occasionally occurs, but it greatly affects the business experience. May I ask what is the reason for this problem? What should I do to fix it.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): centos 7.9, cpu 64core, 128GMemroy\n- Method of installation (Docker, or from source): Docker\n- Milvus version (v0.3.1, or v0.4.0):  v2.4.0\n- Milvus configuration (Settings you made in `server_config.yaml`):\nversion: '3.5'\n\nservices:\n  etcd:\n    container_name: milvus-etcd\n    image: quay.io/coreos/etcd:v3.5.5\n    environment:\n      - ETCD_AUTO_COMPACTION_MODE=revision\n      - ETCD_AUTO_COMPACTION_RETENTION=1000\n      - ETCD_QUOTA_BACKEND_BYTES=4294967296\n      - ETCD_SNAPSHOT_COUNT=50000\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd\n    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd\n    healthcheck:\n      test: [\"CMD\", \"etcdctl\", \"endpoint\", \"health\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n\n  minio:\n    container_name: milvus-minio\n    image: minio/minio:RELEASE.2023-03-20T20-16-18Z\n    environment:\n      MINIO_ACCESS_KEY: minioadmin\n      MINIO_SECRET_KEY: minioadmin\n    ports:\n      - \"9001:9001\"\n      - \"9000:9000\"\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data\n    command: minio server /minio_data --console-address \":9001\"\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9000/minio/health/live\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n\n  standalone:\n    container_name: milvus-standalone\n    image: milvusdb/milvus:v2.4.0\n    command: [\"milvus\", \"run\", \"standalone\"]\n    security_opt:\n    - seccomp:unconfined\n    environment:\n      ETCD_ENDPOINTS: etcd:2379\n      MINIO_ADDRESS: minio:9000\n      proxy.maxRoleNum: 200\n      common.security.authorizationEnabled: \"false\"\n    volumes:\n    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9091/healthz\"]\n      interval: 30s\n      start_period: 90s\n      timeout: 20s\n      retries: 3\n    ports:\n      - \"19530:19530\"\n      - \"9091:9091\"\n    depends_on:\n      - \"etcd\"\n      - \"minio\"\n\nnetworks:\n  default:\n    name: milvus\nAnything else?\nNo response", "created_at": "2024-05-23", "closed_at": "2025-01-13", "labels": ["kind/bug"], "State": "closed", "Author": "ligjn"}
{"issue_number": 2102, "issue_title": "[QUESTION]: \u5411\u91cf\u7684\u7ef4\u5ea6\u53ea\u80fd\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5b9a\u503c\u5417\uff1f\u80fd\u4e0d\u80fd\u8bbe\u7f6e\u4e00\u4e2a\u8303\u56f4\uff1f", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nNo response\nAnything else?\nNo response", "created_at": "2024-05-20", "closed_at": "2024-05-21", "labels": ["kind/question"], "State": "closed", "Author": "zyc1128"}
{"issue_number": 2101, "issue_title": "search\u4e2dlimit\u8bbe\u7f6e\u4e3a5\u53ea\u8fd4\u56de\u4e00\u4e2a\u6570\u636e", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nfields_1= [\n\n            FieldSchema(name=\"pk\", is_primary=True, dtype=DataType.INT64),\n            FieldSchema(name=\"content\", dtype=DataType.VARCHAR, max_length=50000),\n            FieldSchema(name=\"embedding\", dtype=DataType.FLOAT_VECTOR, dim=1024),\n            FieldSchema(name=\"id\", dtype=DataType.VARCHAR, max_length=1000)\n\n        ]\n        schema_1 = CollectionSchema(fields_1, \"\u65e0\")\n\n        index={\n          \"index_type\": \"IVF_FLAT\",\n          \"metric_type\": \"L2\",\n          \"params\": {\"nlist\": 128},\n\n        }\n        self.documentation_collection = Collection(\"documentation\",schema_1)\n        self.documentation_collection.create_index(\"embedding\",index,index_name=\"embedding\")\n  emb = self.generate_embedding(question)\n        search_params = {\"metric_type\": \"L2\"}\n\n\n        print(self.documentation_collection.search([emb], \"embedding\", search_params, limit=5, output_fields=[\"content\"]))\n\n        return self._extract_content(\n            self.documentation_collection.search([emb], \"embedding\", search_params, limit=5, output_fields=[\"content\"])\n        )\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-05-20", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "zyc1128"}
{"issue_number": 2100, "issue_title": "[Bug]: Failed to create sparse vector index", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nFor the latest 2.4 version, when I tried to create an index on the spare vector field, which dtype = DataType.SPARSE_FLOAT_VECTOR, I received an error message:\nRPC error: [create_index], <MilvusException: (code=1100, message=index type not match: expected=Trie, actual=SPARSE_INVERTED_INDEX: invalid parameter)>, <Time:{'RPC start': '2024-05-20 00:47:10.251044', 'RPC error': '2024-05-20 00:47:10.271028'}>\nFailed to create an index on collection\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): \n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-05-19", "closed_at": "2024-05-20", "labels": ["kind/bug"], "State": "closed", "Author": "wyueai"}
{"issue_number": 2097, "issue_title": "[QUESTION]: Is it possible to test milvus offline by ann_benchmark on Centos?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI have tried for a long time while always fail, is it possible to connect milvus with ann_benchmark?\nby the way, is the package \"pyknowhere\" really exist? I only found knowhere1.0.0.\nhttps://github.com/erikbern/ann-benchmarks/blob/main/ann_benchmarks/algorithms/milvus/module.py\nAnything else?\nNo response", "created_at": "2024-05-16", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "GreateFang"}
{"issue_number": 2091, "issue_title": "[Bug]: [create_partition], <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED,", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n`grpc RpcError: [create_partition], <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, >, <Time:{'RPC start': '2024-05-15 14:47:17.303055', 'gRPC error': '2024-05-15 14:47:17.304527'}>\nTraceback (most recent call last):\nFile \"/Users/chenxuan/work/recall_services/milvus_start.py\", line 27, in \nclient.create_partition(\nFile \"/Users/chenxuan/miniconda3/envs/dev/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 764, in create_partition\nconn.create_partition(collection_name, partition_name, timeout=timeout, **kwargs)\nFile \"/Users/chenxuan/miniconda3/envs/dev/lib/python3.11/site-packages/pymilvus/decorators.py\", line 161, in handler\nraise e from e\nFile \"/Users/chenxuan/miniconda3/envs/dev/lib/python3.11/site-packages/pymilvus/decorators.py\", line 143, in handler\nreturn func(*args, **kwargs)\n^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/chenxuan/miniconda3/envs/dev/lib/python3.11/site-packages/pymilvus/decorators.py\", line 182, in handler\nreturn func(self, *args, **kwargs)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/chenxuan/miniconda3/envs/dev/lib/python3.11/site-packages/pymilvus/decorators.py\", line 91, in handler\nraise e from e\nFile \"/Users/chenxuan/miniconda3/envs/dev/lib/python3.11/site-packages/pymilvus/decorators.py\", line 87, in handler\nreturn func(*args, **kwargs)\n^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/chenxuan/miniconda3/envs/dev/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 401, in create_partition\nresponse = rf.result()\n^^^^^^^^^^^\nFile \"/Users/chenxuan/miniconda3/envs/dev/lib/python3.11/site-packages/grpc/_channel.py\", line 880, in result\nraise self\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\nstatus = StatusCode.UNIMPLEMENTED\ndetails = \"\"\ndebug_error_string = \"UNKNOWN:Error received from peer  {created_time:\"2024-05-15T14:47:17.304359+08:00\", grpc_status:12, grpc_message:\"\"}\"\n\n`\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient\n\n# 1. Set up a Milvus client\nclient = MilvusClient(\n    uri=\"./demo.db\"\n)\n\n# 2. Create a collection\nclient.create_collection(\n    collection_name=\"quick_setup\",\n    dimension=5,\n    metric_type=\"IP\"\n)\ndata=[\n    {\"id\": 10, \"vector\": [-0.5570353903748935, -0.8997887893201304, -0.7123782431855732, -0.6298990746450119, 0.6699215060604258], \"color\": \"red_1202\"},\n    {\"id\": 11, \"vector\": [0.6319019033373907, 0.6821488267878275, 0.8552303045704168, 0.36929791364943054, -0.14152860714878068], \"color\": \"blue_4150\"},\n    {\"id\": 12, \"vector\": [0.9483947484855766, -0.32294203351925344, 0.9759290319978025, 0.8262982148666174, -0.8351194181285713], \"color\": \"orange_4590\"},\n    {\"id\": 13, \"vector\": [-0.5449109892498731, 0.043511240563786524, -0.25105249484790804, -0.012030655265886425, -0.0010987671273892108], \"color\": \"pink_9619\"},\n    {\"id\": 14, \"vector\": [0.6603339372951424, -0.10866551787442225, -0.9435597754324891, 0.8230244263466688, -0.7986720938400362], \"color\": \"orange_4863\"},\n    {\"id\": 15, \"vector\": [-0.8825129181091456, -0.9204557711667729, -0.935350065513425, 0.5484069690287079, 0.24448151140671204], \"color\": \"orange_7984\"},\n    {\"id\": 16, \"vector\": [0.6285586391568163, 0.5389064528263487, -0.3163366239905099, 0.22036279378888013, 0.15077052220816167], \"color\": \"blue_9010\"},\n    {\"id\": 17, \"vector\": [-0.20151825016059233, -0.905239387635804, 0.6749305353372479, -0.7324272081377843, -0.33007998971889263], \"color\": \"blue_4521\"},\n    {\"id\": 18, \"vector\": [0.2432286610792349, 0.01785636564206139, -0.651356982731391, -0.35848148851027895, -0.7387383128324057], \"color\": \"orange_2529\"},\n    {\"id\": 19, \"vector\": [0.055512329053363674, 0.7100266349039421, 0.4956956543575197, 0.24541352586717702, 0.4209030729923515], \"color\": \"red_9437\"}\n]\n\nclient.create_partition(\n    collection_name=\"quick_setup\",\n    partition_name=\"partitionA\"\n)\n\nres = client.insert(\n    collection_name=\"quick_setup\",\n    data=data,\n    partition_name=\"partitionA\"\n)\n\nprint(res)\nEnvironment details\npymilvus 2.42\nos:mac\nAnything else?\nnone", "created_at": "2024-05-15", "closed_at": null, "labels": ["kind/question", "milvus-lite"], "State": "open", "Author": "gallupliu"}
{"issue_number": 2083, "issue_title": "[Bug]: Attu up_time is negative", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nExpected Behavior\nIn this case, up_time is less than 5 minutes.\nSteps/Code To Reproduce behavior\nJust clone the latest version of milvus and attu and connect.\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Linux\n- Method of installation (Docker, or from source):\n- Milvus: Clone v2.4.1-79-g36f1ea93a. Built locally and run standalone.\n- Attu: docker run -p 8000:3000 -e MILVUS_URL={} zilliz/attu:v2.3.10\n- Milvus configuration (Settings you made in `server_config.yaml`): Default\nAnything else?\nAttu can't parse monotonic clock(m+=) in output of Time.string().\n\"created_time\": \"2024-05-11 20:05:21.922713137 +0800 CST m=+6.750931297\", \"updated_time\": \"2024-05-11 20:05:21.922713375 +0800 CST m=+6.750931533\",\nAnother build from release works fine\n\"created_time\": \"2024-05-11 12:14:32.023107697 +0000 UTC\", \"updated_time\": \"2024-05-11 12:14:32.023109206 +0000 UTC\",\nMaybe it's the go version, idk, but add .Round(0) to\nhttps://github.com/milvus-io/milvus/blob/8a9a42198d75388a5eeba33c7d38ec242420ca22/internal/querycoordv2/handlers.go#L258\ncan eliminate this problem.", "created_at": "2024-05-11", "closed_at": "2024-05-11", "labels": ["kind/bug"], "State": "closed", "Author": "ccinv"}
{"issue_number": 2081, "issue_title": "[Enhancement]: Supports f16 and bf16 datatype for bulk writer", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nSupports f16 and bf16 datatype for bulk writer\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-05-11", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "zhuwenxing"}
{"issue_number": 2080, "issue_title": "[Bug]: bulkwriter does not support add row for new json datatype", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nnew json datatype can be int, float, varchar and array. but in bulkwriter will check data as key value pair.\n[2024-05-10T09:38:20.579Z]         with RemoteBulkWriter(\n[2024-05-10T09:38:20.579Z]             schema=schema,\n[2024-05-10T09:38:20.579Z]             remote_path=\"bulk_data\",\n[2024-05-10T09:38:20.579Z]             connect_param=RemoteBulkWriter.ConnectParam(\n[2024-05-10T09:38:20.579Z]                 bucket_name=self.bucket_name,\n[2024-05-10T09:38:20.579Z]                 endpoint=self.minio_endpoint,\n[2024-05-10T09:38:20.579Z]                 access_key=\"minioadmin\",\n[2024-05-10T09:38:20.579Z]                 secret_key=\"minioadmin\",\n[2024-05-10T09:38:20.579Z]             ),\n[2024-05-10T09:38:20.579Z]             file_type=BulkFileType.NUMPY,\n[2024-05-10T09:38:20.579Z]         ) as remote_writer:\n[2024-05-10T09:38:20.579Z]             json_value = [\n[2024-05-10T09:38:20.579Z]                 1,\n[2024-05-10T09:38:20.579Z]                 1.0,\n[2024-05-10T09:38:20.579Z]                 \"1\",\n[2024-05-10T09:38:20.579Z]                 [1, 2, 3],\n[2024-05-10T09:38:20.579Z]                 [\"1\", \"2\", \"3\"],\n[2024-05-10T09:38:20.579Z]                 [1, 2, \"3\"],\n[2024-05-10T09:38:20.579Z]                 {\"key\": \"value\"},\n[2024-05-10T09:38:20.579Z]             ]\n[2024-05-10T09:38:20.579Z]             for i in range(entities):\n[2024-05-10T09:38:20.579Z]                 row = {\n[2024-05-10T09:38:20.579Z]                     df.pk_field: i,\n[2024-05-10T09:38:20.579Z]                     df.int_field: 1,\n[2024-05-10T09:38:20.579Z]                     df.float_field: 1.0,\n[2024-05-10T09:38:20.579Z]                     df.string_field: \"string\",\n[2024-05-10T09:38:20.579Z]                     df.json_field: json_value[i%len(json_value)],\n[2024-05-10T09:38:20.579Z]                     df.vec_field: cf.gen_vectors(1, dim)[0]\n[2024-05-10T09:38:20.579Z]                 }\n[2024-05-10T09:38:20.579Z]                 if auto_id:\n[2024-05-10T09:38:20.579Z]                     row.pop(df.pk_field)\n[2024-05-10T09:38:20.579Z]                 if enable_dynamic_field:\n[2024-05-10T09:38:20.579Z]                     row[\"name\"] = fake.name()\n[2024-05-10T09:38:20.579Z]                     row[\"address\"] = fake.address()\n[2024-05-10T09:38:20.579Z] >               remote_writer.append_row(row)\n[2024-05-10T09:38:20.579Z] \n[2024-05-10T09:38:20.579Z] /home/jenkins/agent/workspace/tests/python_client/testcases/test_bulk_insert.py:1121: \n[2024-05-10T09:38:20.579Z] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2024-05-10T09:38:20.579Z] /usr/local/lib/python3.8/site-packages/pymilvus/bulk_writer/remote_bulk_writer.py:259: in append_row\n[2024-05-10T09:38:20.579Z]     super().append_row(row, **kwargs)\n[2024-05-10T09:38:20.579Z] /usr/local/lib/python3.8/site-packages/pymilvus/bulk_writer/local_bulk_writer.py:90: in append_row\n[2024-05-10T09:38:20.579Z]     super().append_row(row, **kwargs)\n[2024-05-10T09:38:20.579Z] /usr/local/lib/python3.8/site-packages/pymilvus/bulk_writer/bulk_writer.py:89: in append_row\n[2024-05-10T09:38:20.579Z]     self._verify_row(row)\n[2024-05-10T09:38:20.579Z] /usr/local/lib/python3.8/site-packages/pymilvus/bulk_writer/bulk_writer.py:198: in _verify_row\n[2024-05-10T09:38:20.579Z]     row[field.name], size = self._verify_json(row[field.name], field)\n[2024-05-10T09:38:20.579Z] /usr/local/lib/python3.8/site-packages/pymilvus/bulk_writer/bulk_writer.py:137: in _verify_json\n[2024-05-10T09:38:20.579Z]     self._throw(f\"Illegal JSON value for field '{field.name}', type mismatch\")\n[2024-05-10T09:38:20.579Z] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2024-05-10T09:38:20.579Z] \n[2024-05-10T09:38:20.579Z] self = <pymilvus.bulk_writer.remote_bulk_writer.RemoteBulkWriter object at 0x7f3a40438160>\n[2024-05-10T09:38:20.579Z] msg = \"Illegal JSON value for field 'json', type mismatch\"\n[2024-05-10T09:38:20.579Z] \n[2024-05-10T09:38:20.579Z]     def _throw(self, msg: str):\n[2024-05-10T09:38:20.579Z]         logger.error(msg)\n[2024-05-10T09:38:20.579Z] >       raise MilvusException(message=msg)\n[2024-05-10T09:38:20.579Z] E       pymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=Illegal JSON value for field 'json', type mismatch)>\n\nExpected Behavior\nnew json datatype can be added\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-05-11", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "zhuwenxing"}
{"issue_number": 2079, "issue_title": "[QUESTION]: Why does ORM-style API seem to outperform MilvusClient in database search operations?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI installed milvus (v2.4.1) standalone with docker compose following https://milvus.io/docs/install_standalone-docker-compose.md. and I tried to test milvus performance with mnist dataset , HNSW index and L2 distance.\nHowever, I found that the ORM-style API seems to outperform MilvusClient in database search operations.\nFirst, I followed the Hello-Milvus tutorial and hello_milvus.py in milvus-docs using MilvusClient.\nfrom pymilvus import MilvusClient, DataType\n\nclient = MilvusClient(\n    uri=\"http://localhost:19530\"\n)\n\n...\nBut, I found that the QPS was only around 4. Then, I tried to use ORM-style API following hello_milvus.py in pymilvus and the QPS was over 150 which is much higher than MilvusClient.\nfrom pymilvus import (\n    connections,\n    utility,\n    FieldSchema, CollectionSchema, DataType,\n    Collection,\n)\n\nconnections.connect(\"default\", host=\"localhost\", port=\"19530\")\n\ncollection_name = \"test\"\nif utility.has_collection(collection_name):\n    utility.drop_collection(collection_name)\n...\nI'm not sure why ORM-style API runs much faster than MilvusClient. Could you provide some insights on this?\nAnything else?\nNo response", "created_at": "2024-05-09", "closed_at": "2024-07-20", "labels": ["kind/question"], "State": "closed", "Author": "cococo2000"}
{"issue_number": 2078, "issue_title": "[Bug]: Spark Milvus Connector DataType.ARRAY", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I try to write data into a collection with a predefined schema, my spark job write aborts with:\nscala.MatchError: Array (of class io.milvus.grpc.DataType)\nWhen I try to write with spark-milvus connector without predefining a schema:\njava.lang.Exception: Unsupported data type array\nExpected Behavior\nPymilvus should be able to recognize array data types? Predefining schema should also work? Is this a bug in spark to milvus connector?\nSteps/Code To Reproduce behavior\nfields = [\n  FieldSchema(name=\"id\", is_primary=True, dtype=DataType.VARCHAR, max_length=100),\n\n  FieldSchema(name=\"countries\", dtype=DataType.ARRAY, element_type=DataType.VARCHAR, max_length=100, max_capacity=100),\n\n  # FieldSchema(name=\"vector_field\", dtype=DataType.FLOAT_VECTOR, dim=705),\n  FieldSchema(name=\"vector_field\", dtype=DataType.SPARSE_FLOAT_VECTOR),\n\n]\nschema = CollectionSchema(\n  fields,\n  description=\"collection\",\n  enable_dynamic_field=True\n)\n\ncollection = Collection(COLLECTION_NAME, schema)\n\ndf.write \\\n  .mode(\"append\") \\\n  .option(\"milvus.host\", MILVUS_HOST) \\\n  .option(\"milvus.port\", MILVUS_PORT) \\\n  .option(\"milvus.collection.name\", COLLECTION_NAME) \\\n  .option(\"milvus.collection.vectorField\", \"vector_field\") \\\n  .option(\"milvus.collection.vectorDim\", \"705\") \\\n  .option(\"milvus.collection.primaryKeyField\", \"id\") \\\n  .option(\"milvus.database.name\", \"default\") \\\n  .format(\"milvus\") \\\n  .save()\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): 2.4.1\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?", "created_at": "2024-05-09", "closed_at": "2024-05-09", "labels": ["kind/bug"], "State": "closed", "Author": "juanandreas"}
{"issue_number": 2072, "issue_title": "[Enhancement]: Raise exception if RPC error occurs", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nIf method of the client fail due to an RPC error, raise a MilvusException instead of freezing the excution.\nFor example, if i call .insert() on a collection does not exists:\ntry:\n    client = MilvusClient(\n        uri=\"...\",\n        db_name=\"...\",\n    )\nexcept Exception as ex:\n    logger.exception(ex)\n    raise Exception(\"[Error] Unable to connect to Milvus\")\ntry:\n    client.insert(\n        collection_name=\"not-existing-collection\",\n        data={...},\n    )\nexcept Exception as ex:\n    # Never enters here!\n    logger.exception(ex)\n    raise Exception(\"[Error] Unable to insert data to Milvus\")\nfinally:\n    client.close()\ni see in the logs:\nRPC error: [describe_collection], <DescribeCollectionException: (code=100, message=can't find collection collection not found[database=db_d15830d434f6fa2][collection=articles_preference])>, <Time:{'RPC start': '2024-05-06 12:54:56.493406', 'RPC error': '2024-05-06 12:54:56.519075'}>\nRPC error: [insert_rows], <DescribeCollectionException: (code=100, message=can't find collection collection not found[database=db_d15830d434f6fa2][collection=articles_preference])>, <Time:{'RPC start': '2024-05-06 12:54:56.493382', 'RPC error': '2024-05-06 12:54:56.519235'}>\n\nBut the execution does not stop, resulting in an infine loop (at least, more than 10 minutes).\nWhy is this needed?\nThis blocks the execution if an error occurs without possibility to intercept the error.\nAnything else?\nNo response", "created_at": "2024-05-07", "closed_at": null, "labels": ["kind/bug", "kind/enhancement"], "State": "open", "Author": "emanueledomingo"}
{"issue_number": 2071, "issue_title": "Can't run Flask+gevent with milvus connections.connect", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n`\nfrom flask import Flask\nfrom pymilvus import connections, Collection\napp = Flask(name)\nmilvus_config = {\n\"host\": \"127.0.0.1\",\n\"port\": \"19530\",\n\"cover_table\": \"trend_cover_cnnvec\"\n}\nconnections.connect(\nalias=\"default\",\nhost=milvus_config['host'],\nport=milvus_config['port']\n)\ncover_collection = Collection(milvus_config[\"cover_table\"])\n@app.route(\"/health\")\ndef health():\nreturn \"ok\"\nif name == 'main':\napp.run(host='0.0.0.0', port=5000)\n`\nExpected Behavior\n\u4e0d\u80fd\u542f\u52a8\ngunicorn -w 1 -b 0.0.0.0:5000 main:app -k gevent\n\u6b63\u5e38\u542f\u52a8\ngunicorn -w 1 -b 0.0.0.0:5000 main:app -k eventlet\nSteps/Code To Reproduce behavior\nrun service timeout\nEnvironment details\npymilvus==2.2.6\nAnything else?\nNo response", "created_at": "2024-05-07", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "sealzjh"}
{"issue_number": 2067, "issue_title": "[Enhancement]: Reduce pymilvus package size", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\n\nremove scipy as depenency\nmake depenencies of bulkwriter optional\n\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-05-07", "closed_at": "2024-05-14", "labels": ["kind/enhancement"], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 2063, "issue_title": "[Enhancement]: multi vector search using new MilvusClient SDK ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nmulti vector search using new MilvusClient SDK.\nWhy is this needed?\nCurrently two separate implementations are required to perform single and multi-vector search. Adding the multi-vector search API to MilvusClient will enable to query over two separate collections.\nAnything else?\nhttps://milvus.io/docs/multi-vector-search.md\n", "created_at": "2024-05-03", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "nevilshah235"}
{"issue_number": 2062, "issue_title": "[QUESTION]: ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nThis is a general question about pymilvus. Initially I thought that the power of vectorization was comparing vectors across all dimensions i.e. Euclidean distance.\nMy understanding is that the vectorization in pymilvus is done by create_index() on a per dimensional basis.\nIt seems like this is done on a per dimensional basis\nCan someone help clarify how this works?\nNo response", "created_at": "2024-05-02", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "Jabbar-Campbell"}
{"issue_number": 2061, "issue_title": "[Bug]: failed to flush collection ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nDuring insertion of embeddings in collection, I encounter the following error after a while.\nThe index type is: DiskANN\nERROR:pymilvus.decorators:RPC error: [flush], <MilvusException: (code=65535, message=failed to flush collection 448693028345084105: etcdserver: request timed out)>, <Time:{'RPC start': '2024-04-30 14:56:29.043540', 'RPC error': '2024-04-30 14:56:36.047145'}>\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Ubuntu: 23.04\n- Method of installation (Docker, or from source): Docker\n- Milvus version: milvus:v2.3.5 \n- Pymivus version: 2.3.4\n- Milvus configuration (Settings you made in `server_config.yaml`):   \n  gc:\n    interval: 600 #every 10 minutes \nI set the gc interval to every 10 minutes to limit the excessive usage of hard disk.\nAnything else?\nNo response", "created_at": "2024-04-30", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "rationalga"}
{"issue_number": 2058, "issue_title": "[QUESTION]: Search()\u4e2dlimit\u53c2\u6570\u65e0\u6cd5\u63a7\u5236\u8fd4\u56de\u6570\u91cf\u3002", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nSearch()\u4e2dlimit\u8bbe\u7f6e\u4e3a10\uff0c\u8fd4\u56de\u7ed3\u679c\u53ea\u6709\u4e00\u4e2a\u3002\n\n\nAnything else?\nNo response", "created_at": "2024-04-29", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "jeepmeng"}
{"issue_number": 2057, "issue_title": "[QUESTION]:  How to filter sparse vector field (metric_type=IP) \u5982\u4f55\u5bf9sparse field \u8fdb\u884crange\u67e5\u8be2?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\n\u73b0\u5728\u6709\u4e00\u4e2a\u95ee\u9898,\u5c31\u662f\u4f7f\u7528 search \u5bf9 sparse \u5b57\u6bb5\u8fdb\u884c\u641c\u7d22\u7684\u65f6\u5019, \u5982\u4f55\u8fc7\u6ee4\u6389\u67d0\u4e2a\u9608\u503c\u4e0b\u7684\u6570\u636e\u5462?\nsparse \u91c7\u7528\u7684\u5185\u79ef,\u4f46\u662fmilvus \u91cc\u9762\u4f7f\u7528 search \u53c2\u6570 {\"radius\":0.3, \"range_filter\": 1.0} \u597d\u50cf\u4e0d\u751f\u6548.\nAnything else?\nNo response", "created_at": "2024-04-28", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "weiminw"}
{"issue_number": 2056, "issue_title": "[Bug]: [milvus_client] Get interface returns empty when \"ids\" is a list of string for string primary key", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nGet interface returns empty when \"ids\" is a list of string for string primary key\n[2024-04-26 15:51:44 - DEBUG - ci_test]: (api_request)  : [MilvusClient.get] args: ['milvus_client_api_query_TIafVN0a', ['0'], None], kwargs: {'timeout': 120} (api_request.py:62)\n[2024-04-26 15:51:44 - DEBUG - ci_test]: (api_response) : []  (api_request.py:37)\n\nExpected Behavior\nReturn filtered entities successfully\nSteps/Code To Reproduce behavior\n@pytest.mark.tags(CaseLabel.L1)\n    def test_milvus_client_get_normal_string(self):\n        \"\"\"\n        target: test get interface for string field\n        method: create connection, collection, insert delete, and search\n        expected: search/query successfully without deleted data\n        \"\"\"\n        client = self._connect(enable_milvus_client_api=True)\n        collection_name = cf.gen_unique_str(prefix)\n        # 1. create collection\n        client_w.create_collection(client, collection_name, default_dim, id_type=\"string\", max_length=ct.default_length)\n        # 2. insert\n        rng = np.random.default_rng(seed=19530)\n        rows = [\n            {default_primary_key_field_name: str(i), default_vector_field_name: list(rng.random((1, default_dim))[0]),\n             default_float_field_name: i * 1.0, default_string_field_name: str(i)} for i in range(default_nb)]\n        client_w.insert(client, collection_name, rows)[0]\n        pks = [str(i) for i in range(default_nb)]\n        log.debug(pks)\n        # 3. get first primary key\n        first_pk_data = client_w.get(client, collection_name, ids=pks[0:1])[0]\n        assert len(first_pk_data) == len(pks[0:1])\n        first_pk_data_1 = client_w.get(client, collection_name, ids=\"0\")[0]\n        assert first_pk_data == first_pk_data_1\n\n        client_w.drop_collection(client, collection_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master latest\n- pymilvus version: 2.5.0rc17\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-26", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 2053, "issue_title": "[Bug]: hybrid search can only perform on default", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen you do hybrid search on database which name is not \"default\", it will tell you that your collection can not be found on default", "created_at": "2024-04-25", "closed_at": "2024-04-26", "labels": ["kind/bug"], "State": "closed", "Author": "liujinliu"}
{"issue_number": 2050, "issue_title": "[Bug]: Offset parameter did not take effect in hybrid search", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nsee milvus-io/milvus#32376\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-04-24", "closed_at": "2024-06-11", "labels": ["kind/bug"], "State": "closed", "Author": "czs007"}
{"issue_number": 2147, "issue_title": "[Bug]: /etc/hosts not supported when using uri", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n/etc/hosts not supported when using uri\n\nuri address is parsed through urllib.parse.parseurl().netloc which does not supports /etc/hosts\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): \n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-06-24", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "haorenfsa"}
{"issue_number": 2145, "issue_title": "[QUESTION]: How to set a token that never expires?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHow to set a token that never expires?\nI see lots of usecase that connect milvus use milvus api key, but I can't find how to set it in the pymilvus code.\nAnything else?\nNo response", "created_at": "2024-06-22", "closed_at": "2024-06-26", "labels": ["kind/question"], "State": "closed", "Author": "aboutmydreams"}
{"issue_number": 2143, "issue_title": "[Bug]: Failed to build docker image on apple sillicon", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nBuilding dockerfile on macos sonoma 14.5\nFROM python:3.12\nRUN pip install pymilvus==2.4.3\n\nFailed to build\n[+] Building 14.6s (5/5) FINISHED                                                                                                                                                                                                                               docker:desktop-linux\n => [internal] load build definition from Dockerfile                                                                                                                                                                                                                            0.0s\n => => transferring dockerfile: 86B                                                                                                                                                                                                                                             0.0s\n => [internal] load metadata for docker.io/library/python:3.12                                                                                                                                                                                                                  0.6s\n => [internal] load .dockerignore                                                                                                                                                                                                                                               0.0s\n => => transferring context: 1.04kB                                                                                                                                                                                                                                             0.0s\n => CACHED [1/2] FROM docker.io/library/python:3.12@sha256:4584ea46d313a10e849eb7c5ef36be14773418233516ceaa9e52a8ff7d5e35a5                                                                                                                                                     0.0s\n => ERROR [2/2] RUN pip install pymilvus==2.4.3                                                                                                                                                                                                                                14.0s\n------                                                                                                                                                                                                                                                                               \n > [2/2] RUN pip install pymilvus==2.4.3:                                                                                                                                                                                                                                            \n2.977 Collecting pymilvus==2.4.3                                                                                                                                                                                                                                                     \n3.684   Downloading pymilvus-2.4.3-py3-none-any.whl.metadata (5.3 kB)                                                                                                                                                                                                                \n6.317 Requirement already satisfied: setuptools>=67 in /usr/local/lib/python3.12/site-packages (from pymilvus==2.4.3) (70.0.0)                                                                                                                                                       \n9.489 Collecting grpcio<=1.63.0,>=1.49.1 (from pymilvus==2.4.3)                                                                                                                                                                                                                      \n9.614   Downloading grpcio-1.63.0-cp312-cp312-manylinux_2_17_aarch64.whl.metadata (3.2 kB)\n10.80 Collecting protobuf>=3.20.0 (from pymilvus==2.4.3)\n10.83   Downloading protobuf-5.27.1-cp38-abi3-manylinux2014_aarch64.whl.metadata (592 bytes)\n11.00 Collecting environs<=9.5.0 (from pymilvus==2.4.3)\n11.16   Downloading environs-9.5.0-py2.py3-none-any.whl.metadata (14 kB)\n11.85 Collecting ujson>=2.0.0 (from pymilvus==2.4.3)\n11.89   Downloading ujson-5.10.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (9.3 kB)\n12.93 Collecting pandas>=1.2.4 (from pymilvus==2.4.3)\n12.96   Downloading pandas-2.2.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (19 kB)\n13.44 INFO: pip is looking at multiple versions of pymilvus to determine which version is compatible with other requirements. This could take a while.\n13.45 ERROR: Could not find a version that satisfies the requirement milvus-lite<2.5.0,>=2.4.0 (from pymilvus) (from versions: none)\n13.45 ERROR: No matching distribution found for milvus-lite<2.5.0,>=2.4.0\n------\nDockerfile:2\n--------------------\n   1 |     FROM python:3.12\n   2 | >>> RUN pip install pymilvus==2.4.3\n   3 |     \n--------------------\nERROR: failed to solve: process \"/bin/sh -c pip install pymilvus==2.4.3\" did not complete successfully: exit code: 1\n\nView build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/pcrakpmt6c846qcj2jfdn09ix\nmake: *** [dev-build] Error 1\n\nExpected Behavior\nImage build successfully\nSteps/Code To Reproduce behavior\ndocker build .\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): M1 macos sonoma 14.5\n- Method of installation (Docker, or from source): docker\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-06-20", "closed_at": null, "labels": ["kind/bug", "kind/question"], "State": "open", "Author": "lyzohub"}
{"issue_number": 2135, "issue_title": "[QUESTION]: When will the new version be released, including localbulkwriter support for sparse_vector?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nWhen will the new version be released, including localbulkwriter support for sparse_vector? THX\nAnything else?\nNo response", "created_at": "2024-06-17", "closed_at": "2024-06-24", "labels": ["kind/question"], "State": "closed", "Author": "wangyiran33"}
{"issue_number": 2131, "issue_title": "[Bug]: Can not use poetry to install pymilvus >= 2.4", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ncreate a new environment using poetry, execute in terminal poetry add pymilvus=^2.4.3, it will raise the following error,\n\nExpected Behavior\nsuccessfully install pymilvus with poetry\nSteps/Code To Reproduce behavior\n1. create a new environment using poetry\n2. execute in terminal `poetry add pymilvus=^2.4.3`\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-06-14", "closed_at": "2024-06-19", "labels": ["kind/feature", "milvus-lite"], "State": "closed", "Author": "Raysilience"}
{"issue_number": 2129, "issue_title": "[FEATURE]: support group_size parameter for search_group_by", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nwhen doing search_group_by, users will hope to get k results from one search_result_group\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2024-06-13", "closed_at": null, "labels": ["kind/feature"], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 2126, "issue_title": "[Bug]: Range search not supported for GPU_IVF_PQ index", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen creating an index using GPU_IVF_PQ performing a range search over the index results in the error failed to range search: not implemented: RangeSearch not implemented.\nIf the index is IVF_PQ then the range search works. This distinction is not noted in the documentation and I don't really understand why it exists - indexing even a small amount of data without the GPU takes days compared to minutes.\nExpected Behavior\nRange search should work on GPU_IVF_PQ, or there should be a way to index on GPU and search on CPU.\nSteps/Code To Reproduce behavior\nimport pymilvus as pm\nimport numpy as np\nimport pandas as pd\nimport time\n\nROW_COUNT = 10_000\nTABLE_NAME = \"example\"\n\nif not pm.connections.has_connection(\"default\"):\n    pm.connections.connect(host=\"127.0.0.1\", port=\"19530\")\n\nif pm.utility.has_collection(TABLE_NAME):\n    pm.utility.drop_collection(TABLE_NAME)\n\nembeddings = np.random.rand(ROW_COUNT, 256)\ncollection = pm.Collection(\n    name=TABLE_NAME,\n    data=None,\n    schema=pm.CollectionSchema(fields=[\n        pm.FieldSchema(name=\"index\", dtype=pm.DataType.INT64, is_primary=True),\n        pm.FieldSchema(name=\"embedding\", dtype=pm.DataType.FLOAT_VECTOR, dim=256),\n    ]),\n)\nprint(pm.utility.list_collections())\n\nprint(\n    collection.insert(\n        [\n            list(range(ROW_COUNT)),\n            embeddings,\n        ]\n    )\n)\ncollection.flush()\n\nindex = collection.create_index(\n    field_name=\"embedding\",\n    index_params={\n        \"index_type\": \"GPU_IVF_PQ\", # If IVF_PQ then it works\n        \"metric_type\": \"L2\",\n        \"params\": {\"nlist\": 256, \"m\": 32},\n    },\n    index_name=\"example_embedding_idx\",\n)\n\nwhile True:\n    progress = pm.utility.index_building_progress(\n        collection_name=TABLE_NAME,\n        index_name=\"example_embedding_idx\",\n    )\n    print(progress)\n    if progress[\"indexed_rows\"] >= ROW_COUNT:\n        break\n    time.sleep(1.)\n\n\ncollection.flush()\ncollection.load()\n\niterator = collection.search_iterator(\n    embeddings[0][None],\n    anns_field=\"embedding\",\n    param={\n        \"metric_type\": \"L2\",\n        \"params\": {\n            \"radius\": 100.0,\n        },\n    },\n)\nprint(iterator.next().ids())\nEnvironment details\n- Ubuntu, 24GB GPU, 64GB RAM\n- docker-compose-gpu\n- v2.4.4\n- no changes were made to configuration\nAnything else?\nI found this page which appears to be the original proposal for range search in milvus and it indicates that IVF_PQ should be supported and there is no mention of GPU or CUDA on the page.", "created_at": "2024-06-12", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "bw-matthew"}
{"issue_number": 2122, "issue_title": "[Bug]: Inserted rows are never indexed", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nimport pymilvus as pm\nimport numpy as np\nimport pandas as pd\nimport time\n\nROW_COUNT = 256\nTABLE_NAME = \"example\"\n\nif not pm.connections.has_connection(\"default\"):\n    pm.connections.connect(host=\"127.0.0.1\", port=\"19530\")\n\nif pm.utility.has_collection(TABLE_NAME):\n    pm.utility.drop_collection(TABLE_NAME)\n\nembeddings = np.random.rand(ROW_COUNT, 256)\ncollection = pm.Collection(\n    name=TABLE_NAME,\n    data=None,\n    schema=pm.CollectionSchema(fields=[\n        pm.FieldSchema(name=\"index\", dtype=pm.DataType.INT64, is_primary=True),\n        pm.FieldSchema(name=\"embedding\", dtype=pm.DataType.FLOAT_VECTOR, dim=256),\n    ]),\n)\n\nprint(\n    collection.insert(\n        pd.DataFrame({\"index\": range(ROW_COUNT), \"embedding\": embeddings.tolist()})\n    )\n)\n\nindex = collection.create_index(\n    field_name=\"embedding\",\n    index_params={\n        \"index_type\": \"GPU_IVF_PQ\",\n        \"metric_type\": \"L2\",\n        \"params\": {\"nlist\": 16, \"m\": 32},\n    },\n    index_name=\"example_embedding_idx\",\n)\n\nwhile True:\n    progress = pm.utility.index_building_progress(TABLE_NAME, \"example_embedding_idx\")\n    print(progress)\n    if progress[\"indexed_rows\"] >= ROW_COUNT:\n        break\n    time.sleep(1.)\nThis produces the output:\n(insert count: 256, delete count: 0, upsert count: 0, timestamp: 450398679519985669, success count: 256, err count: 0, cost: 0)\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n{'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0}\n...\n\nThe inserted rows never become available. This is using the docker-compose gpu setup, version v2.4.4.\nExpected Behavior\nWhen I insert rows they should be available.\nSteps/Code To Reproduce behavior\nAlready provided\nEnvironment details\n- Ubuntu, 24GB GPU, 64GB RAM\n- docker-compose-gpu\n- v2.4.4\n- no changes were made to configuration\nAnything else?\nThe database already has another table that has ~12m rows in which worked fine. I was doing this to create a minimal working example of a bug and I can't even insert some rows?", "created_at": "2024-06-11", "closed_at": "2024-06-12", "labels": ["kind/question"], "State": "closed", "Author": "bw-matthew"}
{"issue_number": 2117, "issue_title": "[QUESTION]: Why is there no 'list_partitions' method in version 2.3.4", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nWhy is there no 'list_partitions' method in version 2.3.4?But the guide on the official website includes this method.\n\n\n\nAnything else?\nNo response", "created_at": "2024-06-05", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "tureman312"}
{"issue_number": 2116, "issue_title": "[QUESTION]: Why is there no 'list_partitions' method in version 2.3.4", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nWhy is there no 'list_partitions' method in version 2.3.4?But the guide on the official website includes this method.\n\n\n\nAnything else?\nNo response", "created_at": "2024-06-05", "closed_at": "2024-06-05", "labels": ["kind/question"], "State": "closed", "Author": "tureman312"}
{"issue_number": 2113, "issue_title": "[Bug]: Iterator not handle OR expr operator correctly", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen expr has OR operator, like a>8 || b < 10, query iterator will wrongly handle the priority of operator because appending AND operator in the tail\nExpected Behavior\nrelated: milvus-io/milvus#33594\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-06-04", "closed_at": "2024-06-11", "labels": ["kind/bug"], "State": "closed", "Author": "MrPresent-Han"}
{"issue_number": 2110, "issue_title": "[Bug]: CollectionSchema does not support num_partitions when creating schemas with partition_key_field", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nAccording to this documentation: https://milvus.io/docs/use-partition-key.md, we can define num_partitions as an argument when creating a schema.\nschema = MilvusClient.create_schema(\n    auto_id=False,\n    enable_dynamic_field=True,\n    # highlight-next-line\n    partition_key_field=\"color\",\n    num_partitions=64 # Number of partitions. Defaults to 64.\n)\n\nI tried to assign a different value to num_partitions but keep seeing 64 partitions when running a\nclient.list_partition()\n\nLooking at the source code for CollectionSchema\nclass CollectionSchema:\n    def __init__(self, fields: List, description: str = \"\", **kwargs):\n        self._kwargs = copy.deepcopy(kwargs)\n        self._fields = []\n        self._description = description\n        # if \"enable_dynamic_field\" is not in kwargs, we keep None here\n        self._enable_dynamic_field = self._kwargs.get(\"enable_dynamic_field\", None)\n        self._primary_field = None\n        self._partition_key_field = None\n        self._clustering_key_field = None\n\nThere is no field for num_partitions. Is this a bug?\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\nNo response\nAnything else?\nNo response", "created_at": "2024-06-03", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "juanandreas"}
{"issue_number": 2108, "issue_title": "\u8bf7\u95ee\u5982\u4f55\u5224\u65ad\u6570\u636e\u6709\u6ca1\u6709load\u5230\u5185\u5b58", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nNo response\nAnything else?\nNo response", "created_at": "2024-05-30", "closed_at": "2024-05-30", "labels": ["kind/question"], "State": "closed", "Author": "zhongJY1998"}
{"issue_number": 2106, "issue_title": "\u5220\u9664\u6570\u636e\u540e,\u518d\u6b21\u67e5\u8be2,\u5b9e\u4f53\u6ca1\u6709\u53ca\u65f6\u66f4\u65b0", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\n\u5220\u9664\u6570\u636e\u540e,\u518d\u6b21\u67e5\u8be2,\u5b9e\u4f53\u6ca1\u6709\u53ca\u65f6\u66f4\u65b0,\nAnything else?\n\u6211\u7684\u4ee3\u7801\u5982\u4e0b\ndef _delete_data(self, data, collection_name):\ntry:\n    collection = Collection(collection_name) \n    # \u5982\u679c\u4e3a\u7a7a\u5219\u4e0d\u8fdb\u884c\u5220\u9664\u64cd\u4f5c, \u56e0\u4e3a\u4ed6\u8fd8\u6ca1\u6709\u52a0\u8f7d\u5230\u5185\u5b58\u4e0a            \n    if not collection.num_entities:\n        return\n    \n    for info in data:\n        assert isinstance(info, dict), \"input format error, params must is dict.\"\n        for k, v in info.items():\n            delete_expr = f\"{k} in [\\'{v}\\']\"\n            status = collection.delete(expr=delete_expr)\n            logging.info(f\"delete info: {status}\")\n\n    logging.info(f\"from collection: {collection_name} delete data successful.\")\n    logging.info(f\"Beforre delete num_entities: {collection.num_entities}\")\n    def wait_for_compaction(interval=0.5):\n        collection.compact()\n        while True:\n            state = collection.get_compaction_state()\n            # ref: https://github.com/milvus-io/pymilvus/blob/master/pymilvus/client/types.py\n            if state.state.Completed == 0:\n                logging.info(\"Compaction failed.\")\n                break\n            elif state.state.Completed == 1:\n                logging.info(\"Compaction in progress...\")                        \n                time.sleep(interval)\n            elif state.state.Completed == 2: \n                logging.info(\"Compaction completed.\")\n                break\n            else:\n                raise NotImplementedError\n        collection.flush()\n\n    wait_for_compaction()\n    collection.fush()\n    collection.load()\n    utility.wait_for_loading_complete(collection_name=collection_name)\n    logging.info(f\"After delete num_entities: {collection.num_entities}\")\nexcept Exception as err:\n    logging.error(f\"from collection: {collection_name} delete data failed.\")\n    logging.error(traceback.format_exc())\n\n\u4e3a\u4ec0\u4e48\u6211\u6253\u5370\u7684logging.info(f\"Beforre delete num_entities: {collection.num_entities}\") \u548c logging.info(f\"After delete num_entities: {collection.num_entities}\") \u7ed3\u679c\u8fd8\u662f\u4e00\u6837\u989d, \u6709\u4ec0\u4e48\u529e\u6cd5\u89e3\u51b3\u5417?", "created_at": "2024-05-29", "closed_at": "2024-05-30", "labels": ["kind/question"], "State": "closed", "Author": "zhongJY1998"}
{"issue_number": 2198, "issue_title": "[Bug]: async is not working with collection.search", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ncollection.search with _async=True  is not rea\nExpected Behavior\nExpected to work asynchronous.\nSteps/Code To Reproduce behavior\nMilvusDB.connect_to_milvus()\n  collection = Collection(name=collection_name)\n\n  loop = asyncio.get_event_loop()\n  query_vector = await loop.run_in_executor(None, text_to_vector,  user_input, embeddings_model)\n\n  search_future = collection.search(data=[query_vector], anns_field=\"vector\", param=search_params,\n                              limit=search_params[\"limit\"], _async=True)\n\n  results = await loop.run_in_executor(None, search_future.result)\n  print(results)\n  print(type(results))\n\n  ids = []\n  for result in results:\n      for hit in result:\n          ids.append(hit.id)\n\n  documents = await loop.run_in_executor(None, fetch_documents_by_ids, collection, ids)\n  print(type(documents))\n  print(len(documents))\n\nThis code works but is not asynchronous.\nsearch_future = collection.search(data=[query_vector], anns_field=\"vector\", param=search_params,\n                              limit=search_params[\"limit\"], _async=True)\n\nresults = await loop.run_in_executor(None, search_future.result)\n\n\nthis piece is definetly taking most time, so problem likely here.\nEverything is blocked, even menu not working.\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS: Win11, Ubuntu 22.04, CPU: i9-990k, GPU-1080ti, Memory-64GB):\n- Method of installation Docker\n- Milvus version (v2.4.0, or v2.4.4):\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\nAnything else?\nNo response", "created_at": "2024-07-24", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Tolkoton"}
{"issue_number": 2197, "issue_title": "[Bug]: VRAM Memory leakage embedding documents", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen using the encode docuements function to create vectors, used memory is increased and does not decrease, resulting in a CUDA out of memory error when it tries to allocate memory.\n`torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 11.88 GiB. GPU\n\nExpected Behavior\nAm i missing something or should the memory usage decrease after embeddign the neccesary docuemnts and inserting them in the database\nSteps/Code To Reproduce behavior\nThis is ran once at initialization\n`embedding_fn = BGEM3EmbeddingFunction(device=\"cuda\")`\n\nEncoding of the vectors increases memory usage \n\n        print(\"Start embedding vectors\")\n        vectors = self.embedding_fn.encode_documents([i[\"text\"] for i in docs])   #<- This line increases VRAM memory usage\n\n        data = [\n\n            docs[i] | {\"id\": i, \"vector\": vectors[\"dense\"][i]} for i in range(len(docs))\n\n        ]\n        print(\"Inserting data\")\n        self.client.insert(self.db_collection_name, data=data)\n        print(\"end\")\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n    Ran on Windows 11 machine using NVIDIA RTX A1000 6GB \n\n- Milvus version (v0.3.1, or v0.4.0):\n    pymilvus version v2.4.4\n    pytorch version 2.3.1+cu121\n\nAnything else?\nNo response", "created_at": "2024-07-24", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "LexBosch"}
{"issue_number": 2195, "issue_title": "[Bug]: remove limitation clustering key can not be primary key", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nremove limitation clustering key can not be primary key\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-07-23", "closed_at": "2024-07-29", "labels": ["kind/bug"], "State": "closed", "Author": "wayblink"}
{"issue_number": 2193, "issue_title": "[Bug]: Flask debug mode and Milvus Local appear to conflict", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I run PyMilvus with Milvus Local in a Python Flask application with debug set to True, Milvus fails saying it \"Can't start local milvus\" because the file is being used by another program.\nIt's as if FLASK debug is locking the file or perhaps there is some other odd issue\nStack trace:\nOpen demo.db failed, the file has been opened by another program\nStart local milvus failed\nFailed to create new connection using: c767688b751d4e47b68295a896cca39a\nTraceback (most recent call last):\n....\nFile \"/home/jason/.local/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 58, in init\nself._using = self._create_connection(\nFile \"/home/jason/.local/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 651, in _create_connection\nraise ex from ex\nFile \"/home/jason/.local/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 648, in _create_connection\nconnections.connect(using, user, password, db_name, token, uri=uri, **kwargs)\nFile \"/home/jason/.local/lib/python3.8/site-packages/pymilvus/orm/connections.py\", line 382, in connect\nraise ConnectionConfigException(message=\"Open local milvus failed\")\npymilvus.exceptions.ConnectionConfigException: <ConnectionConfigException: (code=1, message=Open local milvus failed)>\nExpected Behavior\nI see no reason why this shouldn't work and it implies there might be a larger issue\nSteps/Code To Reproduce behavior\nCreate a simple flask app and load a local milvus file.  Set debug to true.\n\napp.run(debug=True)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-07-22", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "speechwrecko"}
{"issue_number": 2189, "issue_title": "[QUESTION]: Can we have different weights for each collection while doing a similarity search?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI had one other use case that I am facing challenges on, Suppose we have \"n\" collections, I want to do a single similarity search on these two collections on a common vector field. Now I want to give weights to each of these collections which will bring affect to the search results. Is there anything for this type of scenarios?\nAnything else?\nEven if it is not a different collection, Can i get the search results on a based on weights given to different values of a\nparticular metadata column?", "created_at": "2024-07-22", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "jayitsaha"}
{"issue_number": 2186, "issue_title": "[Bug]: ParamError(message=f\"`{param_name}` value {param_value} is illegal\")", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nVersion:\n\npymilvus = \"2.3.7\"\nmilvusdb/milvus:v2.3.12\npython 3.11\n\nCall search func\ntype(self.client)\n<class 'pymilvus.milvus_client.milvus_client.MilvusClient'>\n\n\nself.client.search(\n                collection_name=collection_name,\n                data=data,\n                limit=1,\n                search_params={'metric_type': 'COSINE', 'params': {}},\n                output_fields=[\"title\"],\n            )\n\nPrameters\nThe collection is https://huggingface.co/datasets/aisuko/squad01 and already loaded into db\nThe data was embedded by all-MiniLM-L6-v2-Q4_K_M-v2 with llamacpp\ntype(data)\n<class 'list'>\n\nlen(data)\n384\n\n[-0.08030342310667038, 0.043709803372621536, 0.023311153054237366, 0.061636801809072495, -0.02462625876069069, -0.04230336472392082, 0.04433322697877884, 0.009124399162828922, -0.06706368178129196, -0.038405753672122955, -0.014389004558324814, 0.020845066756010056, -0.0023763924837112427, -0.04066140577197075, 0.06466610729694366, 0.05071906000375748, -0.0273754820227623, -0.07625275105237961, -0.11898423731327057, -0.03035646677017212, 0.012265350669622421, 0.02654247172176838, -0.025905827060341835, 0.022673850879073143, -0.027385687455534935, -0.057196713984012604, 0.03876828774809837, 0.10553334653377533, -0.030128363519906998, -0.029776321724057198, 0.07131573557853699, 0.03871007636189461, 0.03277910128235817, 0.0009250087896361947, 0.005922846030443907, 0.04431159421801567, -0.07096632570028305, -0.11299294978380203, 0.012124741449952126, 0.013718447647988796, -0.009844995103776455, -0.015965092927217484, 0.01811969466507435, 0.030900735408067703, 0.047109752893447876, -0.0348985455930233, 0.030376503244042397, 0.01595788076519966, 0.026883305981755257, 0.004655573517084122, -0.0832400918006897, -0.06804141402244568, 0.017455052584409714, -0.001856437767855823, 0.09835010766983032, 0.02270224317908287, -0.03547259047627449, -0.040822651237249374, 0.06441181153059006, -0.07350607216358185, -0.07795514166355133, 0.010738045908510685, -0.1477777659893036, 0.0011415620101615787, 0.0010065996320918202, 0.003329494735226035, -0.04642697051167488, -0.039426423609256744, -0.05151089280843735, -0.05540549382567406, -0.005903964396566153, -0.0018583161290735006, -0.023074671626091003, -0.04414256289601326, 0.014688513241708279, -0.04244423657655716, 0.03466881811618805, 0.05773846060037613, 0.05630461871623993, 0.03296094015240669, 0.030510200187563896, -0.03797301650047302, -0.01796729862689972, 0.0002520764246582985, -0.004307203460484743, -0.03182218223810196, 0.036405645310878754, -0.007304596249014139, -0.07108353823423386, 0.011704175733029842, -0.0986185297369957, 0.04723275825381279, 0.03283626586198807, -0.039868228137493134, -0.07017113268375397, -0.07374840974807739, 0.06561912596225739, -0.00996195524930954, -0.12473852932453156, 0.2818124294281006, 0.041987620294094086, 0.03925170749425888, 0.04790731519460678, 0.11177301406860352, -0.029351770877838135, 0.050804927945137024, -0.054384585469961166, 0.08193620294332504, -0.00829864852130413, 0.013915261253714561, 0.02988305501639843, -0.0041419509798288345, -0.011906835250556469, -0.027514507994055748, 0.05788016691803932, 0.0636240541934967, -0.003117858897894621, 0.005763033404946327, 2.0241061065462418e-05, -0.08710780739784241, -0.01690603792667389, -0.03699155151844025, 0.05164724215865135, -0.03847760334610939, -0.016070468351244926, -0.01181456446647644, 0.02080470137298107, -5.0548420729647845e-33, 0.062046539038419724, -0.02883637323975563, 0.0405459962785244, 0.08054015785455704, -0.0611826591193676, -0.040596749633550644, -0.01746477372944355, -0.05301770195364952, 0.007787523791193962, 0.01567230559885502, 0.012553893961012363, -0.009090384468436241, -0.032560717314481735, 0.009361554868519306, -0.028571635484695435, 0.020139161497354507, 0.03605109825730324, 0.06767576932907104, 0.044370099902153015, 0.03420327976346016, -0.07642324268817902, -0.02449253387749195, 0.02543734759092331, 0.05517708510160446, 0.03166259825229645, -0.031006881967186928, -0.00642265984788537, -0.13241633772850037, 0.05232410877943039, 0.05524706095457077, 0.03460387885570526, 0.008581229485571384, -0.001912567880935967, 0.022720716893672943, -0.009001939557492733, -0.00887983851134777, 0.02624710090458393, -0.029759060591459274, -0.05382341146469116, 0.03406405821442604, -0.028050264343619347, 0.02746213972568512, 0.07110422104597092, -0.03145115077495575, 0.016654087230563164, 0.039212558418512344, 0.016652509570121765, 0.027361487969756126, 0.021040016785264015, 0.027333658188581467, -0.04577265679836273, 0.007429758086800575, -0.14295515418052673, 0.005706381984055042, -0.011938096955418587, -0.030629802495241165, -0.005725921131670475, -0.07977204024791718, 0.09892041981220245, 0.03488742187619209, 0.03171917051076889, 0.07933807373046875, -0.04105313867330551, 0.03429485857486725, -0.1669328361749649, -0.020008634775877, 0.04941055178642273, -0.04316525161266327, 0.12447719275951385, -0.0015321268001571298, -0.04906245321035385, -0.01782805286347866, 0.03281320258975029, 0.047083016484975815, -0.027216080576181412, 0.05122257024049759, 0.05526893213391304, 0.019974179565906525, 0.02165450155735016, -0.019255662336945534, -0.008493354544043541, 0.02418082393705845, 0.00660307751968503, 0.014129983261227608, 0.052225735038518906, -0.0048081884160637856, -0.01780034601688385, -0.06994614750146866, -0.08806463330984116, -0.03546403348445892, -0.058274123817682266, 0.029267309233546257, 0.07794006168842316, -0.0332341194152832, 0.011125876568257809, 4.1898075351381714e-33, 0.09096572548151016, 0.07326284795999527, -0.054481152445077896, -0.025168748572468758, -0.04473791643977165, -0.021742668002843857, -0.026400085538625717, 0.1007331982254982, -0.08468447625637054, -0.020300287753343582, 0.06126052513718605, -0.04366593062877655, 0.06740699708461761, 0.003777198027819395, 0.045975279062986374, 0.017658531665802002, 0.08107316493988037, 0.03854062780737877, -0.0631619542837143, 0.010630518198013306, -0.028601963073015213, -0.026981119066476822, -0.10078942775726318, -0.05814353749155998, -0.006181909237056971, 0.0016664944123476744, 0.010822802782058716, 0.0688934251666069, -0.06896251440048218, -0.03055981546640396, 0.06263557076454163, -0.023622095584869385, 0.0015409678453579545, 0.05393623933196068, 0.003047709818929434, 0.10560861229896545, -0.00738071883097291, -0.08124661445617676, 0.021457411348819733, -0.09011523425579071, -0.04941912740468979, 0.018761593848466873, -0.04437488690018654, 0.08539202064275742, -0.011770457960665226, -0.022825533524155617, 0.012618494220077991, 0.04227345809340477, -0.07995878159999847, 0.00916395802050829, -0.08346056193113327, -0.03174120932817459, 0.029305320233106613, -0.013352415524423122, -0.05835771933197975, 0.051821764558553696, 0.009819326922297478, 0.03246293216943741, 0.02493753470480442, 0.004271079320460558, 0.014446265064179897, 0.04816770926117897, -0.0023329209070652723, 0.10409827530384064, 0.02817576192319393, 0.04067986086010933, -0.03169693797826767, -0.00023997999960556626, -0.0100809121504426, -0.05519092455506325, 0.03582356125116348, -0.012799992226064205, 0.041678283363580704, 0.010457134805619717, -0.005260821897536516, -0.01178808230906725, 0.0065449741668999195, 0.04993707686662674, 0.017542727291584015, 0.055302008986473083, 0.045401882380247116, 0.003009019885212183, -0.03395354747772217, 0.04466411471366882, 0.012508200481534004, 0.018195761367678642, 0.03634116053581238, 0.01611691154539585, -0.010413494892418385, -0.03416881710290909, 0.013624469749629498, 0.07530821114778519, 0.062749482691288, -0.03691162168979645, 0.021426433697342873, -1.461032628213843e-08, 0.020065469667315483, -0.023415641859173775, 0.05715366080403328, 0.07777094095945358, 0.040501996874809265, 0.05285703390836716, -0.016478199511766434, -0.00670474162325263, -0.025943366810679436, 0.026450278237462044, 0.053297095000743866, 0.030218468979001045, -0.03483549505472183, -0.06814511865377426, 0.051212579011917114, -0.01293485052883625, -0.04376370832324028, 0.035718511790037155, -0.06033807992935181, -0.12238940596580505, 0.04478050023317337, 0.024376917630434036, 0.007466403301805258, -0.04280626401305199, 8.560963033232838e-05, -0.060542814433574677, -0.04574130102992058, -0.013110274448990822, 0.016729846596717834, -0.0762593224644661, -0.01323107723146677, 0.18880154192447662, -0.0037483961787074804, -0.00634611165151, 0.030887002125382423, -0.014737100340425968, -0.0013719091657549143, -0.00751944025978446, 0.07017773389816284, -0.026281632483005524, -0.03886610269546509, -0.056419145315885544, -0.04946029558777809, -0.03637272119522095, -0.026380140334367752, 0.04938007518649101, -0.011852988973259926, -0.0473242849111557, 0.042116425931453705, -0.05753810331225395, -0.03845267370343208, -0.03450026363134384, 0.05102843418717384, 0.07308649271726608, 0.035300493240356445, 0.055444180965423584, 0.024308452382683754, 0.012100201100111008, 0.007396284956485033, -0.01969648152589798, 0.15586209297180176, 0.071518175303936, 0.0245918408036232, 0.02487180568277836]\n\nThe whole error message\nFailed to search collection: aisuko_squad01\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 319, in search\n    raise ex from ex\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 305, in search\n    res = conn.search(\n          ^^^^^^^^^^^^\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 140, in handler\n    raise e from e\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 136, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 175, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 115, in handler\n    raise e from e\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 86, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 752, in search\n    check_pass_param(\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/client/check.py\", line 353, in check_pass_param\n    checker.check(key, value)\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/client/check.py\", line 339, in check\n    _raise_param_error(key, value)\n  File \"/root/.cache/pypoetry/virtualenvs/kirin-513bGCIV-py3.11/lib/python3.11/site-packages/pymilvus/client/check.py\", line 231, in _raise_param_error\n    raise ParamError(message=f\"`{param_name}` value {param_value} is illegal\")\npymilvus.exceptions.ParamError: <ParamError: (code=1, message=`search_data` value [-0.08030342310667038, 0.043709803372621536, 0.023311153054237366, 0.061636801809072495, -0.02462625876069069, -0.04230336472392082, 0.04433322697877884, 0.009124399162828922, -0.06706368178129196, -0.038405753672122955, -0.014389004558324814, 0.020845066756010056, -0.0023763924837112427, -0.04066140577197075, 0.06466610729694366, 0.05071906000375748, -0.0273754820227623, -0.07625275105237961, -0.11898423731327057, -0.03035646677017212, 0.012265350669622421, 0.02654247172176838, -0.025905827060341835, 0.022673850879073143, -0.027385687455534935, -0.057196713984012604, 0.03876828774809837, 0.10553334653377533, -0.030128363519906998, -0.029776321724057198, 0.07131573557853699, 0.03871007636189461, 0.03277910128235817, 0.0009250087896361947, 0.005922846030443907, 0.04431159421801567, -0.07096632570028305, -0.11299294978380203, 0.012124741449952126, 0.013718447647988796, -0.009844995103776455, -0.015965092927217484, 0.01811969466507435, 0.030900735408067703, 0.047109752893447876, -0.0348985455930233, 0.030376503244042397, 0.01595788076519966, 0.026883305981755257, 0.004655573517084122, -0.0832400918006897, -0.06804141402244568, 0.017455052584409714, -0.001856437767855823, 0.09835010766983032, 0.02270224317908287, -0.03547259047627449, -0.040822651237249374, 0.06441181153059006, -0.07350607216358185, -0.07795514166355133, 0.010738045908510685, -0.1477777659893036, 0.0011415620101615787, 0.0010065996320918202, 0.003329494735226035, -0.04642697051167488, -0.039426423609256744, -0.05151089280843735, -0.05540549382567406, -0.005903964396566153, -0.0018583161290735006, -0.023074671626091003, -0.04414256289601326, 0.014688513241708279, -0.04244423657655716, 0.03466881811618805, 0.05773846060037613, 0.05630461871623993, 0.03296094015240669, 0.030510200187563896, -0.03797301650047302, -0.01796729862689972, 0.0002520764246582985, -0.004307203460484743, -0.03182218223810196, 0.036405645310878754, -0.007304596249014139, -0.07108353823423386, 0.011704175733029842, -0.0986185297369957, 0.04723275825381279, 0.03283626586198807, -0.039868228137493134, -0.07017113268375397, -0.07374840974807739, 0.06561912596225739, -0.00996195524930954, -0.12473852932453156, 0.2818124294281006, 0.041987620294094086, 0.03925170749425888, 0.04790731519460678, 0.11177301406860352, -0.029351770877838135, 0.050804927945137024, -0.054384585469961166, 0.08193620294332504, -0.00829864852130413, 0.013915261253714561, 0.02988305501639843, -0.0041419509798288345, -0.011906835250556469, -0.027514507994055748, 0.05788016691803932, 0.0636240541934967, -0.003117858897894621, 0.005763033404946327, 2.0241061065462418e-05, -0.08710780739784241, -0.01690603792667389, -0.03699155151844025, 0.05164724215865135, -0.03847760334610939, -0.016070468351244926, -0.01181456446647644, 0.02080470137298107, -5.0548420729647845e-33, 0.062046539038419724, -0.02883637323975563, 0.0405459962785244, 0.08054015785455704, -0.0611826591193676, -0.040596749633550644, -0.01746477372944355, -0.05301770195364952, 0.007787523791193962, 0.01567230559885502, 0.012553893961012363, -0.009090384468436241, -0.032560717314481735, 0.009361554868519306, -0.028571635484695435, 0.020139161497354507, 0.03605109825730324, 0.06767576932907104, 0.044370099902153015, 0.03420327976346016, -0.07642324268817902, -0.02449253387749195, 0.02543734759092331, 0.05517708510160446, 0.03166259825229645, -0.031006881967186928, -0.00642265984788537, -0.13241633772850037, 0.05232410877943039, 0.05524706095457077, 0.03460387885570526, 0.008581229485571384, -0.001912567880935967, 0.022720716893672943, -0.009001939557492733, -0.00887983851134777, 0.02624710090458393, -0.029759060591459274, -0.05382341146469116, 0.03406405821442604, -0.028050264343619347, 0.02746213972568512, 0.07110422104597092, -0.03145115077495575, 0.016654087230563164, 0.039212558418512344, 0.016652509570121765, 0.027361487969756126, 0.021040016785264015, 0.027333658188581467, -0.04577265679836273, 0.007429758086800575, -0.14295515418052673, 0.005706381984055042, -0.011938096955418587, -0.030629802495241165, -0.005725921131670475, -0.07977204024791718, 0.09892041981220245, 0.03488742187619209, 0.03171917051076889, 0.07933807373046875, -0.04105313867330551, 0.03429485857486725, -0.1669328361749649, -0.020008634775877, 0.04941055178642273, -0.04316525161266327, 0.12447719275951385, -0.0015321268001571298, -0.04906245321035385, -0.01782805286347866, 0.03281320258975029, 0.047083016484975815, -0.027216080576181412, 0.05122257024049759, 0.05526893213391304, 0.019974179565906525, 0.02165450155735016, -0.019255662336945534, -0.008493354544043541, 0.02418082393705845, 0.00660307751968503, 0.014129983261227608, 0.052225735038518906, -0.0048081884160637856, -0.01780034601688385, -0.06994614750146866, -0.08806463330984116, -0.03546403348445892, -0.058274123817682266, 0.029267309233546257, 0.07794006168842316, -0.0332341194152832, 0.011125876568257809, 4.1898075351381714e-33, 0.09096572548151016, 0.07326284795999527, -0.054481152445077896, -0.025168748572468758, -0.04473791643977165, -0.021742668002843857, -0.026400085538625717, 0.1007331982254982, -0.08468447625637054, -0.020300287753343582, 0.06126052513718605, -0.04366593062877655, 0.06740699708461761, 0.003777198027819395, 0.045975279062986374, 0.017658531665802002, 0.08107316493988037, 0.03854062780737877, -0.0631619542837143, 0.010630518198013306, -0.028601963073015213, -0.026981119066476822, -0.10078942775726318, -0.05814353749155998, -0.006181909237056971, 0.0016664944123476744, 0.010822802782058716, 0.0688934251666069, -0.06896251440048218, -0.03055981546640396, 0.06263557076454163, -0.023622095584869385, 0.0015409678453579545, 0.05393623933196068, 0.003047709818929434, 0.10560861229896545, -0.00738071883097291, -0.08124661445617676, 0.021457411348819733, -0.09011523425579071, -0.04941912740468979, 0.018761593848466873, -0.04437488690018654, 0.08539202064275742, -0.011770457960665226, -0.022825533524155617, 0.012618494220077991, 0.04227345809340477, -0.07995878159999847, 0.00916395802050829, -0.08346056193113327, -0.03174120932817459, 0.029305320233106613, -0.013352415524423122, -0.05835771933197975, 0.051821764558553696, 0.009819326922297478, 0.03246293216943741, 0.02493753470480442, 0.004271079320460558, 0.014446265064179897, 0.04816770926117897, -0.0023329209070652723, 0.10409827530384064, 0.02817576192319393, 0.04067986086010933, -0.03169693797826767, -0.00023997999960556626, -0.0100809121504426, -0.05519092455506325, 0.03582356125116348, -0.012799992226064205, 0.041678283363580704, 0.010457134805619717, -0.005260821897536516, -0.01178808230906725, 0.0065449741668999195, 0.04993707686662674, 0.017542727291584015, 0.055302008986473083, 0.045401882380247116, 0.003009019885212183, -0.03395354747772217, 0.04466411471366882, 0.012508200481534004, 0.018195761367678642, 0.03634116053581238, 0.01611691154539585, -0.010413494892418385, -0.03416881710290909, 0.013624469749629498, 0.07530821114778519, 0.062749482691288, -0.03691162168979645, 0.021426433697342873, -1.461032628213843e-08, 0.020065469667315483, -0.023415641859173775, 0.05715366080403328, 0.07777094095945358, 0.040501996874809265, 0.05285703390836716, -0.016478199511766434, -0.00670474162325263, -0.025943366810679436, 0.026450278237462044, 0.053297095000743866, 0.030218468979001045, -0.03483549505472183, -0.06814511865377426, 0.051212579011917114, -0.01293485052883625, -0.04376370832324028, 0.035718511790037155, -0.06033807992935181, -0.12238940596580505, 0.04478050023317337, 0.024376917630434036, 0.007466403301805258, -0.04280626401305199, 8.560963033232838e-05, -0.060542814433574677, -0.04574130102992058, -0.013110274448990822, 0.016729846596717834, -0.0762593224644661, -0.01323107723146677, 0.18880154192447662, -0.0037483961787074804, -0.00634611165151, 0.030887002125382423, -0.014737100340425968, -0.0013719091657549143, -0.00751944025978446, 0.07017773389816284, -0.026281632483005524, -0.03886610269546509, -0.056419145315885544, -0.04946029558777809, -0.03637272119522095, -0.026380140334367752, 0.04938007518649101, -0.011852988973259926, -0.0473242849111557, 0.042116425931453705, -0.05753810331225395, -0.03845267370343208, -0.03450026363134384, 0.05102843418717384, 0.07308649271726608, 0.035300493240356445, 0.055444180965423584, 0.024308452382683754, 0.012100201100111008, 0.007396284956485033, -0.01969648152589798, 0.15586209297180176, 0.071518175303936, 0.0245918408036232, 0.02487180568277836] is illegal)>\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n\nAWS Ubuntu22.04 8CPUs 16 memory no GPU\n\n- Method of installation (Docker, or from source):\n\nClient:\n Version:    24.0.7\n Context:    default\n Debug Mode: false\n Plugins:\n  compose: Docker Compose (Docker Inc.)\n    Version:  2.24.6+ds1-0ubuntu1~22.04.1\n    Path:     /usr/libexec/docker/cli-plugins/docker-compose\n\nServer:\n Containers: 9\n  Running: 9\n  Paused: 0\n  Stopped: 0\n Images: 14\n Server Version: 24.0.7\n Storage Driver: overlay2\n  Backing Filesystem: extfs\n  Supports d_type: true\n  Using metacopy: false\n  Native Overlay Diff: true\n  userxattr: false\n Logging Driver: json-file\n Cgroup Driver: systemd\n Cgroup Version: 2\n Plugins:\n  Volume: local\n  Network: bridge host ipvlan macvlan null overlay\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\n Swarm: inactive\n Runtimes: io.containerd.runc.v2 runc\n Default Runtime: runc\n Init Binary: docker-init\n containerd version: \n runc version: \n init version: \n Security Options:\n  apparmor\n  seccomp\n   Profile: builtin\n  cgroupns\n Kernel Version: 6.5.0-1022-aws\n Operating System: Ubuntu 22.04.4 LTS\n OSType: linux\n Architecture: x86_64\n CPUs: 8\n Total Memory: 15.33GiB\n Name: ip-10-110-144-88\n ID: 50b9c27d-9359-4a82-abfd-e41bc5a8adc5\n Docker Root Dir: /var/lib/docker\n Debug Mode: false\n Experimental: false\n Insecure Registries:\n  127.0.0.0/8\n Live Restore Enabled: false\n\nMilvus version (v0.3.1, or v0.4.0):\n\n  standalone:\n    container_name: milvus-standalone\n    image: milvusdb/milvus:v2.3.12\n    command: [ \"milvus\", \"run\", \"standalone\" ]\n    environment:\n      ETCD_ENDPOINTS: etcd:2379\n      MINIO_ADDRESS: minio:9000\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus\n    ports:\n      - \"19530:19530\"\n    depends_on:\n      - \"etcd\"\n      - \"minio\"\n\n\nMilvus configuration (Settings you made in server_config.yaml):\n\nDefault settings.\n\n\n### Anything else?\n\n_No response_\n", "created_at": "2024-07-21", "closed_at": "2024-07-29", "labels": ["kind/bug"], "State": "closed", "Author": "Aisuko"}
{"issue_number": 2185, "issue_title": "[Bug]: Use Furthest Neighbor Search", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI can't find anywhere in the doc a way to use the feature from PR#27452 in the main repo.\nExpected Behavior\nI expect to have a way to use this feature.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\nLocal run using pymilvus 2.4.4 on Ubuntu 22.04 and Python 3.10.12\nAnything else?\nThank's a lot for your work, milvus is an incredible tool", "created_at": "2024-07-19", "closed_at": "2024-07-22", "labels": ["kind/bug"], "State": "closed", "Author": "RaphaelCanin"}
{"issue_number": 2184, "issue_title": "[QUESTION]: \u8bf7\u95eehybrid_search\u4e2d\u5982\u679c\u6709sparse vector\u7684\u68c0\u7d22\uff0c\u652f\u6301partition key\u5417", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\n\u8bf7\u6c42\u5f02\u5e38\uff0c\u8fd4\u56de\u5185\u5bb9\u5982\u4e0b\uff1a\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=Invalid expr: id in ['2e65e219-48d8-44b2-8c8b-a528076b5c54', ...]: invalid parameter)>\nAnything else?\nNo response", "created_at": "2024-07-19", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "lvjg"}
{"issue_number": 2181, "issue_title": "[Bug]: pymilvus 2.3.5- query iterator got error: grpc_status:13, grpc_message:\"Received RST_STREAM with error code 2\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nSDK version: 2.4.4\nWhen I export data from Zilliz Cloud by query iterator, I found there are many errors :UNKNOWN:Error received from peer ipv4:xxxxxxxx:port {created_time:\"2024-07-18T11:56:40.441894+08:00\", grpc_status:13, grpc_message:\"Received RST_STREAM with error code 2\"}\nParams: batch_size=10000, output_fields\nBut I tested 2.3.4, which is fine.\n2.3.5 is broken, too.\nWhen I change the batch size to 5000, it fine.\nExpected Behavior\nExport data by query iterator success.\nSteps/Code To Reproduce behavior\nExport data with query iterator with big batch size and output vectors.\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-07-18", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "locustbaby"}
{"issue_number": 2178, "issue_title": "[Bug]: Can't create partition in Milvus running on Docker Compose", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI am new to Milvus so I'm getting familiar with syntax and functions. I tried to create_partition but I run into an error:\ngrpc RpcError: [create_partition], <_MultiThreadedRendezvous: StatusCode.UNIMPLEMENTED, >, <Time:{'RPC start': '2024-07-15 23:45:59.373525', 'gRPC error': '2024-07-15 23:45:59.375271'}> Traceback (most recent call last): File \"/var/www/html/milvus-docker-test/milvus_docker_intro.py\", line 60, in <module> client.create_partition( File \"/home/vagrant/.local/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 776, in create_partition conn.create_partition(collection_name, partition_name, timeout=timeout, **kwargs) File \"/home/vagrant/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 161, in handler raise e from e File \"/home/vagrant/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 143, in handler return func(*args, **kwargs) File \"/home/vagrant/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 182, in handler return func(self, *args, **kwargs) File \"/home/vagrant/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 91, in handler raise e from e File \"/home/vagrant/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 87, in handler return func(*args, **kwargs) File \"/home/vagrant/.local/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 403, in create_partition response = rf.result() File \"/home/vagrant/.local/lib/python3.10/site-packages/grpc/_channel.py\", line 883, in result raise self grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with: status = StatusCode.UNIMPLEMENTED details = \"\" debug_error_string = \"UNKNOWN:Error received from peer  {created_time:\"2024-07-15T23:45:59.374735814+00:00\", grpc_status:12, grpc_message:\"\"}\"\nMy code:\nimport json\n\nclient = MilvusClient(\n    uri=\"localhost\",\n    token=\"root:Milvus\"\n)\n\nif client.has_collection(collection_name=\"dockerDB\"):\n    client.drop_collection(collection_name=\"dockerDB\")\n\ntestSchema = MilvusClient.create_schema(\n    enable_dynamic_field=True\n)\n\ntestSchema.add_field(field_name=\"Auto_id\", datatype=DataType.INT64, description=\"The Primary Key\", is_primary=True,\n                     auto_id=True)\ntestSchema.add_field(field_name=\"vector\", datatype=DataType.FLOAT_VECTOR, metric_type=\"COSINE\", dim=5)\ntestSchema.add_field(field_name=\"text\", datatype=DataType.VARCHAR, max_length=8192)\ntestSchema.add_field(field_name=\"sku\", datatype=DataType.VARCHAR, max_length=32)\ntestSchema.add_field(field_name=\"metadata\", datatype=DataType.JSON)\n\nindexParams = MilvusClient.prepare_index_params()\nindexParams.add_index(\n    field_name=\"vector\",\n    metric_type=\"COSINE\",\n    index_name=\"test-index\"\n)\n\n\nclient.create_collection(\n    collection_name=\"dockerDB\",\n    schema=testSchema,\n    index_params=indexParams,\n    auto_id=False\n)\n\ncollection = client.describe_collection(\n    collection_name=\"dockerDB\",\n)\n\nprint(\"TEST COLLECTION DESCRIPTION:\\n\\n\", collection)\nprint(\"\\n\\n\\n\")\n\ntry:\n    client.create_partition(\n        collection_name=\"dockerDB\",\n        partition_name=\"partitionA\"\n    )\nexcept MilvusException as e:\n    print(f\"An error `occurred:\")`\n\n\n### Steps/Code To Reproduce behavior\nMy docker-compose.yml:\nservices:\n  etcd:\n    container_name: milvus-etcd\n    image: quay.io/coreos/etcd:v3.5.5\n    environment:\n      - ETCD_AUTO_COMPACTION_MODE=revision\n      - ETCD_AUTO_COMPACTION_RETENTION=1000\n      - ETCD_QUOTA_BACKEND_BYTES=4294967296\n      - ETCD_SNAPSHOT_COUNT=50000\n    volumes:\n      - /var/www/html/milvus-docker-test/milvus.yaml:/milvus/configs/milvus.yaml\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd\n    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd\n    healthcheck:\n      test: [\"CMD\", \"etcdctl\", \"endpoint\", \"health\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n\n  minio:\n    container_name: milvus-minio\n    image: minio/minio:RELEASE.2023-03-20T20-16-18Z\n    environment:\n      MINIO_ACCESS_KEY: minioadmin\n      MINIO_SECRET_KEY: minioadmin\n    ports:\n      - \"9001:9001\"\n      - \"9000:9000\"\n    volumes:\n      - /var/www/html/milvus-docker-test/milvus.yaml:/milvus/configs/milvus.yaml\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data\n    command: minio server /minio_data --console-address \":9001\"\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9000/minio/health/live\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n\n  standalone:\n    container_name: milvus-standalone\n    image: milvusdb/milvus:v2.4.4\n    command: [\"milvus\", \"run\", \"standalone\"]\n    security_opt:\n    - seccomp:unconfined\n    environment:\n      ETCD_ENDPOINTS: etcd:2379\n      MINIO_ADDRESS: minio:9000\n    volumes:\n      - /var/www/html/milvus-docker-test/milvus.yaml:/milvus/configs/milvus.yaml\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9091/healthz\"]\n      interval: 30s\n      start_period: 90s\n      timeout: 20s\n      retries: 3\n    ports:\n      - \"19530:19530\"\n      - \"9091:9091\"\n    depends_on:\n      - \"etcd\"\n      - \"minio\"\n\nnetworks:\n  default:\n    name: milvus\n\n```markdown\nrunning on vmware ubuntu 22.04, pymilvus==2.4.4, docker compose v2.28.1\n", "created_at": "2024-07-15", "closed_at": "2024-09-02", "labels": ["kind/question"], "State": "closed", "Author": "lukezx3"}
{"issue_number": 2177, "issue_title": "MilvusClient(**conf).search\u68c0\u7d22\u5411\u91cf\u76f8\u4f3c\u6570\u636e\u7684\u5b9e\u73b0\u903b\u8f91", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nsearch\u4e2d\u7684\u53c2\u6570limit\u786e\u5b9a\u8fd4\u56de\u6570\u91cf\uff0cfilter\u505ascalar\u8fc7\u6ee4\u3002\u5b9e\u73b0\u903b\u8f91\u662f\n\n\u5148\u68c0\u7d22\u51falimit\u6761\u6570\u636e\uff0c\u518d\u7528filter\u8fc7\u6ee4\uff1b\u8fd8\u662f\n\u4ece\u6ee1\u8db3filter\u7684\u6240\u6709\u6570\u636e\u4e2d\uff0c\u8fd4\u56delimit\u6761\u7ed3\u679c\n\nAnything else?\nNo response", "created_at": "2024-07-15", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "NealRichardRui"}
{"issue_number": 2175, "issue_title": "[Enhancement]: add generic type in metaclass", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nI would like to suggest an enhancement on typing SingleInstanceMetaClass\nWhy is this needed?\nfor development efficiency and code readability\nAnything else?\nHello, I'm excited to start using Milvus and PyMilvus in our service.\nI'm committed to contributing to this awesome library.", "created_at": "2024-07-14", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "csy1204"}
{"issue_number": 2172, "issue_title": "[Bug]: TypeError(\"data type 'bfloat16' not understood\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n{TypeError}TypeError(\"data type 'bfloat16' not understood\")\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n\n> docker\n\n- Milvus version:\n\n> Milvus 2.4.5 \n> pymilvus 2.4.4\n\n\n### Anything else?\n\n_No response_", "created_at": "2024-07-11", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "pocketreciver"}
{"issue_number": 2171, "issue_title": "[Bug]: TypeError: 'numpy.float64' object is not iterable", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I use reranker with BGE reranker with the latest version, I got this\n     41     query_document_pairs = [[query, text] for text in batched_text]\n     42     batch_score = self.reranker.compute_score(\n     43         query_document_pairs, normalize=self.normalize\n     44     )\n---> 45     scores.extend(batch_score)\n     46 ranked_order = sorted(range(len(scores)), key=lambda i: scores[i], reverse=True)\n     48 if top_k:\n\nTypeError: 'numpy.float64' object is not iterable\n\n\nExpected Behavior\nRun without exception\nSteps/Code To Reproduce behavior\nFind a case that return len with 1\nFlagEmbedding/flag_reranker.py\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nI have found the way to solve the problem, just want to share it with the developer community.\nIn the\nFlagEmbedding/flag_reranker.py\n\nShould comment out like this, because the extend method above cannot resolve with np.float64 datatype of an element of a list.", "created_at": "2024-07-09", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "juhonkang"}
{"issue_number": 2166, "issue_title": "[QUESTION]: Loosen environs package requirement", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nCan the environs requirement be loosened from \"environs<=9.5.0\"?\nThis is causing pip conflicts with some other packages that set environs>=11.0.0.\nAnything else?\nNo response", "created_at": "2024-07-03", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "mbadams5"}
{"issue_number": 2165, "issue_title": "[Enhancement]: `infer_dtype_bydata` can not infer DataType.ARRAY", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\n\nI have tried some examples, and infer_dtype_bydata can not infer DataType.ARRAY from any type of array-like data. Maybe pymilvus should offer a function to infer a ARRAY datatype, as well as the element type within the array.\nWhy is this needed?\nBecause someone want to use this function to infer ARRAY type from metadata in Langchain.\nhttps://github.com/langchain-ai/langchain/pull/23219/files#diff-e5632024b6ba1822184894603c61d3abe15be32464c94feaf805e4af6061730cR419\nIn the past, we can use infer_dtype_bydata to infer any types such as FLOAT_VECTOR. However, this failed when infering ARRAY data\nAnything else?\nNo response", "created_at": "2024-07-03", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "zc277584121"}
{"issue_number": 2162, "issue_title": "[Bug]:  illegal connection params or server unavailable", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI tried to use the locally configured milvus for development work, and then it gave this exception.During the development process, I tried to switch the WIFI network. I don't know if it has anything to do with this\uff1a\n2024-07-02 17:42:04,495 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu\n2024-07-02 17:42:04,496 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-m3\n2024-07-02 17:43:23,082 - langchain_milvus.vectorstores.milvus - ERROR - Failed to create new connection using: e31306a53b2c42458fb44bd7bf2d309f\n---------------------------------------------------------------------------\nFutureTimeoutError                        Traceback (most recent call last)\nFile /mnt/d/development/Github/streamlit-hello/.venv/lib/python3.12/site-packages/pymilvus/client/grpc_handler.py:147, in GrpcHandler._wait_for_channel_ready(self, timeout)\n    146 try:\n--> 147     grpc.channel_ready_future(self._channel).result(timeout=timeout)\n    148     self._setup_identifier_interceptor(self._user, timeout=timeout)\n\nFile /mnt/d/development/Github/streamlit-hello/.venv/lib/python3.12/site-packages/grpc/_utilities.py:162, in _ChannelReadyFuture.result(self, timeout)\n    161 def result(self, timeout: Optional[float] = None) -> None:\n--> 162     self._block(timeout)\n\nFile /mnt/d/development/Github/streamlit-hello/.venv/lib/python3.12/site-packages/grpc/_utilities.py:106, in _ChannelReadyFuture._block(self, timeout)\n    105 if remaining < 0:\n--> 106     raise grpc.FutureTimeoutError()\n    107 else:\n\nFutureTimeoutError: \n\nThe above exception was the direct cause of the following exception:\n\nMilvusException                           Traceback (most recent call last)\nCell In[43], line 1\n----> 1 retriever= Milvus(\n      2     embedding_function=HuggingFaceEmbeddings(model_name=MODEL_NAME,multi_process=True, show_progress=True, model_kwargs={\"local_files_only\":True}),\n      3     connection_args=connection_args,\n      4     collection_name=COLLECTION_NAME,\n      5 ).as_retriever(search_kwargs={\"k\": 10})\n\nFile /mnt/d/development/Github/streamlit-hello/.venv/lib/python3.12/site-packages/langchain_milvus/vectorstores/milvus.py:264, in Milvus.__init__(self, embedding_function, collection_name, collection_description, collection_properties, connection_args, consistency_level, index_params, search_params, drop_old, auto_id, primary_field, text_field, vector_field, metadata_field, partition_key_field, partition_names, replica_number, timeout, num_shards)\n    262 if connection_args is None:\n    263     connection_args = DEFAULT_MILVUS_CONNECTION\n--> 264 self.alias = self._create_connection_alias(connection_args)\n    265 self.col: Optional[Collection] = None\n    267 # Grab the existing collection if it exists\n\nFile /mnt/d/development/Github/streamlit-hello/.venv/lib/python3.12/site-packages/langchain_milvus/vectorstores/milvus.py:346, in Milvus._create_connection_alias(self, connection_args)\n    344 except MilvusException as e:\n    345     logger.error(\"Failed to create new connection using: %s\", alias)\n--> 346     raise e\n\nFile /mnt/d/development/Github/streamlit-hello/.venv/lib/python3.12/site-packages/langchain_milvus/vectorstores/milvus.py:341, in Milvus._create_connection_alias(self, connection_args)\n    339 alias = uuid4().hex\n    340 try:\n--> 341     connections.connect(alias=alias, **connection_args)\n    342     logger.debug(\"Created new connection using: %s\", alias)\n    343     return alias\n\nFile /mnt/d/development/Github/streamlit-hello/.venv/lib/python3.12/site-packages/pymilvus/orm/connections.py:447, in Connections.connect(self, alias, user, password, db_name, token, **kwargs)\n    444         if parsed_uri.scheme == \"https\":\n    445             kwargs[\"secure\"] = True\n--> 447     connect_milvus(**kwargs, user=user, password=password, token=token, db_name=db_name)\n    448     return\n    450 # 2nd Priority, connection configs from env\n\nFile /mnt/d/development/Github/streamlit-hello/.venv/lib/python3.12/site-packages/pymilvus/orm/connections.py:398, in Connections.connect.<locals>.connect_milvus(**kwargs)\n    395 t = kwargs.get(\"timeout\")\n    396 timeout = t if isinstance(t, (int, float)) else Config.MILVUS_CONN_TIMEOUT\n--> 398 gh._wait_for_channel_ready(timeout=timeout)\n    399 if kwargs.get(\"keep_alive\", False):\n    400     gh.register_state_change_callback(\n    401         ReconnectHandler(self, alias, kwargs_copy).reconnect_on_idle\n    402     )\n\nFile /mnt/d/development/Github/streamlit-hello/.venv/lib/python3.12/site-packages/pymilvus/client/grpc_handler.py:150, in GrpcHandler._wait_for_channel_ready(self, timeout)\n    148     self._setup_identifier_interceptor(self._user, timeout=timeout)\n    149 except grpc.FutureTimeoutError as e:\n--> 150     raise MilvusException(\n    151         code=Status.CONNECT_FAILED,\n    152         message=f\"Fail connecting to server on {self._address}, illegal connection params or server unavailable\",\n    153     ) from e\n    154 except Exception as e:\n    155     raise e from e\n\nMilvusException: <MilvusException: (code=2, message=Fail connecting to server on uni[x:/tmp/tmph2hmv5a4_milvus_demo.db.sock](file:///X:/tmp/tmph2hmv5a4_milvus_demo.db.sock), illegal connection params or server unavailable)>\n\nExpected Behavior\nLocal Milvus files can be used normally\nSteps/Code To Reproduce behavior\n1. configuration:\n\nCHUNK_SIZE = 400\nCHUNK_OVERLAP = 20\nCOLLECTION_NAME='ragas'\nMODEL_NAME= \"BAAI/bge-m3\"\nconnection_args = {\n    \"uri\": \"./milvus_demo.db\",\n}\n\nIngest data:\n\nimport logging\nfrom typing import List\nfrom langchain.text_splitter import (\n    RecursiveCharacterTextSplitter,\n)\nfrom langchain_core.documents.base import Document\nfrom langchain_milvus.vectorstores import Milvus\nfrom langchain_huggingface import (\n    HuggingFaceEmbeddings,\n)\nimport os\n\nlogging.info(f\"RecursiveCharacterTextSplitter: {CHUNK_SIZE=},{CHUNK_OVERLAP=}\")\ntext_splitter = RecursiveCharacterTextSplitter.from_tiktoken_encoder(\n    chunk_size=CHUNK_SIZE, chunk_overlap=CHUNK_OVERLAP\n)\ndoc_splits = text_splitter.split_documents(docs)\n\n# Add to Milvus\nvectorstore =Milvus.from_documents(\n    documents=doc_splits,\n    collection_name=COLLECTION_NAME,\n    embedding=HuggingFaceEmbeddings(model_name=MODEL_NAME,multi_process=False, show_progress=True, model_kwargs={\"local_files_only\":True}),\n    connection_args=connection_args,\n)\n\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\nWindows 11\n16GB\nI didn't use GPU\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\nname = \"pymilvus\"\nversion = \"2.4.4\"\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\nAnything else?\nNo response", "created_at": "2024-07-02", "closed_at": null, "labels": ["kind/bug", "milvus-lite"], "State": "open", "Author": "zs856"}
{"issue_number": 2161, "issue_title": "[Bug]: db_name should return when list_connections called", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI have a requirement where I need to connect to different db on same address (host + port) at the same time. And I have to use existing connection if it's alive for this is the code has been written (basically written in langchain codebase)\n  if given_address is not None:\n            for con in connections.list_connections():\n                addr = connections.get_connection_addr(con[0])\n                if (\n                    con[1]\n                    and (\"address\" in addr)\n                    and (addr[\"address\"] == given_address)\n                    and (\"user\" in addr)\n                    and (addr[\"user\"] == tmp_user)\n                ):\n                    logger.debug(\"Using previous connection: %s\", con[0])\n                    return con[0]\n\n        # Generate a new connection if one doesn't exist\n        alias = uuid4().hex\n        try:\n            connections.connect(alias=alias, **connection_args)\n            logger.debug(\"Created new connection using: %s\", alias)\n            return alias\n        except MilvusException as e:\n            logger.error(\"Failed to create new connection using: %s\", alias)\n            raise e\n\n\nLet's say collection_1 is connected to db_1 and Now I want collection_2 will be connect to db_2.  As addr = connections.get_connection_addr(con[0]) don't have the db_name value the if block will be executed and provide db_1 connection which is wrong.\nI believe this is single line fix when connect to milvus we should store the db_name instead of popping.\nCode from Milvus:\ndef connect_milvus(**kwargs):\n            # rest of the code\n            kwargs.pop(\"password\")\n            kwargs.pop(\"token\", None)\n            kwargs.pop(\"db_name\", \"\")  # the bug\n\n            self._connected_alias[alias] = gh\n            self._alias[alias] = copy.deepcopy(kwargs)\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-07-02", "closed_at": null, "labels": ["kind/feature"], "State": "open", "Author": "hasansustcse13"}
{"issue_number": 2160, "issue_title": "[QUESTION]: Bulk insert supports uploading local files directly to S3", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nCurrently, the bulk insert function of pymilvus supports using remote_writer to generate data files (parquet, json, etc.) and upload them to s3, which requires schema verification and buffer_size verification.\nTherefore, if I need to import data exported from other databases (such as JSON format files) into milvus, I have to go through the reading, verification and upload process using pymilvus, and if the data file is large, performance problems will occur.\nMy question is, is it planned to support not verifying the files, directly uploading the files to s3 through the local file path, and then importing them into milvus?\nFor example, by rewriting the _upload method of remote_writer, it is possible to directly upload files through local paths.\nIf you don't plan to support it, why? Is there any way to easily import large amounts of data?\nAnything else?\nnothing", "created_at": "2024-07-02", "closed_at": "2024-07-04", "labels": ["kind/question"], "State": "closed", "Author": "OxalisCu"}
{"issue_number": 2155, "issue_title": "[Bug]: create index on json field is not supported: expected=supported field", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I do \"hello_hybrid_sparse_dense.py\"(https://github.com/milvus-io/pymilvus/blob/0318663b84e1efe19d22b356ff067df6ee4fd61c/examples/hello_hybrid_sparse_dense.py#L94)\uff0c\nRelation Codes below:\n# We need to create indices for the vector fields. The indices will be loaded\n# into memory for efficient search.\ndense_index = {\"index_type\": \"FLAT\", \"metric_type\": \"IP\"}\ncol.create_index(\"dense_vector\", dense_index)\nsparse_index = {\"index_type\": \"SPARSE_INVERTED_INDEX\", \"metric_type\": \"IP\"}\ncol.create_index(\"sparse_vector\", sparse_index)\n\ncol.load()\n\nRaise a MilvusException\uff1a\n RPC error: [create_index], <MilvusException: (code=1100, message=create index on json field is not supported: expected=supported field, actual=create index on 104 field: invalid parameter)>, <Time:{'RPC start': '2024-06-27 09:54:21.879815', 'RPC error': '2024-06-27 09:54:21.935001'}>\nTraceback (most recent call last):\n  File \"/mnt/d/2024Project/hybrid_search/add_hybrid_data/add_docs_hybrid.py\", line 64, in <module>\n    col.create_index(\"sparse_vector\", sparse_index)\n  File \"/root/miniconda3/envs/ai-app-service/lib/python3.9/site-packages/pymilvus/orm/collection.py\", line 1367, in create_index\n    return conn.create_index(self._name, field_name, index_params, timeout=timeout, **kwargs)\n  File \"/root/miniconda3/envs/ai-app-service/lib/python3.9/site-packages/pymilvus/decorators.py\", line 147, in handler\n    raise e from e\n  File \"/root/miniconda3/envs/ai-app-service/lib/python3.9/site-packages/pymilvus/decorators.py\", line 143, in handler\n    return func(*args, **kwargs)\n  File \"/root/miniconda3/envs/ai-app-service/lib/python3.9/site-packages/pymilvus/decorators.py\", line 182, in handler\n    return func(self, *args, **kwargs)\n  File \"/root/miniconda3/envs/ai-app-service/lib/python3.9/site-packages/pymilvus/decorators.py\", line 122, in handler\n    raise e from e\n  File \"/root/miniconda3/envs/ai-app-service/lib/python3.9/site-packages/pymilvus/decorators.py\", line 87, in handler\n    return func(*args, **kwargs)\n  File \"/root/miniconda3/envs/ai-app-service/lib/python3.9/site-packages/pymilvus/client/grpc_handler.py\", line 987, in create_index\n    check_status(status)\n  File \"/root/miniconda3/envs/ai-app-service/lib/python3.9/site-packages/pymilvus/client/utils.py\", line 63, in check_status\n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=**create index on json field is not supported: expected=supported field**, actual=create index on 104 field: invalid parameter)>\n\nProcess finished with exit code 1\n\n\nMy Current Env:\nmilvus version: milvusdb/milvus:v2.4.0-rc.1\npymilvus version: Version: 2.4.4\nWhat's the problem? How to solve it? Many Thanks.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\nmilvus version: milvusdb/milvus:v2.4.0-rc.1\npymilvus version: Version: 2.4.4\nAnything else?\nNo response", "created_at": "2024-06-27", "closed_at": "2024-06-28", "labels": ["kind/bug"], "State": "closed", "Author": "LouisHeck"}
{"issue_number": 2154, "issue_title": "[Bug]: The error message is not clear enough when inserting rows", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n>>> collection.insert(data)\nRPC error: [insert_rows], <DataNotMatchException: (code=1, message=Attempt to insert an unexpected field to collection without enabling dynamic field)>, <Time:{'RPC start': '2023-10-11 11:12:20.341396', 'RPC error': '2023-10-11 11:12:20.341801'}>\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/orm/collection.py\", line 508, in insert\n    res = conn.insert_rows(\n          ^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 129, in handler\n    raise e from e\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 125, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 164, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 104, in handler\n    raise e from e\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 68, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 505, in insert_rows\n    request = self._prepare_row_insert_request(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 486, in _prepare_row_insert_request\n    return Prepare.row_insert_param(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/client/prepare.py\", line 423, in row_insert_param\n    return cls._parse_row_request(request, fields_info, enable_dynamic, entities)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/client/prepare.py\", line 371, in _parse_row_request\n    raise DataNotMatchException(message=ExceptionsMessage.InsertUnexpectedField)\npymilvus.exceptions.DataNotMatchException: <DataNotMatchException: (code=1, message=Attempt to insert an unexpected field to collection without enabling dynamic field)>\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-06-27", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "xiaocai2333"}
{"issue_number": 2151, "issue_title": "[Enhancement]: Support database create, list and drop operations for Milvus client", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nIt should be possible to list, add and drop databases through the newer MilvusClient interface.\nWhy is this needed?\nUsers who are migrating their scripts to MilvusClient need to be able to check and manage available databases.\nAnything else?\nNo response", "created_at": "2024-06-26", "closed_at": "2024-07-02", "labels": ["kind/enhancement"], "State": "closed", "Author": "ashkrisk"}
{"issue_number": 2150, "issue_title": "[Bug]: num_partitions does not take effect", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\npymilvus version: 2.4.0rc39\nmilvus version: 2.4-20240621-e02a95e3-amd64\nfrom pymilvus import MilvusClient, DataType, Collection, connections\n\n# Setup Milvus client\nclient = MilvusClient(uri=\"http://10.104.18.39:19530\")\n\n# Create a collection schema with a partition key\nschema = client.create_schema(\n    auto_id=False,\n    enable_dynamic_field=True,\n    partition_key_field=\"color\",  # Set the field used as the partition key\n    num_partitions=10  # Specify the number of partitions\n)\n\n# Add fields to the schema\nschema.add_field(field_name=\"id\", datatype=DataType.INT64, is_primary=True)\nschema.add_field(field_name=\"vector\", datatype=DataType.FLOAT_VECTOR, dim=5)\nschema.add_field(field_name=\"color\", datatype=DataType.VARCHAR, max_length=512)\n\n# Create the collection with the defined schema\nclient.create_collection(collection_name=\"hello_2\", schema=schema)\nconnections.connect(host=\"10.104.18.39\")\n\nc = Collection(name=\"hello_2\")\nprint(c.partitions)\nprint(c.describe())\n\nresult\n[{\"name\":\"_default_0\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_1\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_2\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_3\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_4\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_5\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_6\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_7\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_8\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_9\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_10\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_11\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_12\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_13\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_14\",\"collection_name\":\"hello_2\",\"description\":\"\"}, {\"name\":\"_default_15\",\"collection_name\":\"hello_2\",\"description\":\"\"}]\n{'collection_name': 'hello_2', 'auto_id': False, 'num_shards': 1, 'description': '', 'fields': [{'field_id': 100, 'name': 'id', 'description': '', 'type': 5, 'params': {}, 'element_type': 0, 'is_primary': True}, {'field_id': 101, 'name': 'vector', 'description': '', 'type': 101, 'params': {'dim': 5}, 'element_type': 0}, {'field_id': 102, 'name': 'color', 'description': '', 'type': 21, 'params': {'max_length': 512}, 'element_type': 0, 'is_partition_key': True}], 'aliases': [], 'collection_id': 450616824097041838, 'consistency_level': 2, 'properties': {}, 'num_partitions': 16, 'enable_dynamic_field': True}\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-06-25", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "zhuwenxing"}
{"issue_number": 2147, "issue_title": "[Bug]: /etc/hosts not supported when using uri", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n/etc/hosts not supported when using uri\n\nuri address is parsed through urllib.parse.parseurl().netloc which does not supports /etc/hosts\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): \n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-06-24", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "haorenfsa"}
{"issue_number": 2237, "issue_title": "[FEATURE]: Do we need to require an upper limit version of grpc?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nmilvus-io/milvus#35667\nI'm thinking of we can directly use grpc >= 1.49.1 but don't set the upper limit\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2024-08-23", "closed_at": "2024-08-29", "labels": ["kind/feature"], "State": "closed", "Author": "xiaofan-luan"}
{"issue_number": 2236, "issue_title": "[Bug]: Pymilvus 2.4.5 depends on numpy <1.25.0", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\npymilvus (2.4.5) depends on numpy (<1.25.0)\nopencv-python (4.10.0.84) depends on numpy (>=1.26.0)\nI can't install opencv-python because pymilvus is using old version of numpy\nExpected Behavior\npymilvus should be compatible with new numpy versions\nSteps/Code To Reproduce behavior\npip install pymilvus@2.4.5\npip install opencv-python@4.10.0.84\nEnvironment details\nPython 3.11.4\nOther details\nTemporary workaround\npip install opencv-python@4.8.1.78\n", "created_at": "2024-08-22", "closed_at": "2024-08-22", "labels": ["kind/bug"], "State": "closed", "Author": "Elijas"}
{"issue_number": 2235, "issue_title": "[QUESTION]: milvus startup question", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\ni install docker compose to startup the milvus by this\n\nthe docker logs show this milvus-standalone container has error.\n\nwhen i request to the 19530 by python sdk, shows this\n\nplease help!!!!thanks\nAnything else?\nNo response", "created_at": "2024-08-22", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "gzcmr"}
{"issue_number": 2233, "issue_title": "[QUESTION]: Do we need to fit the BM25 model [BM25EmbeddingFunction.fit(corpus)] every time a new entity is added?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nBM25EmbeddingFunction.fit(corpus) is time-consuming when corpus are large. How can i only update the incremental part to save time.\nAnything else?\nNo response", "created_at": "2024-08-19", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "XinyuDu"}
{"issue_number": 2232, "issue_title": "[Enhancement]: function hybrid_search missing in the class MilvusClient", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nThe Python class implements all most functions like search but not hybrid_search.\nWhy is this needed?\nI use Notebooks (managed) for a bunch of experiments where having the local mode is very useful. I tend to create a local DB with something like\nclient = MilvusClient(\"local.db\") #local is good\n\nI can do almost everything except call client.hybrid_search().\nAnything else?\nYes, I can create a PR on this unless there is some known reason why this function cannot be implemented / should not be implemented.", "created_at": "2024-08-18", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "saurav-chakravorty"}
{"issue_number": 2231, "issue_title": "[FEATURE]: When connect to cluster failed, the error message  is confusing", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nsee milvus-io/milvus#28076\nWhen we connect to the wrong port, you will still get GRPC unimplemented error and the error message of upgrade pymilvus version is a little confusing\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2024-08-16", "closed_at": null, "labels": ["good first issue", "kind/feature"], "State": "open", "Author": "xiaofan-luan"}
{"issue_number": 2226, "issue_title": "[Bug]: \u6ea2\u51fa\uff0c\u65e0\u6cd5\u65b0\u589e\u6570\u636e", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ncontent_list=[\n        {\"type\":\"\u6982\u8ff0\",\"content\":\"\"\"\u4e09\u5341\u4e94\u8f7d\u6625\u79cb\u7684\u78e8\u7ec3\uff0c\u8bb0\u5f55\u4e86\u673a\u68b0\u5de5\u4e1a\u4fe1\u606f\u4e2d\u5fc3\u7684\u8f89\u714c\u5386\u53f2\uff1a\u56fd\u5bb6\u90e8\u59d4\u4e2d\u6700\u5148\u6210\u7acb\u7684\u8ba1\u7b97\u4e2d\u5fc3\uff0c\u6700\u5148\u5f15\u8fdb\u56fd\u5916\u5148\u8fdb\u7684\u5927\u578b\u8ba1\u7b97\u673a\u7cfb\u7edf\u548c\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u5f00\u53d1\u4e86\u56fd\u5bb6\u673a\u68b0\u5de5\u4e1a\u7ecf\u6d4e\u4fe1\u606f\u7cfb\u7edf\u3001\u673a\u68b0\u5de5\u4e1a\u7edf\u8ba1\u4fe1\u606f\u7cfb\u7edf\u3001\u90e8\u529e\u516c\u81ea\u52a8\u5316\u7cfb\u7edf\u548c\u673a\u68b0\u5de5\u4e1a\u653f\u5e9c\u7f51\u7ad9\uff0c\u5386\u7ecf\u4e8c\u5341\u8f7d\u5f00\u53d1\u4e86\u5e7f\u4e1c\u5927\u4e9a\u6e7e\u6838\u7535\u7ad9\u8d22\u52a1\u548c\u4f01\u4e1a\u7efc\u5408\u7ba1\u7406\u7cfb\u7edf\u3002\u653f\u5e9c\u9879\u76ee\u591a\u6b21\u83b7\u5f97\u56fd\u5bb6\u548c\u884c\u4e1a\u9879\u76ee\u5956\u3002\"\"\"},\n        {\"type\":\"\u53d1\u5c55\u5386\u7a0b\",\"content\":\"\"\"\u6539\u9769\u5f00\u653e\u9020\u5c31\u4e86\u673a\u68b0\u5de5\u4e1a\u4fe1\u606f\u4e2d\u5fc3\u52c3\u52c3\u751f\u673a\u7684\u4eca\u5929\uff1a\u5f00\u53d1\u673a\u68b0\u884c\u4e1a\u95e8\u6237\u7f51\u7ad9--\u673a\u68b0\u5de5\u4e1a\u7ecf\u6d4e\u4fe1\u606f\u7f51\u548c\u4e2d\u5c0f\u4f01\u4e1a\u653f\u5e9c\u7f51\u7ad9--\u4e2d\u56fd\u4e2d\u5c0f\u4f01\u4e1a\u4fe1\u606f\u7f51\uff0c\u5b8c\u6210\u4e2d\u56fd\u673a\u68b0\u5de5\u4e1a\u8054\u5408\u4f1a\u529e\u516c\u81ea\u52a8\u5316\u7cfb\u7edf\uff0c\u4e3a\u4e16\u754c\u94f6\u884c\u548c\u8de8\u56fd\u96c6\u56e2\u63d0\u4f9b\u884c\u4e1a\u6295\u8d44\u54a8\u8be2\uff0c\u4e3a\u5730\u65b9\u7701\u5e02\u548c\u4f01\u4e1a\u63d0\u4f9b\u884c\u4e1a\u89c4\u5212\u7814\u7a76\u548c\u4e13\u9879\u54a8\u8be2\uff0c\u83b7\u5f97\u56fd\u5bb6\u7cfb\u7edf\u96c6\u6210\u8d44\u8d28\u548cISO9001:2000\u8d28\u91cf\u7ba1\u7406\u4f53\u7cfb\u8ba4\u8bc1\u8bc1\u4e66\u3002\"\"\"},\n        {\"type\":\"\u53d1\u5c55\u5386\u7a0b\",\"content\":\"\"\"\u53d1\u5c55\u521b\u65b0\u5c55\u73b0\u4e86\u673a\u68b0\u5de5\u4e1a\u4fe1\u606f\u4e2d\u5fc3\u7f8e\u597d\u7684\u660e\u5929\uff1a\u62e5\u6709\u4e13\u4e1a\u7684\u6709\u8d23\u4efb\u5fc3\u7684IT\u6280\u672f\u4eba\u624d\u548c\u4fe1\u606f\u54a8\u8be2\u4e13\u5bb6\u961f\u4f0d\uff0c\u957f\u671f\u7acb\u8db3\u4e8e\u673a\u68b0\u884c\u4e1a\uff0c\u9762\u5411\u653f\u5e9c\u90e8\u95e8\u548c\u793e\u4f1a\u4f01\u4e8b\u4e1a\u5355\u4f4d\uff0c\u63d0\u4f9b\u7cfb\u7edf\u96c6\u6210\u3001\u8f6f\u4ef6\u5f00\u53d1\u3001\u5728\u7ebf\u670d\u52a1\u3001\u7f51\u7ad9\u5efa\u8bbe\u3001\u7535\u5b50\u5546\u52a1\u5e73\u53f0\u5efa\u8bbe\u7b49\u4f18\u8d28\u4fe1\u606f\u6280\u672f\u670d\u52a1\uff0c\u63d0\u4f9b\u884c\u4e1a\u7814\u7a76\u3001\u7edf\u8ba1\u5206\u6790\u3001\u5e02\u573a\u8c03\u67e5\u3001\u4fe1\u606f\u54a8\u8be2\u548c\u4fe1\u606f\u5316\u57f9\u8bad\u670d\u52a1\uff0c\u53d1\u5e03\u884c\u4e1a\u6743\u5a01\u4fe1\u606f\uff0c\u6253\u9020\u5f3a\u52bf\u8d44\u8baf\u5a92\u4f53\uff0c\u5168\u65b9\u4f4d\u670d\u52a1\u4e8e\u5ba2\u6237\u3002\"\"\"},\n        {\"type\":\"\u670d\u52a1\u9886\u57df\",\"content\": \"\"\"\u653f\u5e9c\u4fe1\u606f\u5316 \u56fd\u5bb6\u673a\u68b0\u5de5\u4e1a\u90e8\u2014\u2014\u56fd\u5bb6\u673a\u68b0\u5de5\u4e1a\u7ecf\u6d4e\u4fe1\u606f\u7cfb\u7edf\uff1b\u4f01\u4e1a\u4fe1\u606f\u5316 \u5e7f\u4e1c\u5927\u4e9a\u6e7e\u6838\u7535\u8fd0\u8425\u7ba1\u7406\u6709\u9650\u8d23\u4efb\u516c\u53f8\u2014\u2014\u8d22\u52a1\u548c\u4f01\u4e1a\u7efc\u5408\u7ba1\u7406\uff1b\u529e\u516c\u81ea\u52a8\u5316 \u5317\u4eac\u4eac\u57ce\u673a\u7535\u63a7\u80a1\u6709\u9650\u8d23\u4efb\u516c\u53f8\u2014\u2014\u529e\u516c\u4e1a\u52a1\u7ba1\u7406\u7cfb\u7edf\uff1b\u7f51\u7edc\u5e94\u7528\uff08\u7f51\u7ad9\u3001\u7535\u5b50\u5546\u52a1\uff09 \u56fd\u5bb6\u53d1\u5c55\u548c\u6539\u9769\u59d4\u5458\u4f1a\u2014\u2014\u4e2d\u56fd\u4e2d\u5c0f\u4f01\u4e1a\u4fe1\u606f\u7f51\uff1b\u56fe\u5f62\u56fe\u8c61\u5904\u7406 \u4e2d\u56fd\u7b2c\u4e00\u6c7d\u8f66\u96c6\u56e2\u516c\u53f8\u2014\u2014\u8bbe\u5907\u7ba1\u7406\u548c\u89c4\u5212\u5e73\u53f0\"\"\"},\n        {\"type\":\"\u670d\u52a1\u9886\u57df\",\"content\":\"\"\"\u7f51\u7edc\u8d44\u6e90\u670d\u52a1\u7cfb\u7edf\u96c6\u6210\u3001\u7ef4\u62a4\u7ef4\u4fee,\u865a\u62df\u4e3b\u673a\u3001\u4e3b\u673a\u6258\u7ba1,\u7f51\u7edc\u9632\u6bd2\u3001\u7535\u5b50\u90ae\u4ef6,\u89c6\u9891\u4f1a\u8bae \u3001\u624b\u673a\u77ed\u4fe1\u4e2d\u56fd\u673a\u68b0\u5de5\u4e1a\u8054\u5408\u4f1a\u3001\u5317\u4eac\u4eac\u57ce\u673a\u7535\u63a7\u80a1\u6709\u9650\u8d23\u4efb\u516c\u53f8\u3001\u5317\u4eac\u4eea\u5668\u4eea\u8868\u5de5\u4e1a\u96c6\u56e2\u516c\u53f8\u3001\u5317\u4eac\u4eac\u57ce\u91cd\u5de5\u673a\u68b0\u6709\u9650\u8d23\u4efb\u516c\u53f8\u3001\u673a\u68b0\u5de5\u4e1a\u89c4\u5212\u8bbe\u8ba1\u7814\u7a76\u9662\u3001\u5317\u4eac\u7406\u5de5\u5927\u5b66\u9644\u4e2d\u7b49\u653f\u5e9c\u3001\u673a\u5173\u3001\u4f01\u4e1a\u3001\u9662\u6821\u3001\u4e2d\u4ecb\u673a\u6784\u548c\u793e\u4f1a\u5404\u754c\u7528\u6237\"\"\"}\n    ]\n    for item in content_list[1:]:\n        content=item.get(\"content\")\n        type=item.get(\"type\")\n        list = recursive_splitters.split_text(content)\n        temp_list=[\n            (len(sub_item),Document(metadata={\n                'source': '\u673a\u68b0\u5de5\u4e1a\u4fe1\u606f\u4e2d\u5fc3',\n                'sub_source': f'\u673a\u68b0\u5de5\u4e1a\u4fe1\u606f\u4e2d\u5fc3{type}',\n                'source_id': '25e2c2dc-c5d2-471e-a330-adfc8284c4e1',\n                'content':content\n            },\n                page_content=sub_item\n            ))\n            for sub_item in list\n        ]\n        print(temp_list)\n        doc_list.extend([tl[1] for tl in temp_list])\n    print(len(doc_list))\n    result = store.add_documents(documents=doc_list)\n    print(result)\n\n\n\u62a5\u9519\uff1a\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=the length (464) of 7th VarChar chunk_content exceeds max length (7)%!(EXTRA int64=400): invalid parameter)>\n\n\u5b9e\u9645\u4e0a\u6211\u7684\u6570\u636e\u5e93chunk_content \u662fvarchar\u7c7b\u578b \u7136\u540e\u662f400\u5927\u5c0f\uff0c\u56e0\u6b64\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u603b\u662f\u62a5\u6ea2\u51fa\uff0c\u800c\u4e14\u6211\u5c06chunk_size\u5df2\u7ecf\u8c03\u7684\u5f88\u5c0f\u4e86\uff1f\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-08-12", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Songjiadong"}
{"issue_number": 2221, "issue_title": "[Bug]: gRPC handler is reraising Exceptions in a way that breaks low-level Python Exception tracking", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nHello Milvus maintainers,\nThank you in advance for reading my bug-report.\nThere are three spots in grpc_handler.py (first spot, second spot and third spot) that use the following pattern to reraise an Exception\ntry:\n    <some code>\nexcept Exception as err:\n    <do some other stuff>\n    raise err from err\n...\nRespectfully, this raise err from err is not a great way to reraise exceptions; instead, as mentioned in the Python docs it should be\ntry:\n    <some code>\nexcept Exception as err:\n    <do some other stuff>\n    raise\n...\nWhy is the first one not great? It attaches the err Exception as the __cause__ to itself. As I understand it, this is not the desired semantics for __cause__ and this breaks any tools that recursively unroll chained Exceptions (e.g. for processing stack traces). As a concrete example of such a tool, we actually uncovered this seeming bug in grpc_handler.py when using Milvus as part of a larger Dask computation; specifically, as part of Dask's error-handling, the library uses a utility called collect_causes,\ndef collect_causes(e: BaseException) -> list[BaseException]:\n    causes = []\n    while e.__cause__ is not None:\n        causes.append(e.__cause__)\n        e = e.__cause__\n    return causes\nWhen collect_causes encounters an Exception raised from one of the linked spots in grpc_handler.py it triggers an infinite loop of unrolling e.__cause__, consequently leaking memory until the process is killed.\nAssuming you agree with the quick fix, I'm happy to submit a PR, but wanted to run it by you first to make sure I'm not missing something.\nCheers,\nBrian\nExpected Behavior\nWhen handling Exceptions raised by the linked methods in grpc_handler.py, the Exceptions should not be attached as their own __cause__\nSteps/Code To Reproduce behavior\nIn one process, run\nIn [1]: from milvus_lite.server import Server\n\nIn [2]: s = Server('test.db', '127.0.0.1:9999')\n\nIn [3]: s.start()\nOut[3]: True\n\nIn [4]: s._p.wait()\nIn another process, run\nIn [1]: import pymilvus\n\nIn [2]: client = pymilvus.MilvusClient(\"http://localhost:9999\")\n   ...: collection_name = \"fake_embeddings\"\n   ...: if client.has_collection(collection_name=collection_name):\n   ...:     client.drop_collection(collection_name=collection_name)\n   ...: \n\nIn [3]: vector_dim = 512\n   ...: client.create_collection(\n   ...:     collection_name=collection_name,\n   ...:     vector_field_name=\"vector\",\n   ...:     dimension=vector_dim,\n   ...:     auto_id=True,\n   ...:     enable_dynamic_field=True,\n   ...:     metric_type=\"COSINE\",\n   ...: )\n\nIn [4]: import numpy as np\n\nIn [5]: vectors = np.random.normal(loc=0, scale=1, size=(vector_dim + 2,))\n\nIn [6]: try:\n   ...:     client.insert(collection_name, {\"vector\": vectors})\n   ...: except pymilvus.MilvusException as exc:\n   ...:     assert exc.__cause__ is not exc, \"Exception is its own cause\"\nThe In [6]: step will throw an AssertionError\nEnvironment details\n- No hardware/software conditions of note\n- Installed pymilvus with pip (version 2.4.4)\n- Can reproduce the error with milvus_lite module, so I don't think server config has an impact?\nAnything else?\nNo response", "created_at": "2024-08-08", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "bcalvert-graft"}
{"issue_number": 2218, "issue_title": "[Enhancement]: Rename is_major to is_clustering", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nRename is_major to is_clustering\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-08-08", "closed_at": "2024-08-28", "labels": ["kind/enhancement"], "State": "closed", "Author": "wayblink"}
{"issue_number": 2215, "issue_title": "[Bug]: connections.connection() uri option isn't documented as creating a local file", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nThis documents and obviously creates the db file:\nhttps://github.com/milvus-io/milvus-lite/blob/main/python/src/milvus_lite/server.py#L40\nThis creates the call to create the lite instance with the uri file:\nhttps://github.com/milvus-io/pymilvus/blob/master/pymilvus/orm/connections.py#L383\nBut only specifies a domain socket, host, etc here:\nhttps://github.com/milvus-io/pymilvus/blob/master/pymilvus/orm/connections.py#L318\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-08-05", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "ag4ve"}
{"issue_number": 2207, "issue_title": "[Bug]: <MilvusException: (code=65535, message=the length(38400) of float data should divide the dim(1024))>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen i am creating a index from docs this is the error i am getting\nExpected Behavior\n<MilvusException: (code=65535, message=the length(38400) of float data should divide the dim(1024))>\nSteps/Code To Reproduce behavior\n<MilvusException: (code=65535, message=the length(38400) of float data should divide the dim(1024))>\nEnvironment details\n- Hardware/Softward conditions cpu\n- Method of installation (Docker, or from source): docker\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-08-01", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Rohith-Scalers"}
{"issue_number": 2206, "issue_title": "[Bug]: Milvus \u8fde\u63a5\u9519\u8bef: <_InactiveRpcError of RPC that terminated with: \tstatus = StatusCode.UNAUTHENTICATED \tdetails = \"missing authorization in header\" \tdebug_error_string = \"UNKNOWN:Error received from peer  {grpc_message:\"missing authorization in header\", grpc_status:16, created_time:\"2024-07-31T14:52:52.605898+08:00\"}\" >", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\u5f53\u6211\u5728\u64cd\u7eb5pymilvus\u65f6\u5c31\u62a5\u8fd9\u4e2a\u9519\nMilvus \u8fde\u63a5\u9519\u8bef: <_InactiveRpcError of RPC that terminated with:\nstatus = StatusCode.UNAUTHENTICATED\ndetails = \"missing authorization in header\"\ndebug_error_string = \"UNKNOWN:Error received from peer  {grpc_message:\"missing authorization in header\", grpc_status:16, created_time:\"2024-07-31T14:52:52.605898+08:00\"}\"\n\n\nExpected Behavior\n\u5f53\u6211\u5728\u64cd\u7eb5pymilvus\u65f6\u5c31\u62a5\u8fd9\u4e2a\u9519\nSteps/Code To Reproduce behavior\ndef createCollectionAndInsertRecords(self, collection_name, partition_name, data_list):\n        try:\n            with get_milvus_client():\n                # \u68c0\u67e5\u8fde\u63a5\u662f\u5426\u5b58\u5728\n                if not connections.has_connection(\"default\"):\n                    logging.info(\"Connection to Milvus failed.\")\n                else:\n                    logging.info(\"Successfully connected to Milvus.\")\n\n                # \u521b\u5efa\u96c6\u5408 schema\n                if collection_name in list_collections():\n                    collection = Collection(name=collection_name)\n                else:\n                    schema = CollectionSchema(self.fields, description=\"example collection\")\n                    collection = Collection(name=collection_name, schema=schema)\n                    index = {\"index_type\": \"IVF_FLAT\", \"params\": {\"nlist\": 128}, \"metric_type\": \"L2\"}\n                    if not collection.has_index():\n                        collection.create_index(\"doc_section\", index)\n                    collection.load()\n                partition = Partition(collection, name=partition_name)\n                res = partition.insert(data_list)\n                count = res.insert_count\n                logging.info(f\"-------------\u6210\u529f\u6dfb\u52a0{count}\u6761\u8bb0\u5f55\u5230\u5411\u91cf\u5e93-------------\")\n                return True\n        except Exception as e:\n            logging.error(f\"\u5b58\u50a8\u6587\u672c\u5185\u5bb9\u5230milvus\u5931\u8d25: {e}\")\n            return False\nEnvironment details\n- cpu\n- Method of installation (Docker):\n- Milvus version (2.3.20):\n- pymilvus:2.3.7\nAnything else?\n\u5f53\u6211\u5728\u64cd\u7eb5pymilvus\u65f6\u5c31\u62a5\u8fd9\u4e2a\u9519\nMilvus \u8fde\u63a5\u9519\u8bef: <_InactiveRpcError of RPC that terminated with:\nstatus = StatusCode.UNAUTHENTICATED\ndetails = \"missing authorization in header\"\ndebug_error_string = \"UNKNOWN:Error received from peer  {grpc_message:\"missing authorization in header\", grpc_status:16, created_time:\"2024-07-31T14:52:52.605898+08:00\"}\"\n\n", "created_at": "2024-07-31", "closed_at": "2024-08-06", "labels": ["kind/question"], "State": "closed", "Author": "Jerryyyy0"}
{"issue_number": 2205, "issue_title": "[QUESTION]: [describe_collection] retry:10, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNAVAILABLE, failed to connect to all addresses; ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHello, I am a starter in pymilvus. my pymilvus version is 2.4.4\n# packages in environment at /opt/conda/envs/image_search:\n#\n# Name                    Version                   Build  Channel\npymilvus                  2.4.4                    pypi_0    pypi\nmy code is very sample\nfrom pymilvus import MilvusClient\nimport numpy as np\nimport os\nimport time\n\nclient = MilvusClient(\"image_search_wulj_test.db\")#3\nif client.has_collection(collection_name=\"image_embeddings\"):\n    client.drop_collection(collection_name=\"image_embeddings\")\nclient.create_collection(\n    collection_name=\"image_embeddings\",\n    vector_field_name=\"vector\",\n    dimension=512,\n    auto_id=True,\n    enable_dynamic_field=True,\n    metric_type=\"COSINE\",\n)\n#4\n\ncnt = 0\nfrom tqdm import tqdm\nimport json\nimport numpy as np\nwith open('truck_data_resnet34.jsonl','r') as fi:\n    \n    for line in fi:\n        filepath = '/opt/data/private/shuowang/image_data/image/image/' #\u6574\u56fe\n        data = json.loads(line)\n        filepath += str(data['path']) + \".jpg\"\n        for item in data['truck']:\n            image_embedding = np.array(item['vector'])\n            \n            client.insert(\n                    \"image_embeddings\",\n                    {\"vector\": image_embedding, \"filename\": filepath+item['path']},\n                )\n        cnt += 1\n        # time.sleep(10)\n        print('cur cnt: ', cnt)\nwhen i want write embedding infos from a json file to milvus db, it occurs  errors:\nthe client.insert() function works fun for the first few minutes, , about several minutes later, it breaks as follows:\n[describe_collection] retry:72, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNAVAILABLE, failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory>\n[describe_collection] retry:73, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNAVAILABLE, failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory>\n[describe_collection] retry:74, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNAVAILABLE, failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory>\n[describe_collection] retry:75, cost: 3.00s, reason: <_MultiThreadedRendezvous: StatusCode.UNAVAILABLE, failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory>\nRPC error: [describe_collection], <MilvusException: (code=<bound method _MultiThreadedRendezvous.code of <_MultiThreadedRendezvous of RPC that terminated with:\n        status = StatusCode.UNAVAILABLE\n        details = \"failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory\"\n        debug_error_string = \"UNKNOWN:Error received from peer  {created_time:\"2024-07-30T20:16:16.002968128+08:00\", grpc_status:14, grpc_message:\"failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory\"}\"\n>>, message=Retry run out of 75 retry times, message=failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory)>, <Time:{'RPC start': '2024-07-30 20:12:45.088180', 'RPC error': '2024-07-30 20:16:16.003652'}>\nRPC error: [insert_rows], <MilvusException: (code=<bound method _MultiThreadedRendezvous.code of <_MultiThreadedRendezvous of RPC that terminated with:\n        status = StatusCode.UNAVAILABLE\n        details = \"failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory\"\n        debug_error_string = \"UNKNOWN:Error received from peer  {created_time:\"2024-07-30T20:16:16.002968128+08:00\", grpc_status:14, grpc_message:\"failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory\"}\"\n>>, message=Retry run out of 75 retry times, message=failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory)>, <Time:{'RPC start': '2024-07-30 20:12:45.088144', 'RPC error': '2024-07-30 20:16:16.003949'}>\nTraceback (most recent call last):\n  File \"/opt/data/private/shuowang/./image_search_wulj.py\", line 33, in <module>\n    client.insert(\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 223, in insert\n    raise ex from ex\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 219, in insert\n    res = conn.insert_rows(\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/decorators.py\", line 147, in handler\n    raise e from e\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/decorators.py\", line 143, in handler\n    return func(*args, **kwargs)\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/decorators.py\", line 182, in handler\n    return func(self, *args, **kwargs)\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/decorators.py\", line 122, in handler\n    raise e from e\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/decorators.py\", line 87, in handler\n    return func(*args, **kwargs)\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 492, in insert_rows\n    request = self._prepare_row_insert_request(\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 513, in _prepare_row_insert_request\n    schema = self.describe_collection(collection_name, timeout=timeout)\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/decorators.py\", line 147, in handler\n    raise e from e\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/decorators.py\", line 143, in handler\n    return func(*args, **kwargs)\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/decorators.py\", line 182, in handler\n    return func(self, *args, **kwargs)\n  File \"/opt/conda/envs/image_search/lib/python3.10/site-packages/pymilvus/decorators.py\", line 93, in handler\n    raise MilvusException(e.code, f\"{to_msg}, message={e.details()}\") from e\npymilvus.exceptions.MilvusException: <MilvusException: (code=<bound method _MultiThreadedRendezvous.code of <_MultiThreadedRendezvous of RPC that terminated with:\n        status = StatusCode.UNAVAILABLE\n        details = \"failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory\"\n        debug_error_string = \"UNKNOWN:Error received from peer  {created_time:\"2024-07-30T20:16:16.002968128+08:00\", grpc_status:14, grpc_message:\"failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory\"}\"\n>>, message=Retry run out of 75 retry times, message=failed to connect to all addresses; last error: UNKNOWN: unix:/tmp/tmp_i3bafr0_image_search_wulj_test.db.sock: No such file or directory)>\n\nCould you give me some advice for this error?\nAnything else?\nNo response", "created_at": "2024-07-30", "closed_at": null, "labels": ["kind/question", "milvus-lite"], "State": "open", "Author": "wulongjian"}
{"issue_number": 2204, "issue_title": "[Enhancement]:  Refine max length exceeded error message", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nprint the error message indicating which varchar & string array field exceeds the max length\nWhy is this needed?\nTo help identify the issue\nAnything else?", "created_at": "2024-07-29", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "pingliu"}
{"issue_number": 2203, "issue_title": "[Bug]: Broken Pipe when mp inserts", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen using multiprocessing to insert data into milvus like vdc and zilliz cloud, pymilvus will raise Borken Pipe exception.\nEven thought connections are reconnected and insertion will be retried, the exceptions are still annoying\nExpected Behavior\nno Broken Pipe raised\nSteps/Code To Reproduce behavior\nimport time\nimport multiprocessing\nimport numpy as np\nfrom pymilvus import (\n    connections,\n    FieldSchema, CollectionSchema, DataType,\n    Collection,\n)\n\n\nfmt = \"\\n=== {:30} ===\"\nnum_entities, dim = 3000, 8\n\nuri = \"https://your_host:your_port\"\ntoken = \"xxxxxxxxxx:xxxx\"\n\nclass MultiProcessingInsert:\n    def __init__(self, collection_name: str, number_of_batch: int):\n        self.collection_name = collection_name\n        self.batches = range(number_of_batch)\n        self.c = None\n\n    def init_client(self):\n        from pymilvus import connections\n        connections.connect(uri=uri, token=token)\n\n    def get_c(self):\n        if self.c is None:\n            self.c = Collection(self.collection_name)\n        return self.c\n\n    def work(self, number: int):\n        print(fmt.format(f\"No.{number:2}: Start inserting entities\"))\n        rng = np.random.default_rng(seed=number)\n        entities = [\n            list(range(num_entities)),\n            rng.random(num_entities).tolist(),\n            rng.random((num_entities, dim)),\n        ]\n\n        self.get_c().insert(entities)\n        print(fmt.format(f\"No.{number:2}: Finish inserting entities\"))\n\n    def run(self):\n        ctx = multiprocessing.get_context(\"spawn\")\n        with ctx.Pool(\n            processes=16,\n            initializer=self.init_client,\n        ) as pool:\n            list(\n                pool.imap(self.work, self.batches)\n            )\n\n\nif __name__ == \"__main__\":\n    print(fmt.format(\"start connecting to Milvus\"))\n    connections.connect(uri=uri, token=token)\n    fields = [\n        FieldSchema(name=\"pk\", dtype=DataType.INT64, is_primary=True, auto_id=False),\n        FieldSchema(name=\"random\", dtype=DataType.DOUBLE),\n        FieldSchema(name=\"embeddings\", dtype=DataType.FLOAT_VECTOR, dim=dim)\n    ]\n\n    schema = CollectionSchema(fields, \"hello_milvus is the simplest demo to introduce the APIs\")\n    print(fmt.format(\"Create collection `hello_milvus`\"))\n    hello_milvus = Collection(\"hello_milvus\", schema, consistency_level=\"Strong\")\n    connections.disconnect(\"default\")\n\n\n    mp_insert = MultiProcessingInsert(\"hello_milvus\", 100000)\n    mp_insert.run()\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nThis is client side grpc related logs.\n726_01.zip", "created_at": "2024-07-29", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "XuanYang-cn"}
{"issue_number": 2202, "issue_title": "[Bug]: TypeError: Couldn't build proto file into descriptor pool: duplicate file name common.proto", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nfrom langchain_milvus import  Milvus\nimport phoenixdb\nif __name__==\"__main__\":\n    pass\n\n\u4e24\u4e2a\u5305\u4e2d\u90fd\u6709common.proto \u5b58\u5728\u51b2\u7a81\uff0c\u800c\u4e14\u611f\u89c9\u662f\u7531\u4e8egrpc_gen/common_pb2.py\u4e0ephoenixdb/avatical/proto/common_pb2.py\u51b2\u7a81\u9020\u6210\u7684\uff0c\u4e14\u4e3b\u8981\u662f\u7531\u4e8egrpc_gen/common_pb2.py\u4e0b\u7684\u5982\u4e0b\u4ee3\u7801\u9020\u6210\u7684\n_globals = globals()\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'common_pb2', _globals)\n\n\u5355\u72ec\u4f7f\u7528phoenix \u6216pymilvus\u90fd\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u4f46\u5982\u679c\u540c\u65f6\u5f15\u7528\u4e24\u4e2a\u5305\uff0c\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\n\u62a5\u9519\u4fe1\u606f\u5982\u4e0b\uff1a\nFile \"E:\\PyWorkSpace\\fastapi\\test.py\", line 3, in <module>\n    import phoenixdb\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\phoenixdb\\__init__.py\", line 19, in <module>\n    from phoenixdb import errors, types\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\phoenixdb\\types.py\", line 21, in <module>\n    from phoenixdb.avatica.proto import common_pb2\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\phoenixdb\\avatica\\__init__.py\", line 16, in <module>\n    from .client import AvaticaClient  # noqa: F401\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\phoenixdb\\avatica\\client.py\", line 27, in <module>\n    from phoenixdb.avatica.proto import common_pb2, requests_pb2, responses_pb2\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\phoenixdb\\avatica\\proto\\common_pb2.py\", line 34, in <module>\n    DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n\\x0c\\x63ommon.proto\\\"\\xc0\\x01\\n\\x14\\x43onnectionProperties\\x12\\x10\\n\\x08is_dirty\\x18\\x01 \\x01(\\x08\\x12\\x13\\n\\x0b\\x61uto_commit\\x18\\x02 \\x01(\\x08\\x12\\x17\\n\\x0fhas_auto_commit\\x18\\x07 \\x01(\\x08\\x12\\x11\\n\\tread_only\\x18\\x03 \\x01(\\x08\\x12\\x15\\n\\rhas_read_only\\x18\\x08 \\x01(\\x08\\x12\\x1d\\n\\x15transaction_isolation\\x18\\x04 \\x01(\\r\\x12\\x0f\\n\\x07\\x63\\x61talog\\x18\\x05 \\x01(\\t\\x12\\x0e\\n\\x06schema\\x18\\x06 \\x01(\\t\\\"S\\n\\x0fStatementHandle\\x12\\x15\\n\\rconnection_id\\x18\\x01 \\x01(\\t\\x12\\n\\n\\x02id\\x18\\x02 \\x01(\\r\\x12\\x1d\\n\\tsignature\\x18\\x03 \\x01(\\x0b\\x32\\n.Signature\\\"\\xb0\\x01\\n\\tSignature\\x12 \\n\\x07\\x63olumns\\x18\\x01 \\x03(\\x0b\\x32\\x0f.ColumnMetaData\\x12\\x0b\\n\\x03sql\\x18\\x02 \\x01(\\t\\x12%\\n\\nparameters\\x18\\x03 \\x03(\\x0b\\x32\\x11.AvaticaParameter\\x12&\\n\\x0e\\x63ursor_factory\\x18\\x04 \\x01(\\x0b\\x32\\x0e.CursorFactory\\x12%\\n\\rstatementType\\x18\\x05 \\x01(\\x0e\\x32\\x0e.StatementType\\\"\\xad\\x03\\n\\x0e\\x43olumnMetaData\\x12\\x0f\\n\\x07ordinal\\x18\\x01 \\x01(\\r\\x12\\x16\\n\\x0e\\x61uto_increment\\x18\\x02 \\x01(\\x08\\x12\\x16\\n\\x0e\\x63\\x61se_sensitive\\x18\\x03 \\x01(\\x08\\x12\\x12\\n\\nsearchable\\x18\\x04 \\x01(\\x08\\x12\\x10\\n\\x08\\x63urrency\\x18\\x05 \\x01(\\x08\\x12\\x10\\n\\x08nullable\\x18\\x06 \\x01(\\r\\x12\\x0e\\n\\x06signed\\x18\\x07 \\x01(\\x08\\x12\\x14\\n\\x0c\\x64isplay_size\\x18\\x08 \\x01(\\r\\x12\\r\\n\\x05label\\x18\\t \\x01(\\t\\x12\\x13\\n\\x0b\\x63olumn_name\\x18\\n \\x01(\\t\\x12\\x13\\n\\x0bschema_name\\x18\\x0b \\x01(\\t\\x12\\x11\\n\\tprecision\\x18\\x0c \\x01(\\r\\x12\\r\\n\\x05scale\\x18\\r \\x01(\\r\\x12\\x12\\n\\ntable_name\\x18\\x0e \\x01(\\t\\x12\\x14\\n\\x0c\\x63\\x61talog_name\\x18\\x0f \\x01(\\t\\x12\\x11\\n\\tread_only\\x18\\x10 \\x01(\\x08\\x12\\x10\\n\\x08writable\\x18\\x11 \\x01(\\x08\\x12\\x1b\\n\\x13\\x64\\x65\\x66initely_writable\\x18\\x12 \\x01(\\x08\\x12\\x19\\n\\x11\\x63olumn_class_name\\x18\\x13 \\x01(\\t\\x12\\x1a\\n\\x04type\\x18\\x14 \\x01(\\x0b\\x32\\x0c.AvaticaType\\\"}\\n\\x0b\\x41vaticaType\\x12\\n\\n\\x02id\\x18\\x01 \\x01(\\r\\x12\\x0c\\n\\x04name\\x18\\x02 \\x01(\\t\\x12\\x11\\n\\x03rep\\x18\\x03 \\x01(\\x0e\\x32\\x04.Rep\\x12 \\n\\x07\\x63olumns\\x18\\x04 \\x03(\\x0b\\x32\\x0f.ColumnMetaData\\x12\\x1f\\n\\tcomponent\\x18\\x05 \\x01(\\x0b\\x32\\x0c.AvaticaType\\\"\\x91\\x01\\n\\x10\\x41vaticaParameter\\x12\\x0e\\n\\x06signed\\x18\\x01 \\x01(\\x08\\x12\\x11\\n\\tprecision\\x18\\x02 \\x01(\\r\\x12\\r\\n\\x05scale\\x18\\x03 \\x01(\\r\\x12\\x16\\n\\x0eparameter_type\\x18\\x04 \\x01(\\r\\x12\\x11\\n\\ttype_name\\x18\\x05 \\x01(\\t\\x12\\x12\\n\\nclass_name\\x18\\x06 \\x01(\\t\\x12\\x0c\\n\\x04name\\x18\\x07 \\x01(\\t\\\"\\xb3\\x01\\n\\rCursorFactory\\x12#\\n\\x05style\\x18\\x01 \\x01(\\x0e\\x32\\x14.CursorFactory.Style\\x12\\x12\\n\\nclass_name\\x18\\x02 \\x01(\\t\\x12\\x13\\n\\x0b\\x66ield_names\\x18\\x03 \\x03(\\t\\\"T\\n\\x05Style\\x12\\n\\n\\x06OBJECT\\x10\\x00\\x12\\n\\n\\x06RECORD\\x10\\x01\\x12\\x15\\n\\x11RECORD_PROJECTION\\x10\\x02\\x12\\t\\n\\x05\\x41RRAY\\x10\\x03\\x12\\x08\\n\\x04LIST\\x10\\x04\\x12\\x07\\n\\x03MAP\\x10\\x05\\\"9\\n\\x05\\x46rame\\x12\\x0e\\n\\x06offset\\x18\\x01 \\x01(\\x04\\x12\\x0c\\n\\x04\\x64one\\x18\\x02 \\x01(\\x08\\x12\\x12\\n\\x04rows\\x18\\x03 \\x03(\\x0b\\x32\\x04.Row\\\"\\\"\\n\\x03Row\\x12\\x1b\\n\\x05value\\x18\\x01 \\x03(\\x0b\\x32\\x0c.ColumnValue\\\"3\\n\\x10\\x44\\x61tabaseProperty\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tfunctions\\x18\\x02 \\x03(\\t\\\"4\\n\\x0bWireMessage\\x12\\x0c\\n\\x04name\\x18\\x01 \\x01(\\t\\x12\\x17\\n\\x0fwrapped_message\\x18\\x02 \\x01(\\x0c\\\"\\x87\\x01\\n\\x0b\\x43olumnValue\\x12\\x1a\\n\\x05value\\x18\\x01 \\x03(\\x0b\\x32\\x0b.TypedValue\\x12 \\n\\x0b\\x61rray_value\\x18\\x02 \\x03(\\x0b\\x32\\x0b.TypedValue\\x12\\x17\\n\\x0fhas_array_value\\x18\\x03 \\x01(\\x08\\x12!\\n\\x0cscalar_value\\x18\\x04 \\x01(\\x0b\\x32\\x0b.TypedValue\\\"\\xf2\\x01\\n\\nTypedValue\\x12\\x12\\n\\x04type\\x18\\x01 \\x01(\\x0e\\x32\\x04.Rep\\x12\\x12\\n\\nbool_value\\x18\\x02 \\x01(\\x08\\x12\\x14\\n\\x0cstring_value\\x18\\x03 \\x01(\\t\\x12\\x14\\n\\x0cnumber_value\\x18\\x04 \\x01(\\x12\\x12\\x13\\n\\x0b\\x62ytes_value\\x18\\x05 \\x01(\\x0c\\x12\\x14\\n\\x0c\\x64ouble_value\\x18\\x06 \\x01(\\x01\\x12\\x0c\\n\\x04null\\x18\\x07 \\x01(\\x08\\x12 \\n\\x0b\\x61rray_value\\x18\\x08 \\x03(\\x0b\\x32\\x0b.TypedValue\\x12\\x1c\\n\\x0e\\x63omponent_type\\x18\\t \\x01(\\x0e\\x32\\x04.Rep\\x12\\x17\\n\\x0fimplicitly_null\\x18\\n \\x01(\\x08\\\"\\xa6\\x02\\n\\x19MetaDataOperationArgument\\x12\\x14\\n\\x0cstring_value\\x18\\x01 \\x01(\\t\\x12\\x12\\n\\nbool_value\\x18\\x02 \\x01(\\x08\\x12\\x11\\n\\tint_value\\x18\\x03 \\x01(\\x11\\x12\\x1b\\n\\x13string_array_values\\x18\\x04 \\x03(\\t\\x12\\x18\\n\\x10int_array_values\\x18\\x05 \\x03(\\x11\\x12\\x35\\n\\x04type\\x18\\x06 \\x01(\\x0e\\x32\\'.MetaDataOperationArgument.ArgumentType\\\"^\\n\\x0c\\x41rgumentType\\x12\\n\\n\\x06STRING\\x10\\x00\\x12\\x08\\n\\x04\\x42OOL\\x10\\x01\\x12\\x07\\n\\x03INT\\x10\\x02\\x12\\x13\\n\\x0fREPEATED_STRING\\x10\\x03\\x12\\x10\\n\\x0cREPEATED_INT\\x10\\x04\\x12\\x08\\n\\x04NULL\\x10\\x05\\\"\\xb0\\x01\\n\\nQueryState\\x12\\x18\\n\\x04type\\x18\\x01 \\x01(\\x0e\\x32\\n.StateType\\x12\\x0b\\n\\x03sql\\x18\\x02 \\x01(\\t\\x12\\x1e\\n\\x02op\\x18\\x03 \\x01(\\x0e\\x32\\x12.MetaDataOperation\\x12(\\n\\x04\\x61rgs\\x18\\x04 \\x03(\\x0b\\x32\\x1a.MetaDataOperationArgument\\x12\\x10\\n\\x08has_args\\x18\\x05 \\x01(\\x08\\x12\\x0f\\n\\x07has_sql\\x18\\x06 \\x01(\\x08\\x12\\x0e\\n\\x06has_op\\x18\\x07 \\x01(\\x08*\\x9f\\x01\\n\\rStatementType\\x12\\n\\n\\x06SELECT\\x10\\x00\\x12\\n\\n\\x06INSERT\\x10\\x01\\x12\\n\\n\\x06UPDATE\\x10\\x02\\x12\\n\\n\\x06\\x44\\x45LETE\\x10\\x03\\x12\\n\\n\\x06UPSERT\\x10\\x04\\x12\\t\\n\\x05MERGE\\x10\\x05\\x12\\r\\n\\tOTHER_DML\\x10\\x06\\x12\\n\\n\\x06\\x43REATE\\x10\\x07\\x12\\x08\\n\\x04\\x44ROP\\x10\\x08\\x12\\t\\n\\x05\\x41LTER\\x10\\t\\x12\\r\\n\\tOTHER_DDL\\x10\\n\\x12\\x08\\n\\x04\\x43\\x41LL\\x10\\x0b*\\xe2\\x03\\n\\x03Rep\\x12\\x15\\n\\x11PRIMITIVE_BOOLEAN\\x10\\x00\\x12\\x12\\n\\x0ePRIMITIVE_BYTE\\x10\\x01\\x12\\x12\\n\\x0ePRIMITIVE_CHAR\\x10\\x02\\x12\\x13\\n\\x0fPRIMITIVE_SHORT\\x10\\x03\\x12\\x11\\n\\rPRIMITIVE_INT\\x10\\x04\\x12\\x12\\n\\x0ePRIMITIVE_LONG\\x10\\x05\\x12\\x13\\n\\x0fPRIMITIVE_FLOAT\\x10\\x06\\x12\\x14\\n\\x10PRIMITIVE_DOUBLE\\x10\\x07\\x12\\x0b\\n\\x07\\x42OOLEAN\\x10\\x08\\x12\\x08\\n\\x04\\x42YTE\\x10\\t\\x12\\r\\n\\tCHARACTER\\x10\\n\\x12\\t\\n\\x05SHORT\\x10\\x0b\\x12\\x0b\\n\\x07INTEGER\\x10\\x0c\\x12\\x08\\n\\x04LONG\\x10\\r\\x12\\t\\n\\x05\\x46LOAT\\x10\\x0e\\x12\\n\\n\\x06\\x44OUBLE\\x10\\x0f\\x12\\x0f\\n\\x0b\\x42IG_INTEGER\\x10\\x19\\x12\\x0f\\n\\x0b\\x42IG_DECIMAL\\x10\\x1a\\x12\\x11\\n\\rJAVA_SQL_TIME\\x10\\x10\\x12\\x16\\n\\x12JAVA_SQL_TIMESTAMP\\x10\\x11\\x12\\x11\\n\\rJAVA_SQL_DATE\\x10\\x12\\x12\\x12\\n\\x0eJAVA_UTIL_DATE\\x10\\x13\\x12\\x0f\\n\\x0b\\x42YTE_STRING\\x10\\x14\\x12\\n\\n\\x06STRING\\x10\\x15\\x12\\n\\n\\x06NUMBER\\x10\\x16\\x12\\n\\n\\x06OBJECT\\x10\\x17\\x12\\x08\\n\\x04NULL\\x10\\x18\\x12\\t\\n\\x05\\x41RRAY\\x10\\x1b\\x12\\n\\n\\x06STRUCT\\x10\\x1c\\x12\\x0c\\n\\x08MULTISET\\x10\\x1d*^\\n\\x08Severity\\x12\\x14\\n\\x10UNKNOWN_SEVERITY\\x10\\x00\\x12\\x12\\n\\x0e\\x46\\x41TAL_SEVERITY\\x10\\x01\\x12\\x12\\n\\x0e\\x45RROR_SEVERITY\\x10\\x02\\x12\\x14\\n\\x10WARNING_SEVERITY\\x10\\x03*\\xd7\\x04\\n\\x11MetaDataOperation\\x12\\x12\\n\\x0eGET_ATTRIBUTES\\x10\\x00\\x12\\x1b\\n\\x17GET_BEST_ROW_IDENTIFIER\\x10\\x01\\x12\\x10\\n\\x0cGET_CATALOGS\\x10\\x02\\x12\\x1e\\n\\x1aGET_CLIENT_INFO_PROPERTIES\\x10\\x03\\x12\\x19\\n\\x15GET_COLUMN_PRIVILEGES\\x10\\x04\\x12\\x0f\\n\\x0bGET_COLUMNS\\x10\\x05\\x12\\x17\\n\\x13GET_CROSS_REFERENCE\\x10\\x06\\x12\\x15\\n\\x11GET_EXPORTED_KEYS\\x10\\x07\\x12\\x18\\n\\x14GET_FUNCTION_COLUMNS\\x10\\x08\\x12\\x11\\n\\rGET_FUNCTIONS\\x10\\t\\x12\\x15\\n\\x11GET_IMPORTED_KEYS\\x10\\n\\x12\\x12\\n\\x0eGET_INDEX_INFO\\x10\\x0b\\x12\\x14\\n\\x10GET_PRIMARY_KEYS\\x10\\x0c\\x12\\x19\\n\\x15GET_PROCEDURE_COLUMNS\\x10\\r\\x12\\x12\\n\\x0eGET_PROCEDURES\\x10\\x0e\\x12\\x16\\n\\x12GET_PSEUDO_COLUMNS\\x10\\x0f\\x12\\x0f\\n\\x0bGET_SCHEMAS\\x10\\x10\\x12\\x19\\n\\x15GET_SCHEMAS_WITH_ARGS\\x10\\x11\\x12\\x14\\n\\x10GET_SUPER_TABLES\\x10\\x12\\x12\\x13\\n\\x0fGET_SUPER_TYPES\\x10\\x13\\x12\\x18\\n\\x14GET_TABLE_PRIVILEGES\\x10\\x14\\x12\\x0e\\n\\nGET_TABLES\\x10\\x15\\x12\\x13\\n\\x0fGET_TABLE_TYPES\\x10\\x16\\x12\\x11\\n\\rGET_TYPE_INFO\\x10\\x17\\x12\\x0c\\n\\x08GET_UDTS\\x10\\x18\\x12\\x17\\n\\x13GET_VERSION_COLUMNS\\x10\\x19*\\\"\\n\\tStateType\\x12\\x07\\n\\x03SQL\\x10\\x00\\x12\\x0c\\n\\x08METADATA\\x10\\x01\\x42\\\"\\n org.apache.calcite.avatica.protob\\x06proto3')\nTypeError: Couldn't build proto file into descriptor pool: duplicate file name common.proto\n\nProcess finished with exit code 1\n\n\u6216\n File \"E:\\PyWorkSpace\\fastapi\\test.py\", line 2, in <module>\n    from langchain_milvus import  Milvus\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\langchain_milvus\\__init__.py\", line 1, in <module>\n    from langchain_milvus.retrievers import (\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\langchain_milvus\\retrievers\\__init__.py\", line 1, in <module>\n    from langchain_milvus.retrievers.milvus_hybrid_search import (\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\langchain_milvus\\retrievers\\milvus_hybrid_search.py\", line 7, in <module>\n    from pymilvus import AnnSearchRequest, Collection\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\pymilvus\\__init__.py\", line 14, in <module>\n    from .client.abstract import AnnSearchRequest, Hit, Hits, RRFRanker, SearchResult, WeightedRanker\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\pymilvus\\client\\abstract.py\", line 6, in <module>\n    from pymilvus.exceptions import DataTypeNotMatchException, ExceptionsMessage, MilvusException\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\pymilvus\\exceptions.py\", line 15, in <module>\n    from .grpc_gen import common_pb2\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\pymilvus\\grpc_gen\\__init__.py\", line 1, in <module>\n    from . import schema_pb2, milvus_pb2, common_pb2, feder_pb2, milvus_pb2_grpc\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\pymilvus\\grpc_gen\\schema_pb2.py\", line 15, in <module>\n    from . import common_pb2 as common__pb2\n  File \"E:\\PyWorkSpace\\fastapi\\venv\\lib\\site-packages\\pymilvus\\grpc_gen\\common_pb2.py\", line 18, in <module>\n    DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n\\x0c\\x63ommon.proto\\x12\\x13milvus.proto.common\\x1a google/protobuf/descriptor.proto\\\"\\xf3\\x01\\n\\x06Status\\x12\\x36\\n\\nerror_code\\x18\\x01 \\x01(\\x0e\\x32\\x1e.milvus.proto.common.ErrorCodeB\\x02\\x18\\x01\\x12\\x0e\\n\\x06reason\\x18\\x02 \\x01(\\t\\x12\\x0c\\n\\x04\\x63ode\\x18\\x03 \\x01(\\x05\\x12\\x11\\n\\tretriable\\x18\\x04 \\x01(\\x08\\x12\\x0e\\n\\x06\\x64\\x65tail\\x18\\x05 \\x01(\\t\\x12>\\n\\nextra_info\\x18\\x06 \\x03(\\x0b\\x32*.milvus.proto.common.Status.ExtraInfoEntry\\x1a\\x30\\n\\x0e\\x45xtraInfoEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t:\\x02\\x38\\x01\\\"*\\n\\x0cKeyValuePair\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t\\\"(\\n\\x0bKeyDataPair\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\x0c\\n\\x04\\x64\\x61ta\\x18\\x02 \\x01(\\x0c\\\"\\x15\\n\\x04\\x42lob\\x12\\r\\n\\x05value\\x18\\x01 \\x01(\\x0c\\\"c\\n\\x10PlaceholderValue\\x12\\x0b\\n\\x03tag\\x18\\x01 \\x01(\\t\\x12\\x32\\n\\x04type\\x18\\x02 \\x01(\\x0e\\x32$.milvus.proto.common.PlaceholderType\\x12\\x0e\\n\\x06values\\x18\\x03 \\x03(\\x0c\\\"O\\n\\x10PlaceholderGroup\\x12;\\n\\x0cplaceholders\\x18\\x01 \\x03(\\x0b\\x32%.milvus.proto.common.PlaceholderValue\\\"#\\n\\x07\\x41\\x64\\x64ress\\x12\\n\\n\\x02ip\\x18\\x01 \\x01(\\t\\x12\\x0c\\n\\x04port\\x18\\x02 \\x01(\\x03\\\"\\xaf\\x02\\n\\x07MsgBase\\x12.\\n\\x08msg_type\\x18\\x01 \\x01(\\x0e\\x32\\x1c.milvus.proto.common.MsgType\\x12\\r\\n\\x05msgID\\x18\\x02 \\x01(\\x03\\x12\\x11\\n\\ttimestamp\\x18\\x03 \\x01(\\x04\\x12\\x10\\n\\x08sourceID\\x18\\x04 \\x01(\\x03\\x12\\x10\\n\\x08targetID\\x18\\x05 \\x01(\\x03\\x12@\\n\\nproperties\\x18\\x06 \\x03(\\x0b\\x32,.milvus.proto.common.MsgBase.PropertiesEntry\\x12\\x39\\n\\rreplicateInfo\\x18\\x07 \\x01(\\x0b\\x32\\\".milvus.proto.common.ReplicateInfo\\x1a\\x31\\n\\x0fPropertiesEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t:\\x02\\x38\\x01\\\":\\n\\rReplicateInfo\\x12\\x13\\n\\x0bisReplicate\\x18\\x01 \\x01(\\x08\\x12\\x14\\n\\x0cmsgTimestamp\\x18\\x02 \\x01(\\x04\\\"7\\n\\tMsgHeader\\x12*\\n\\x04\\x62\\x61se\\x18\\x01 \\x01(\\x0b\\x32\\x1c.milvus.proto.common.MsgBase\\\"M\\n\\x0c\\x44MLMsgHeader\\x12*\\n\\x04\\x62\\x61se\\x18\\x01 \\x01(\\x0b\\x32\\x1c.milvus.proto.common.MsgBase\\x12\\x11\\n\\tshardName\\x18\\x02 \\x01(\\t\\\"\\xbb\\x01\\n\\x0cPrivilegeExt\\x12\\x34\\n\\x0bobject_type\\x18\\x01 \\x01(\\x0e\\x32\\x1f.milvus.proto.common.ObjectType\\x12>\\n\\x10object_privilege\\x18\\x02 \\x01(\\x0e\\x32$.milvus.proto.common.ObjectPrivilege\\x12\\x19\\n\\x11object_name_index\\x18\\x03 \\x01(\\x05\\x12\\x1a\\n\\x12object_name_indexs\\x18\\x04 \\x01(\\x05\\\"2\\n\\x0cSegmentStats\\x12\\x11\\n\\tSegmentID\\x18\\x01 \\x01(\\x03\\x12\\x0f\\n\\x07NumRows\\x18\\x02 \\x01(\\x03\\\"\\xd5\\x01\\n\\nClientInfo\\x12\\x10\\n\\x08sdk_type\\x18\\x01 \\x01(\\t\\x12\\x13\\n\\x0bsdk_version\\x18\\x02 \\x01(\\t\\x12\\x12\\n\\nlocal_time\\x18\\x03 \\x01(\\t\\x12\\x0c\\n\\x04user\\x18\\x04 \\x01(\\t\\x12\\x0c\\n\\x04host\\x18\\x05 \\x01(\\t\\x12?\\n\\x08reserved\\x18\\x06 \\x03(\\x0b\\x32-.milvus.proto.common.ClientInfo.ReservedEntry\\x1a/\\n\\rReservedEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t:\\x02\\x38\\x01\\\"\\xe3\\x01\\n\\nServerInfo\\x12\\x12\\n\\nbuild_tags\\x18\\x01 \\x01(\\t\\x12\\x12\\n\\nbuild_time\\x18\\x02 \\x01(\\t\\x12\\x12\\n\\ngit_commit\\x18\\x03 \\x01(\\t\\x12\\x12\\n\\ngo_version\\x18\\x04 \\x01(\\t\\x12\\x13\\n\\x0b\\x64\\x65ploy_mode\\x18\\x05 \\x01(\\t\\x12?\\n\\x08reserved\\x18\\x06 \\x03(\\x0b\\x32-.milvus.proto.common.ServerInfo.ReservedEntry\\x1a/\\n\\rReservedEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t:\\x02\\x38\\x01\\\">\\n\\x08NodeInfo\\x12\\x0f\\n\\x07node_id\\x18\\x01 \\x01(\\x03\\x12\\x0f\\n\\x07\\x61\\x64\\x64ress\\x18\\x02 \\x01(\\t\\x12\\x10\\n\\x08hostname\\x18\\x03 \\x01(\\t*\\xc7\\n\\n\\tErrorCode\\x12\\x0b\\n\\x07Success\\x10\\x00\\x12\\x13\\n\\x0fUnexpectedError\\x10\\x01\\x12\\x11\\n\\rConnectFailed\\x10\\x02\\x12\\x14\\n\\x10PermissionDenied\\x10\\x03\\x12\\x17\\n\\x13\\x43ollectionNotExists\\x10\\x04\\x12\\x13\\n\\x0fIllegalArgument\\x10\\x05\\x12\\x14\\n\\x10IllegalDimension\\x10\\x07\\x12\\x14\\n\\x10IllegalIndexType\\x10\\x08\\x12\\x19\\n\\x15IllegalCollectionName\\x10\\t\\x12\\x0f\\n\\x0bIllegalTOPK\\x10\\n\\x12\\x14\\n\\x10IllegalRowRecord\\x10\\x0b\\x12\\x13\\n\\x0fIllegalVectorID\\x10\\x0c\\x12\\x17\\n\\x13IllegalSearchResult\\x10\\r\\x12\\x10\\n\\x0c\\x46ileNotFound\\x10\\x0e\\x12\\x0e\\n\\nMetaFailed\\x10\\x0f\\x12\\x0f\\n\\x0b\\x43\\x61\\x63heFailed\\x10\\x10\\x12\\x16\\n\\x12\\x43\\x61nnotCreateFolder\\x10\\x11\\x12\\x14\\n\\x10\\x43\\x61nnotCreateFile\\x10\\x12\\x12\\x16\\n\\x12\\x43\\x61nnotDeleteFolder\\x10\\x13\\x12\\x14\\n\\x10\\x43\\x61nnotDeleteFile\\x10\\x14\\x12\\x13\\n\\x0f\\x42uildIndexError\\x10\\x15\\x12\\x10\\n\\x0cIllegalNLIST\\x10\\x16\\x12\\x15\\n\\x11IllegalMetricType\\x10\\x17\\x12\\x0f\\n\\x0bOutOfMemory\\x10\\x18\\x12\\x11\\n\\rIndexNotExist\\x10\\x19\\x12\\x13\\n\\x0f\\x45mptyCollection\\x10\\x1a\\x12\\x1b\\n\\x17UpdateImportTaskFailure\\x10\\x1b\\x12\\x1a\\n\\x16\\x43ollectionNameNotFound\\x10\\x1c\\x12\\x1b\\n\\x17\\x43reateCredentialFailure\\x10\\x1d\\x12\\x1b\\n\\x17UpdateCredentialFailure\\x10\\x1e\\x12\\x1b\\n\\x17\\x44\\x65leteCredentialFailure\\x10\\x1f\\x12\\x18\\n\\x14GetCredentialFailure\\x10 \\x12\\x18\\n\\x14ListCredUsersFailure\\x10!\\x12\\x12\\n\\x0eGetUserFailure\\x10\\\"\\x12\\x15\\n\\x11\\x43reateRoleFailure\\x10#\\x12\\x13\\n\\x0f\\x44ropRoleFailure\\x10$\\x12\\x1a\\n\\x16OperateUserRoleFailure\\x10%\\x12\\x15\\n\\x11SelectRoleFailure\\x10&\\x12\\x15\\n\\x11SelectUserFailure\\x10\\'\\x12\\x19\\n\\x15SelectResourceFailure\\x10(\\x12\\x1b\\n\\x17OperatePrivilegeFailure\\x10)\\x12\\x16\\n\\x12SelectGrantFailure\\x10*\\x12!\\n\\x1dRefreshPolicyInfoCacheFailure\\x10+\\x12\\x15\\n\\x11ListPolicyFailure\\x10,\\x12\\x12\\n\\x0eNotShardLeader\\x10-\\x12\\x16\\n\\x12NoReplicaAvailable\\x10.\\x12\\x13\\n\\x0fSegmentNotFound\\x10/\\x12\\r\\n\\tForceDeny\\x10\\x30\\x12\\r\\n\\tRateLimit\\x10\\x31\\x12\\x12\\n\\x0eNodeIDNotMatch\\x10\\x32\\x12\\x14\\n\\x10UpsertAutoIDTrue\\x10\\x33\\x12\\x1c\\n\\x18InsufficientMemoryToLoad\\x10\\x34\\x12\\x18\\n\\x14MemoryQuotaExhausted\\x10\\x35\\x12\\x16\\n\\x12\\x44iskQuotaExhausted\\x10\\x36\\x12\\x15\\n\\x11TimeTickLongDelay\\x10\\x37\\x12\\x11\\n\\rNotReadyServe\\x10\\x38\\x12\\x1b\\n\\x17NotReadyCoordActivating\\x10\\x39\\x12\\x0f\\n\\x0b\\x44\\x61taCoordNA\\x10\\x64\\x12\\x12\\n\\rDDRequestRace\\x10\\xe8\\x07\\x1a\\x02\\x18\\x01*c\\n\\nIndexState\\x12\\x12\\n\\x0eIndexStateNone\\x10\\x00\\x12\\x0c\\n\\x08Unissued\\x10\\x01\\x12\\x0e\\n\\nInProgress\\x10\\x02\\x12\\x0c\\n\\x08\\x46inished\\x10\\x03\\x12\\n\\n\\x06\\x46\\x61iled\\x10\\x04\\x12\\t\\n\\x05Retry\\x10\\x05*\\x82\\x01\\n\\x0cSegmentState\\x12\\x14\\n\\x10SegmentStateNone\\x10\\x00\\x12\\x0c\\n\\x08NotExist\\x10\\x01\\x12\\x0b\\n\\x07Growing\\x10\\x02\\x12\\n\\n\\x06Sealed\\x10\\x03\\x12\\x0b\\n\\x07\\x46lushed\\x10\\x04\\x12\\x0c\\n\\x08\\x46lushing\\x10\\x05\\x12\\x0b\\n\\x07\\x44ropped\\x10\\x06\\x12\\r\\n\\tImporting\\x10\\x07*\\x94\\x01\\n\\x0fPlaceholderType\\x12\\x08\\n\\x04None\\x10\\x00\\x12\\x10\\n\\x0c\\x42inaryVector\\x10\\x64\\x12\\x0f\\n\\x0b\\x46loatVector\\x10\\x65\\x12\\x11\\n\\rFloat16Vector\\x10\\x66\\x12\\x12\\n\\x0e\\x42\\x46loat16Vector\\x10g\\x12\\x15\\n\\x11SparseFloatVector\\x10h\\x12\\t\\n\\x05Int64\\x10\\x05\\x12\\x0b\\n\\x07VarChar\\x10\\x15*\\x8b\\x11\\n\\x07MsgType\\x12\\r\\n\\tUndefined\\x10\\x00\\x12\\x14\\n\\x10\\x43reateCollection\\x10\\x64\\x12\\x12\\n\\x0e\\x44ropCollection\\x10\\x65\\x12\\x11\\n\\rHasCollection\\x10\\x66\\x12\\x16\\n\\x12\\x44\\x65scribeCollection\\x10g\\x12\\x13\\n\\x0fShowCollections\\x10h\\x12\\x14\\n\\x10GetSystemConfigs\\x10i\\x12\\x12\\n\\x0eLoadCollection\\x10j\\x12\\x15\\n\\x11ReleaseCollection\\x10k\\x12\\x0f\\n\\x0b\\x43reateAlias\\x10l\\x12\\r\\n\\tDropAlias\\x10m\\x12\\x0e\\n\\nAlterAlias\\x10n\\x12\\x13\\n\\x0f\\x41lterCollection\\x10o\\x12\\x14\\n\\x10RenameCollection\\x10p\\x12\\x11\\n\\rDescribeAlias\\x10q\\x12\\x0f\\n\\x0bListAliases\\x10r\\x12\\x14\\n\\x0f\\x43reatePartition\\x10\\xc8\\x01\\x12\\x12\\n\\rDropPartition\\x10\\xc9\\x01\\x12\\x11\\n\\x0cHasPartition\\x10\\xca\\x01\\x12\\x16\\n\\x11\\x44\\x65scribePartition\\x10\\xcb\\x01\\x12\\x13\\n\\x0eShowPartitions\\x10\\xcc\\x01\\x12\\x13\\n\\x0eLoadPartitions\\x10\\xcd\\x01\\x12\\x16\\n\\x11ReleasePartitions\\x10\\xce\\x01\\x12\\x11\\n\\x0cShowSegments\\x10\\xfa\\x01\\x12\\x14\\n\\x0f\\x44\\x65scribeSegment\\x10\\xfb\\x01\\x12\\x11\\n\\x0cLoadSegments\\x10\\xfc\\x01\\x12\\x14\\n\\x0fReleaseSegments\\x10\\xfd\\x01\\x12\\x14\\n\\x0fHandoffSegments\\x10\\xfe\\x01\\x12\\x18\\n\\x13LoadBalanceSegments\\x10\\xff\\x01\\x12\\x15\\n\\x10\\x44\\x65scribeSegments\\x10\\x80\\x02\\x12\\x1c\\n\\x17\\x46\\x65\\x64\\x65rListIndexedSegment\\x10\\x81\\x02\\x12\\\"\\n\\x1d\\x46\\x65\\x64\\x65rDescribeSegmentIndexData\\x10\\x82\\x02\\x12\\x10\\n\\x0b\\x43reateIndex\\x10\\xac\\x02\\x12\\x12\\n\\rDescribeIndex\\x10\\xad\\x02\\x12\\x0e\\n\\tDropIndex\\x10\\xae\\x02\\x12\\x17\\n\\x12GetIndexStatistics\\x10\\xaf\\x02\\x12\\x0f\\n\\nAlterIndex\\x10\\xb0\\x02\\x12\\x0b\\n\\x06Insert\\x10\\x90\\x03\\x12\\x0b\\n\\x06\\x44\\x65lete\\x10\\x91\\x03\\x12\\n\\n\\x05\\x46lush\\x10\\x92\\x03\\x12\\x17\\n\\x12ResendSegmentStats\\x10\\x93\\x03\\x12\\x0b\\n\\x06Upsert\\x10\\x94\\x03\\x12\\x0b\\n\\x06Search\\x10\\xf4\\x03\\x12\\x11\\n\\x0cSearchResult\\x10\\xf5\\x03\\x12\\x12\\n\\rGetIndexState\\x10\\xf6\\x03\\x12\\x1a\\n\\x15GetIndexBuildProgress\\x10\\xf7\\x03\\x12\\x1c\\n\\x17GetCollectionStatistics\\x10\\xf8\\x03\\x12\\x1b\\n\\x16GetPartitionStatistics\\x10\\xf9\\x03\\x12\\r\\n\\x08Retrieve\\x10\\xfa\\x03\\x12\\x13\\n\\x0eRetrieveResult\\x10\\xfb\\x03\\x12\\x14\\n\\x0fWatchDmChannels\\x10\\xfc\\x03\\x12\\x15\\n\\x10RemoveDmChannels\\x10\\xfd\\x03\\x12\\x17\\n\\x12WatchQueryChannels\\x10\\xfe\\x03\\x12\\x18\\n\\x13RemoveQueryChannels\\x10\\xff\\x03\\x12\\x1d\\n\\x18SealedSegmentsChangeInfo\\x10\\x80\\x04\\x12\\x17\\n\\x12WatchDeltaChannels\\x10\\x81\\x04\\x12\\x14\\n\\x0fGetShardLeaders\\x10\\x82\\x04\\x12\\x10\\n\\x0bGetReplicas\\x10\\x83\\x04\\x12\\x13\\n\\x0eUnsubDmChannel\\x10\\x84\\x04\\x12\\x14\\n\\x0fGetDistribution\\x10\\x85\\x04\\x12\\x15\\n\\x10SyncDistribution\\x10\\x86\\x04\\x12\\x10\\n\\x0bSegmentInfo\\x10\\xd8\\x04\\x12\\x0f\\n\\nSystemInfo\\x10\\xd9\\x04\\x12\\x14\\n\\x0fGetRecoveryInfo\\x10\\xda\\x04\\x12\\x14\\n\\x0fGetSegmentState\\x10\\xdb\\x04\\x12\\r\\n\\x08TimeTick\\x10\\xb0\\t\\x12\\x13\\n\\x0eQueryNodeStats\\x10\\xb1\\t\\x12\\x0e\\n\\tLoadIndex\\x10\\xb2\\t\\x12\\x0e\\n\\tRequestID\\x10\\xb3\\t\\x12\\x0f\\n\\nRequestTSO\\x10\\xb4\\t\\x12\\x14\\n\\x0f\\x41llocateSegment\\x10\\xb5\\t\\x12\\x16\\n\\x11SegmentStatistics\\x10\\xb6\\t\\x12\\x15\\n\\x10SegmentFlushDone\\x10\\xb7\\t\\x12\\x0f\\n\\nDataNodeTt\\x10\\xb8\\t\\x12\\x0c\\n\\x07\\x43onnect\\x10\\xb9\\t\\x12\\x14\\n\\x0fListClientInfos\\x10\\xba\\t\\x12\\x13\\n\\x0e\\x41llocTimestamp\\x10\\xbb\\t\\x12\\x15\\n\\x10\\x43reateCredential\\x10\\xdc\\x0b\\x12\\x12\\n\\rGetCredential\\x10\\xdd\\x0b\\x12\\x15\\n\\x10\\x44\\x65leteCredential\\x10\\xde\\x0b\\x12\\x15\\n\\x10UpdateCredential\\x10\\xdf\\x0b\\x12\\x16\\n\\x11ListCredUsernames\\x10\\xe0\\x0b\\x12\\x0f\\n\\nCreateRole\\x10\\xc0\\x0c\\x12\\r\\n\\x08\\x44ropRole\\x10\\xc1\\x0c\\x12\\x14\\n\\x0fOperateUserRole\\x10\\xc2\\x0c\\x12\\x0f\\n\\nSelectRole\\x10\\xc3\\x0c\\x12\\x0f\\n\\nSelectUser\\x10\\xc4\\x0c\\x12\\x13\\n\\x0eSelectResource\\x10\\xc5\\x0c\\x12\\x15\\n\\x10OperatePrivilege\\x10\\xc6\\x0c\\x12\\x10\\n\\x0bSelectGrant\\x10\\xc7\\x0c\\x12\\x1b\\n\\x16RefreshPolicyInfoCache\\x10\\xc8\\x0c\\x12\\x0f\\n\\nListPolicy\\x10\\xc9\\x0c\\x12\\x18\\n\\x13\\x43reateResourceGroup\\x10\\xa4\\r\\x12\\x16\\n\\x11\\x44ropResourceGroup\\x10\\xa5\\r\\x12\\x17\\n\\x12ListResourceGroups\\x10\\xa6\\r\\x12\\x1a\\n\\x15\\x44\\x65scribeResourceGroup\\x10\\xa7\\r\\x12\\x11\\n\\x0cTransferNode\\x10\\xa8\\r\\x12\\x14\\n\\x0fTransferReplica\\x10\\xa9\\r\\x12\\x19\\n\\x14UpdateResourceGroups\\x10\\xaa\\r\\x12\\x13\\n\\x0e\\x43reateDatabase\\x10\\x89\\x0e\\x12\\x11\\n\\x0c\\x44ropDatabase\\x10\\x8a\\x0e\\x12\\x12\\n\\rListDatabases\\x10\\x8b\\x0e\\x12\\x12\\n\\rAlterDatabase\\x10\\x8c\\x0e\\x12\\x15\\n\\x10\\x44\\x65scribeDatabase\\x10\\x8d\\x0e*\\\"\\n\\x07\\x44slType\\x12\\x07\\n\\x03\\x44sl\\x10\\x00\\x12\\x0e\\n\\nBoolExprV1\\x10\\x01*B\\n\\x0f\\x43ompactionState\\x12\\x11\\n\\rUndefiedState\\x10\\x00\\x12\\r\\n\\tExecuting\\x10\\x01\\x12\\r\\n\\tCompleted\\x10\\x02*X\\n\\x10\\x43onsistencyLevel\\x12\\n\\n\\x06Strong\\x10\\x00\\x12\\x0b\\n\\x07Session\\x10\\x01\\x12\\x0b\\n\\x07\\x42ounded\\x10\\x02\\x12\\x0e\\n\\nEventually\\x10\\x03\\x12\\x0e\\n\\nCustomized\\x10\\x04*\\x9e\\x01\\n\\x0bImportState\\x12\\x11\\n\\rImportPending\\x10\\x00\\x12\\x10\\n\\x0cImportFailed\\x10\\x01\\x12\\x11\\n\\rImportStarted\\x10\\x02\\x12\\x13\\n\\x0fImportPersisted\\x10\\x05\\x12\\x11\\n\\rImportFlushed\\x10\\x08\\x12\\x13\\n\\x0fImportCompleted\\x10\\x06\\x12\\x1a\\n\\x16ImportFailedAndCleaned\\x10\\x07*2\\n\\nObjectType\\x12\\x0e\\n\\nCollection\\x10\\x00\\x12\\n\\n\\x06Global\\x10\\x01\\x12\\x08\\n\\x04User\\x10\\x02*\\xf5\\n\\n\\x0fObjectPrivilege\\x12\\x10\\n\\x0cPrivilegeAll\\x10\\x00\\x12\\x1d\\n\\x19PrivilegeCreateCollection\\x10\\x01\\x12\\x1b\\n\\x17PrivilegeDropCollection\\x10\\x02\\x12\\x1f\\n\\x1bPrivilegeDescribeCollection\\x10\\x03\\x12\\x1c\\n\\x18PrivilegeShowCollections\\x10\\x04\\x12\\x11\\n\\rPrivilegeLoad\\x10\\x05\\x12\\x14\\n\\x10PrivilegeRelease\\x10\\x06\\x12\\x17\\n\\x13PrivilegeCompaction\\x10\\x07\\x12\\x13\\n\\x0fPrivilegeInsert\\x10\\x08\\x12\\x13\\n\\x0fPrivilegeDelete\\x10\\t\\x12\\x1a\\n\\x16PrivilegeGetStatistics\\x10\\n\\x12\\x18\\n\\x14PrivilegeCreateIndex\\x10\\x0b\\x12\\x18\\n\\x14PrivilegeIndexDetail\\x10\\x0c\\x12\\x16\\n\\x12PrivilegeDropIndex\\x10\\r\\x12\\x13\\n\\x0fPrivilegeSearch\\x10\\x0e\\x12\\x12\\n\\x0ePrivilegeFlush\\x10\\x0f\\x12\\x12\\n\\x0ePrivilegeQuery\\x10\\x10\\x12\\x18\\n\\x14PrivilegeLoadBalance\\x10\\x11\\x12\\x13\\n\\x0fPrivilegeImport\\x10\\x12\\x12\\x1c\\n\\x18PrivilegeCreateOwnership\\x10\\x13\\x12\\x17\\n\\x13PrivilegeUpdateUser\\x10\\x14\\x12\\x1a\\n\\x16PrivilegeDropOwnership\\x10\\x15\\x12\\x1c\\n\\x18PrivilegeSelectOwnership\\x10\\x16\\x12\\x1c\\n\\x18PrivilegeManageOwnership\\x10\\x17\\x12\\x17\\n\\x13PrivilegeSelectUser\\x10\\x18\\x12\\x13\\n\\x0fPrivilegeUpsert\\x10\\x19\\x12 \\n\\x1cPrivilegeCreateResourceGroup\\x10\\x1a\\x12\\x1e\\n\\x1aPrivilegeDropResourceGroup\\x10\\x1b\\x12\\\"\\n\\x1ePrivilegeDescribeResourceGroup\\x10\\x1c\\x12\\x1f\\n\\x1bPrivilegeListResourceGroups\\x10\\x1d\\x12\\x19\\n\\x15PrivilegeTransferNode\\x10\\x1e\\x12\\x1c\\n\\x18PrivilegeTransferReplica\\x10\\x1f\\x12\\x1f\\n\\x1bPrivilegeGetLoadingProgress\\x10 \\x12\\x19\\n\\x15PrivilegeGetLoadState\\x10!\\x12\\x1d\\n\\x19PrivilegeRenameCollection\\x10\\\"\\x12\\x1b\\n\\x17PrivilegeCreateDatabase\\x10#\\x12\\x19\\n\\x15PrivilegeDropDatabase\\x10$\\x12\\x1a\\n\\x16PrivilegeListDatabases\\x10%\\x12\\x15\\n\\x11PrivilegeFlushAll\\x10&\\x12\\x1c\\n\\x18PrivilegeCreatePartition\\x10\\'\\x12\\x1a\\n\\x16PrivilegeDropPartition\\x10(\\x12\\x1b\\n\\x17PrivilegeShowPartitions\\x10)\\x12\\x19\\n\\x15PrivilegeHasPartition\\x10*\\x12\\x1a\\n\\x16PrivilegeGetFlushState\\x10+\\x12\\x18\\n\\x14PrivilegeCreateAlias\\x10,\\x12\\x16\\n\\x12PrivilegeDropAlias\\x10-\\x12\\x1a\\n\\x16PrivilegeDescribeAlias\\x10.\\x12\\x18\\n\\x14PrivilegeListAliases\\x10/\\x12!\\n\\x1dPrivilegeUpdateResourceGroups\\x10\\x30\\x12\\x1a\\n\\x16PrivilegeAlterDatabase\\x10\\x31\\x12\\x1d\\n\\x19PrivilegeDescribeDatabase\\x10\\x32*S\\n\\tStateCode\\x12\\x10\\n\\x0cInitializing\\x10\\x00\\x12\\x0b\\n\\x07Healthy\\x10\\x01\\x12\\x0c\\n\\x08\\x41\\x62normal\\x10\\x02\\x12\\x0b\\n\\x07StandBy\\x10\\x03\\x12\\x0c\\n\\x08Stopping\\x10\\x04*c\\n\\tLoadState\\x12\\x15\\n\\x11LoadStateNotExist\\x10\\x00\\x12\\x14\\n\\x10LoadStateNotLoad\\x10\\x01\\x12\\x14\\n\\x10LoadStateLoading\\x10\\x02\\x12\\x13\\n\\x0fLoadStateLoaded\\x10\\x03:^\\n\\x11privilege_ext_obj\\x12\\x1f.google.protobuf.MessageOptions\\x18\\xe9\\x07 \\x01(\\x0b\\x32!.milvus.proto.common.PrivilegeExtBm\\n\\x0eio.milvus.grpcB\\x0b\\x43ommonProtoP\\x01Z4github.com/milvus-io/milvus-proto/go-api/v2/commonpb\\xa0\\x01\\x01\\xaa\\x02\\x12Milvus.Client.Grpcb\\x06proto3')\nTypeError: Couldn't build proto file into descriptor pool: duplicate file name common.proto\n\nProcess finished with exit code 1\n\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-07-28", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Songjiadong"}
{"issue_number": 2199, "issue_title": "[Enhancement]: Hide unnecessary fields when outputting", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nhide unnecessary fields when outputting, like cost or extra_info\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-07-26", "closed_at": "2024-07-29", "labels": ["kind/enhancement"], "State": "closed", "Author": "SimFG"}
{"issue_number": 2198, "issue_title": "[Bug]: async is not working with collection.search", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ncollection.search with _async=True  is not rea\nExpected Behavior\nExpected to work asynchronous.\nSteps/Code To Reproduce behavior\nMilvusDB.connect_to_milvus()\n  collection = Collection(name=collection_name)\n\n  loop = asyncio.get_event_loop()\n  query_vector = await loop.run_in_executor(None, text_to_vector,  user_input, embeddings_model)\n\n  search_future = collection.search(data=[query_vector], anns_field=\"vector\", param=search_params,\n                              limit=search_params[\"limit\"], _async=True)\n\n  results = await loop.run_in_executor(None, search_future.result)\n  print(results)\n  print(type(results))\n\n  ids = []\n  for result in results:\n      for hit in result:\n          ids.append(hit.id)\n\n  documents = await loop.run_in_executor(None, fetch_documents_by_ids, collection, ids)\n  print(type(documents))\n  print(len(documents))\n\nThis code works but is not asynchronous.\nsearch_future = collection.search(data=[query_vector], anns_field=\"vector\", param=search_params,\n                              limit=search_params[\"limit\"], _async=True)\n\nresults = await loop.run_in_executor(None, search_future.result)\n\n\nthis piece is definetly taking most time, so problem likely here.\nEverything is blocked, even menu not working.\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS: Win11, Ubuntu 22.04, CPU: i9-990k, GPU-1080ti, Memory-64GB):\n- Method of installation Docker\n- Milvus version (v2.4.0, or v2.4.4):\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\nAnything else?\nNo response", "created_at": "2024-07-24", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Tolkoton"}
{"issue_number": 2197, "issue_title": "[Bug]: VRAM Memory leakage embedding documents", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen using the encode docuements function to create vectors, used memory is increased and does not decrease, resulting in a CUDA out of memory error when it tries to allocate memory.\n`torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 11.88 GiB. GPU\n\nExpected Behavior\nAm i missing something or should the memory usage decrease after embeddign the neccesary docuemnts and inserting them in the database\nSteps/Code To Reproduce behavior\nThis is ran once at initialization\n`embedding_fn = BGEM3EmbeddingFunction(device=\"cuda\")`\n\nEncoding of the vectors increases memory usage \n\n        print(\"Start embedding vectors\")\n        vectors = self.embedding_fn.encode_documents([i[\"text\"] for i in docs])   #<- This line increases VRAM memory usage\n\n        data = [\n\n            docs[i] | {\"id\": i, \"vector\": vectors[\"dense\"][i]} for i in range(len(docs))\n\n        ]\n        print(\"Inserting data\")\n        self.client.insert(self.db_collection_name, data=data)\n        print(\"end\")\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n    Ran on Windows 11 machine using NVIDIA RTX A1000 6GB \n\n- Milvus version (v0.3.1, or v0.4.0):\n    pymilvus version v2.4.4\n    pytorch version 2.3.1+cu121\n\nAnything else?\nNo response", "created_at": "2024-07-24", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "LexBosch"}
{"issue_number": 2271, "issue_title": "[Bug]: AmbiguousIndexName when create local vectorStore", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI try to create local vectorStore following  https://milvus.io/docs/zh/integrate_with_llamaindex.md\nvector_store = MilvusVectorStore(uri=\"./milvus_demo.db\", dim=1536, overwrite=True)\nBut got error :\nRPC error: [describe_index], <AmbiguousIndexName: (code=1, message=There are multiple indexes, please specify the index_name.)>, <Time:{'RPC start': '2024-09-24 09:29:48.706720', 'RPC error': '2024-09-24 09:29:48.707154'}>\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/llama_index/vector_stores/milvus/base.py\", line 306, in __init__\n    self._create_index_if_required()\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/llama_index/vector_stores/milvus/base.py\", line 790, in _create_index_if_required\n    self._create_dense_index()\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/llama_index/vector_stores/milvus/base.py\", line 801, in _create_dense_index\n    index_exists = self._collection.has_index()\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/orm/collection.py\", line 1451, in has_index\n    conn.describe_index(self._name, index_name, timeout=timeout, **copy_kwargs) is not None\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/decorators.py\", line 148, in handler\n    raise e from e\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/decorators.py\", line 144, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/decorators.py\", line 183, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/decorators.py\", line 123, in handler\n    raise e from e\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/decorators.py\", line 87, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 1063, in describe_index\n    raise AmbiguousIndexName(message=ExceptionsMessage.AmbiguousIndexName)\npymilvus.exceptions.AmbiguousIndexName: <AmbiguousIndexName: (code=1, message=There are multiple indexes, please specify the index_name.)>\n>>> \n\nWhat's wrong with it ?\nHow to create local vectorStore ?\nExpected Behavior\nI want to create a milvus_demo.db locally.\nSteps/Code To Reproduce behavior\nfrom llama_index.core import VectorStoreIndex, StorageContext\nfrom llama_index.vector_stores.milvus import MilvusVectorStore\n\n\nvector_store = MilvusVectorStore(\n    uri=\"./milvus_demo.db\", dim=1536, overwrite=True\n)\nEnvironment details\n- macOS M2 14.3 \n- pip install pymilvus ( 2.4.6 )\nAnything else?\nI try to connect localhost:19530 and successed\u3002", "created_at": "2024-09-24", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "vio-ez"}
{"issue_number": 2270, "issue_title": "[QUESTION]: When I use multiple threads to request Milvus' data, why do I have good QPS growth for 1,2,3 threads, but no QPS growth for more than 3 threads?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nWhen I use multiple threads to request Milvus' data, why do I have good QPS growth for 1,2,3 threads, but no QPS growth for more than 3 threads? Standalone version using Docker deployment. Start with standalone_embed.sh without the user.yaml file.\n    def multi_query(self, X: numpy.array, n: int, num_threads: int):\n\n        if not self.collection:\n            self.collection = Collection(self.collection_name, consistence_level=\"STRONG\")\n            self.load_collection()\n\n        total_count = len(X)\n        per_count = total_count / 10\n        def single_query(idx, v, n):\n            try:\n                # conn = conn_pool.get_connection()\n                start = time.time()\n                results = self.collection.search(\n                    data=[v.tolist()],\n                    anns_field=\"vector\",\n                    param=self.search_params,\n                    limit=n,\n                    output_fields=[\"id\", \"vector\"])\n                total = time.time() - start\n                res = [(v, r.entity.get(\"id\"), r.entity.get(\"vector\")) for r in results[0]]\n                if (idx + 1) % per_count == 0:\n                    print(\n                        f\"Read Processed: {round((idx + 1) / total_count * 100, 1)}%\uff0cComplete\uff1a{time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())}\")\n                return (start, total, res)\n            except Exception as e:\n                print(f\"Error executing query: {e}\")\n                return None\n            # finally:\n            #     if conn is not None:\n            #         conn_pool.release_connection(conn)\n\n        with ThreadPoolExecutor(max_workers=num_threads) as pool:\n            results = pool.map(lambda idx_v: single_query(idx_v[0], idx_v[1], n), enumerate(X))\n        self.res = [result for result in results if result is not None]\n\nAnything else?\nNo response", "created_at": "2024-09-23", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "HungryFour"}
{"issue_number": 2269, "issue_title": "[Bug]:The ElementType value is not set in InsertRequest for the array data type.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nIt may lead to data type mismatches on the server for array data types.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-09-20", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "jaime0815"}
{"issue_number": 2267, "issue_title": "pymilvus fails to connect / instantiate a db server locally on AWS SageMaker", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nMilvusLite doesn't work / start the server locally. Documentation suggests that local uri should start the server automatically, but it fails. Getting the same exception with llama_index.vector_stores.MilvusVectorStore\nEnvironment: AWS SageMaker Notebook instance.\nversions:\n\npymilvus 2.4.6\nmilvus-lite 2.4.10\n\nfrom pymilvus import MilvusClient\n\nclient = MilvusClient(\"./milvus.db\")\n\n\n/home/ec2-user/anaconda3/envs/pytorch_p310/lib/python3.10/site-packages/milvus_lite/lib/milvus: /lib64/libc.so.6: version `GLIBC_2.28' not found (required by /home/ec2-user/anaconda3/envs/pytorch_p310/lib/python3.10/site-packages/milvus_lite/lib/milvus)\nFailed to create new connection using: 5aef7778d6df45ef9ddf553a79894057\n\nFile ~/anaconda3/envs/pytorch_p310/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py:150, in GrpcHandler._wait_for_channel_ready(self, timeout)\n    148     self._setup_identifier_interceptor(self._user, timeout=timeout)\n    149 except grpc.FutureTimeoutError as e:\n--> 150     raise MilvusException(\n    151         code=Status.CONNECT_FAILED,\n    152         message=f\"Fail connecting to server on {self._address}, illegal connection params or server unavailable\",\n    153     ) from e\n    154 except Exception as e:\n    155     raise e from e\n\nMilvusException: <MilvusException: (code=2, message=Fail connecting to server on unix:/tmp/tmpc4s187rx_milvus.db.sock, illegal connection params or server unavailable)>\n\nEnvironment details\npymilvus 2.4.6\nmilvus-lite 2.4.10", "created_at": "2024-09-18", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "kevalshah90"}
{"issue_number": 2266, "issue_title": "[Enhancement]:  support ipv6", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nsdk support ipv6 connect.\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-09-18", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "pingliu"}
{"issue_number": 2265, "issue_title": "[Bug]:  _fast_create_collection shouldn't assume AUTOINDEX, if not schema is provided in the arguments", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nIf you pass index_params but no schema, the resulting collection will be created with wrong index_type (AUTOINDEX) instead of the one provided in index_params.\nIf the create_collection method of the _milvusclient does not receive the schema parameter, it uses the method  _fast_create_collection, in which it creates the collection, a schema with auto_id, but when creating the index it does so with index_type with value \u201c\u201d which translates into an index_type of type AUTOINDEX, with the parameters of a HNSW index type (m and efconstruction).\nExpected Behavior\nShould check in kwargs, the presence of index_params, to apply the proper configuration to the index of the collection.\nSteps/Code To Reproduce behavior\nIn the case of **pymilvus**, I'm aware that it is used by other frameworks, so maybe the workaround presented needs to improved. Please look at the workoarund presented below\nEnvironment details\n- Python v3.11.9\n- pymilvus 2.4.6\n- milvus-lite 2.4.9\nAnything else?\n\nRelated issue : I've provided details and code to reproduce the error.\n\nHere is the code to test it:\nimport logging\nimport sys\nimport warnings\nimport os\nfrom llama_index.vector_stores.milvus import MilvusVectorStore\n\nfrom pymilvus import MilvusClient,DataType, FieldSchema, Collection, CollectionSchema\n\nwarnings.filterwarnings('ignore')\n\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\nlogging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\n\ncollection_name = \"unstructured_512_e5_multilingual_large_v3\"\ndim=1024\nMAX_LENGTH=65000\n\ndef create_database(db_name,dim):\n    try:\n        client = MilvusClient(db_name)\n        schema = CollectionSchema([\n            FieldSchema(\"id\", DataType.INT64, is_primary=True),\n            FieldSchema(\"vector\", DataType.FLOAT_VECTOR, dim=dim),\n            FieldSchema(name=\"page_content\", dtype=DataType.VARCHAR, max_length=MAX_LENGTH),\n            FieldSchema(name=\"source\", dtype=DataType.VARCHAR, max_length=500),\n        ],\"\",auto_id=True, enable_dynamic_field=True)\n        \n\n        index_params = client.prepare_index_params()\n        index_params.add_index(\n            field_name=\"vector\",\n            index_type=\"FLAT\",\n            index_name=\"vector_index\",\n            params={\n                \"metric_type\" :\"COSINE\"\n            }    \n        )\n        \n        client.create_collection(\n            collection_name=collection_name,\n            schema=schema,\n            index_params=index_params,\n            consistency_level=\"Strong\"\n        )\n\n        print(f\"Collection [{collection_name}] created\")\n    except Exception as e:\n        print(\"Something went wrong\")\n        print(e)\n\n\n# Create VDB with pymilvus\ncreate_database('./test_milvus_lite.db',dim)\n\nvector_store = MilvusVectorStore(\n    dim=dim,\n    collection_name=collection_name,\n    uri=\"./test_milvus_lite.db\",\n    embedding_field=\"vector\",\n    similarity_metric=\"cosine\",\n    index_management=\"no_validation\"\n)\n\nvector_store_new = MilvusVectorStore(\n    dim=1024,\n    collection_name=collection_name,\n    uri=\"./test_flat.db\",\n    embedding_field=\"vector\",\n    similarity_metric=\"cosine\",\n    index_config={\n        \"index_type\": \"FLAT\",\n        \"params\": {\n            \"metric_type\" : \"COSINE\"\n        } \n    },\n    overwrite=True\n)\ntry:\n    # db connections\n    conn = vector_store.client._get_connection()\n    conn_new = vector_store_new.client._get_connection()\n\n    # indexes\n    indexes = conn.list_indexes(collection_name=collection_name)\n    indexes_new = conn_new.list_indexes(collection_name=collection_name)\n    index_name = indexes[0].__getattribute__('index_name')\n    index_name_new = indexes_new[0].__getattribute__('index_name')\n\n    # comparison\n\n    print(f\"[test_milvus_lite.db]: [{index_name}]\")\n    print(conn.describe_index(collection_name=collection_name,index_name=index_name))\n    print(f\"[test_flat.db]: [{index_name_new}]\")\n    print(conn_new.describe_index(collection_name=collection_name,index_name=index_name_new))\n\nexcept Exception as e:\n    print(e)\nOutput:\n[test_milvus_lite.db]: [vector_index]\n{'index_type': 'FLAT', 'metric_type': 'COSINE', 'dim': '1024', 'field_name': 'vector', 'index_name': 'vector_index', 'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0, 'state': 'Finished'}\n[test_flat.db]: [vector]\n{'M': '18', 'efConstruction': '240', 'index_type': 'AUTOINDEX', 'metric_type': 'COSINE', 'dim': '1024', 'field_name': 'vector', 'index_name': 'vector', 'total_rows': 0, 'indexed_rows': 0, 'pending_index_rows': 0, 'state': 'Finished'}\nWorkaround\n\nIn milvus_client_py:\n\n         if \u201cindex_config\u201d in kwargs and \u201cindex_type\u201d in kwargs['index_config']:\n             index_type = kwargs['index_config']['index_type']]\n         else:\n             index_type = \u201cAUTOINDEX.\u201d\n \n         # index_params.add_index(vector_field_name,\u201c\u201d,\u201c\u201d, metric_type=metric_type)\n         index_params.add_index(field_name=vector_field_name,index_type=index_type,metric_type=metric_type)", "created_at": "2024-09-17", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "jbtelice"}
{"issue_number": 2264, "issue_title": "[Bug]: Async operation is not working as expected for search in collection by using pymilvus ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI am trying to perform searching in the collection asynchronously and  using pymilvus by passing _async as true along with a call back function  it was running in the sync way instead of async . And tried to run the same collection.search. on different threads then also the database it self is running the search operation one by one .\nExpected Behavior\nThe queries should run parallel or asynchronously.\nSteps/Code To Reproduce behavior\ndef milvus_search(embedding_query):\n    collection = Collection(\"bank\")\n    return collection.search(data=[embedding_query],\n                                      anns_field=\"vector\",\n                                      param=search_params,\n                                      limit=10,\n                                      kwargs={\"_async\": True, \"_callback\": handle_result}\n                                      )\n\nasync def search() -> SearchResult:\n    embedding_function = HuggingFaceEmbeddings(model_name=\"sentence-transformers/all-MiniLM-L6-v2\")\n    embedding_query = embedding_function.embed_query(\"sso\")\n    search_future = await asyncio.to_thread(\n        milvus_search,\n        embedding_query\n    )\nreturn search_future\n\n\nasync def something() -> None:\n    start =time.time()\n\n    search_tasks = [search() for _ in range(2)]\n    await asyncio.gather(*search_tasks)\n    end = time.time()\n\n    print(f\"took{start - end} \")\n\n\nif __name__ == \"__main__\":\n    asyncio.run(something())\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-09-17", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "V-N-Bhat"}
{"issue_number": 2263, "issue_title": "[Bug]: search doesn't support jacard, error: vector type must be the same, field tag_embedding - type VECTOR_BINARY, search info type VECTOR_FLOAT", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI saw that Milvus search support Jaccard, see here.\nI created a new collection:\nschema.add_field(field_name=\"tag_embedding\", datatype=DataType.BINARY_VECTOR, dim=512) index_params.add_index(field_name=\"tag_embedding\",index_type=\"BIN_IVF_FLAT\",metric_type=\"JACCARD\",params={ \"nlist\": 1 }) client.create_collection(collection_name=\"NewsArticle3\", schema=schema, index_params=index_params)\nthe search code didn't work:\n    res = client.search(collection_name=\"\", data=[tag[0]], output_fields=[\"pkid\", 'dt', 'title'],  anns_field=\"tag_embedding\", search_params={\"metric_type\": \"JACCARD\"})\nthe error:\nRPC error: [search], <MilvusException: (code=65535, message=fail to search on QueryNode 16: worker(16) query failed: Assert \"static_cast<int>(field_meta.get_data_type()) == static_cast<int>(info.type())\" at /workspace/source/internal/core/src/query/Plan.cpp:48 => vector type must be the same, field tag_embedding - type VECTOR_BINARY, search info type VECTOR_FLOAT)>, <Time:{'RPC start': '2024-09-13 12:29:02.983272', 'RPC error': '2024-09-13 12:29:03.717092'}> Failed to search collection: NewsArticle3 Traceback (most recent call last): File \"/mnt/g/project/QAnything-master/document_parase3.py\", line 105, in <module> newsSimilarityTag(news_id=news_id, limit=2) File \"/mnt/g/project/QAnything-master/document_parase3.py\", line 91, in newsSimilarityTag res = client.search(collection_name=\"NewsArticle3\", data=[tag[0]], limit=limit, output_fields=[\"pkid\", 'dt', 'title'], filter='dt > \"2024-09-01\"' + filter_id, anns_field=\"tag_embedding\", search_params={\"metric_type\": \"JACCARD\"}) File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 336, in search raise ex from ex File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 322, in search res = conn.search( File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/decorators.py\", line 148, in handler raise e from e File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/decorators.py\", line 144, in handler return func(*args, **kwargs) File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/decorators.py\", line 183, in handler return func(self, *args, **kwargs) File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/decorators.py\", line 123, in handler raise e from e File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/decorators.py\", line 87, in handler return func(*args, **kwargs) File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 800, in search return self._execute_search(request, timeout, round_decimal=round_decimal, **kwargs) File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 741, in _execute_search raise e from e File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 734, in _execute_search check_status(response.status) File \"/home/sumscope/anaconda3/envs/qany/lib/python3.10/site-packages/pymilvus/client/utils.py\", line 63, in check_status raise MilvusException(status.code, status.reason, status.error_code) pymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=fail to search on QueryNode 16: worker(16) query failed: Assert \"static_cast<int>(field_meta.get_data_type()) == static_cast<int>(info.type())\" at /workspace/source/internal/core/src/query/Plan.cpp:48 => vector type must be the same, field tag_embedding - type VECTOR_BINARY, search info type VECTOR_FLOAT)>\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):Docker\n- Milvus version (v0.3.1, or v0.4.0):2.4.6\n- Milvus configuration (Settings you made in `server_config.yaml`):", "created_at": "2024-09-13", "closed_at": "2024-09-14", "labels": ["kind/bug"], "State": "closed", "Author": "wei167"}
{"issue_number": 2261, "issue_title": "[Enhancement]: Add iterator tag on sdk-side for query iterator", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nCurrently, query_iterator doesn't pass iterator tag to milvus and use reduce_stop_for_best instead to signify it's the request from iterator, making it hard to keep correct as reduce_stop_for_best has been open to users.\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-09-11", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 2260, "issue_title": "[Bug]: Search reduce result is unexpected", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nCreate a collection.\nInsert 3 entities with the same ID, but different vectors.\nSearch with the first vector, set output_fields=[\"id\", \"vector\"]\nReturn one entity, the distance is 1, but the vector is not the first vector.\nUse this script to test:\nfrom pymilvus import (\n    MilvusClient\n)\n\nclient = MilvusClient(uri=\"http://localhost:19530\")  # standalone\n\ncollection_name=\"demo_collection\"\nclient.drop_collection(collection_name)\nclient.create_collection(collection_name=collection_name, dimension=4)\n\nclient.insert(collection_name=collection_name,data={\"id\": 5, \"vector\": [1,2,3,4]})\nclient.insert(collection_name=collection_name,data={\"id\": 5, \"vector\": [2,2,2,2]})\nclient.insert(collection_name=collection_name,data={\"id\": 5, \"vector\": [3,3,3,3]})\n\nprint(client.query(collection_name=collection_name, filter=\"\", output_fields=[\"count(*)\"], consistency_level=\"Strong\"))\n\nquery_embeddings = [[1,2,3,4]]\nresult = client.search(\n    collection_name=collection_name,\n    data=query_embeddings,\n    limit=6,\n    output_fields=[\"id\", \"vector\"],\n)\nprint(\"Search results\")\nfor hits in result:\n    for hit in hits:\n        print(f\"hit: {hit}\")\n\nIt returns:\ndata: [\"{'count(*)': 3}\"] \nSearch results\nhit: {'id': 5, 'distance': 0.9999999403953552, 'entity': {'vector': [3.0, 3.0, 3.0, 3.0], 'id': 5}}\n\nThe 'distance' is 0.9999999, but the 'vector' is [3.0, 3.0, 3.0, 3.0], I suppose it should return [1,2,3,4].\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): 2.4.9\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-09-11", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "yhmo"}
{"issue_number": 2255, "issue_title": "[QUESTION]: Sparse Embedding add and delete", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nDoes Sparse Embedding support \"add\" and \"delete\"? For example, I only see \"clear\" in BM25EmbeddingFunction\" but no add and delete function.\nAnything else?\nNo response", "created_at": "2024-09-05", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "Wolf-broken"}
{"issue_number": 2253, "issue_title": "[Enhancement]: Support Milvus SearchGroupBy Size and HybridSearchGroupBy", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\ntwo main requirement points:\n\nsearch_group_by need to enable users to control the final count of result\nsupport hybridSearchGroup which need to tell milvus what rank_group_scorer is wanted by users\n\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-09-05", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 2248, "issue_title": "[Bug]: offset does not take effect when it is in param[\"params\"]", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ntest case\n\n    @pytest.mark.tags(CaseLabel.L1)\n    @pytest.mark.parametrize(\"vector_data_type\", [\"FLOAT_VECTOR\"])\n    def test_search_with_offset_normal(self, vector_data_type):\n        \"\"\"\n        target: test search iterator normal\n        method: 1. search iterator\n                2. check the result, expect pk\n        expected: search successfully\n        \"\"\"\n        # 1. initialize with data\n        dim = 128\n\n        collection_w = self.init_collection_wrap()\n        collection_w = self.init_collection_general(prefix, insert_data=False, dim=dim, is_index=False,\n                                                    vector_data_type=vector_data_type)[0]\n        data = [\n            {\n                \"int64\": i,\n                \"float\": i * 1.0,\n                \"varchar\": str(i),\n                \"json_field\": {f\"key_{i}\": f\"value_{i}\"},\n                \"float_vector\": [1, i] + [0 for _ in range(dim - 2)]\n            }\n            for i in range(3000)\n        ]\n        collection_w.insert(data)\n\n        collection_w.create_index(field_name, {\"metric_type\": \"L2\"})\n        collection_w.load()\n        # search with offset\n        search_params = {\n            \"metric_type\": \"L2\",\n            \"params\": {}\n        }\n        search_data = [1, 0] +  [0 for _ in range(dim-2)]\n        for offset in range(0,100,10):\n            search_params[\"params\"]= {\n                \"offset\": offset,\n                # \"radius\": 50,\n                # \"range_filter\": 30,\n            }\n            res = collection_w.search(\n                data=[search_data],\n                anns_field=field_name,\n                param=search_params,\n                limit=10,\n                # offset=offset,\n            )\n            log.info(res)\n\noutput\n[2024-09-03 10:57:23 - INFO - ci_test]: init_collection_general: collection creation (client_base.py:276)\n[2024-09-03 10:57:25 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:57:25 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:57:26 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:57:26 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:57:26 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:57:27 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:57:27 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:57:28 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:57:28 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:57:29 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\nPASSED\n\ntest case\n\n    @pytest.mark.tags(CaseLabel.L1)\n    @pytest.mark.parametrize(\"vector_data_type\", [\"FLOAT_VECTOR\"])\n    def test_search_with_offset_normal(self, vector_data_type):\n        \"\"\"\n        target: test search iterator normal\n        method: 1. search iterator\n                2. check the result, expect pk\n        expected: search successfully\n        \"\"\"\n        # 1. initialize with data\n        dim = 128\n\n        collection_w = self.init_collection_wrap()\n        collection_w = self.init_collection_general(prefix, insert_data=False, dim=dim, is_index=False,\n                                                    vector_data_type=vector_data_type)[0]\n        data = [\n            {\n                \"int64\": i,\n                \"float\": i * 1.0,\n                \"varchar\": str(i),\n                \"json_field\": {f\"key_{i}\": f\"value_{i}\"},\n                \"float_vector\": [1, i] + [0 for _ in range(dim - 2)]\n            }\n            for i in range(3000)\n        ]\n        collection_w.insert(data)\n\n        collection_w.create_index(field_name, {\"metric_type\": \"L2\"})\n        collection_w.load()\n        # search with offset\n        search_params = {\n            \"metric_type\": \"L2\",\n            \"params\": {}\n        }\n        search_data = [1, 0] +  [0 for _ in range(dim-2)]\n        for offset in range(0,100,10):\n            search_params[\"params\"]= {\n                # \"offset\": offset,\n                # \"radius\": 50,\n                # \"range_filter\": 30,\n            }\n            res = collection_w.search(\n                data=[search_data],\n                anns_field=field_name,\n                param=search_params,\n                limit=10,\n                offset=offset,\n            )\n            log.info(res)\n\n[2024-09-03 10:58:43 - INFO - ci_test]: Test case of search interface: initialize before test case (client_base.py:246)\n[2024-09-03 10:58:43 - INFO - ci_test]: init_collection_general: collection creation (client_base.py:276)\n[2024-09-03 10:58:45 - INFO - ci_test]: (data: [\"['id: 0, distance: 0.0, entity: {}', 'id: 1, distance: 1.0, entity: {}', 'id: 2, distance: 4.0, entity: {}', 'id: 3, distance: 9.0, entity: {}', 'id: 4, distance: 16.0, entity: {}', 'id: 5, distance: 25.0, entity: {}', 'id: 6, distance: 36.0, entity: {}', 'id: 7, distance: 49.0, entity: {}', 'id: 8, distance: 64.0, entity: {}', 'id: 9, distance: 81.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:58:46 - INFO - ci_test]: (data: [\"['id: 10, distance: 100.0, entity: {}', 'id: 11, distance: 121.0, entity: {}', 'id: 12, distance: 144.0, entity: {}', 'id: 13, distance: 169.0, entity: {}', 'id: 14, distance: 196.0, entity: {}', 'id: 15, distance: 225.0, entity: {}', 'id: 16, distance: 256.0, entity: {}', 'id: 17, distance: 289.0, entity: {}', 'id: 18, distance: 324.0, entity: {}', 'id: 19, distance: 361.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:58:46 - INFO - ci_test]: (data: [\"['id: 20, distance: 400.0, entity: {}', 'id: 21, distance: 441.0, entity: {}', 'id: 22, distance: 484.0, entity: {}', 'id: 23, distance: 529.0, entity: {}', 'id: 24, distance: 576.0, entity: {}', 'id: 25, distance: 625.0, entity: {}', 'id: 26, distance: 676.0, entity: {}', 'id: 27, distance: 729.0, entity: {}', 'id: 28, distance: 784.0, entity: {}', 'id: 29, distance: 841.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:58:46 - INFO - ci_test]: (data: [\"['id: 30, distance: 900.0, entity: {}', 'id: 31, distance: 961.0, entity: {}', 'id: 32, distance: 1024.0, entity: {}', 'id: 33, distance: 1089.0, entity: {}', 'id: 34, distance: 1156.0, entity: {}', 'id: 35, distance: 1225.0, entity: {}', 'id: 36, distance: 1296.0, entity: {}', 'id: 37, distance: 1369.0, entity: {}', 'id: 38, distance: 1444.0, entity: {}', 'id: 39, distance: 1521.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:58:47 - INFO - ci_test]: (data: [\"['id: 40, distance: 1600.0, entity: {}', 'id: 41, distance: 1681.0, entity: {}', 'id: 42, distance: 1764.0, entity: {}', 'id: 43, distance: 1849.0, entity: {}', 'id: 44, distance: 1936.0, entity: {}', 'id: 45, distance: 2025.0, entity: {}', 'id: 46, distance: 2116.0, entity: {}', 'id: 47, distance: 2209.0, entity: {}', 'id: 48, distance: 2304.0, entity: {}', 'id: 49, distance: 2401.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:58:47 - INFO - ci_test]: (data: [\"['id: 50, distance: 2500.0, entity: {}', 'id: 51, distance: 2601.0, entity: {}', 'id: 52, distance: 2704.0, entity: {}', 'id: 53, distance: 2809.0, entity: {}', 'id: 54, distance: 2916.0, entity: {}', 'id: 55, distance: 3025.0, entity: {}', 'id: 56, distance: 3136.0, entity: {}', 'id: 57, distance: 3249.0, entity: {}', 'id: 58, distance: 3364.0, entity: {}', 'id: 59, distance: 3481.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:58:48 - INFO - ci_test]: (data: [\"['id: 60, distance: 3600.0, entity: {}', 'id: 61, distance: 3721.0, entity: {}', 'id: 62, distance: 3844.0, entity: {}', 'id: 63, distance: 3969.0, entity: {}', 'id: 64, distance: 4096.0, entity: {}', 'id: 65, distance: 4225.0, entity: {}', 'id: 66, distance: 4356.0, entity: {}', 'id: 67, distance: 4489.0, entity: {}', 'id: 68, distance: 4624.0, entity: {}', 'id: 69, distance: 4761.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:58:48 - INFO - ci_test]: (data: [\"['id: 70, distance: 4900.0, entity: {}', 'id: 71, distance: 5041.0, entity: {}', 'id: 72, distance: 5184.0, entity: {}', 'id: 73, distance: 5329.0, entity: {}', 'id: 74, distance: 5476.0, entity: {}', 'id: 75, distance: 5625.0, entity: {}', 'id: 76, distance: 5776.0, entity: {}', 'id: 77, distance: 5929.0, entity: {}', 'id: 78, distance: 6084.0, entity: {}', 'id: 79, distance: 6241.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:58:48 - INFO - ci_test]: (data: [\"['id: 80, distance: 6400.0, entity: {}', 'id: 81, distance: 6561.0, entity: {}', 'id: 82, distance: 6724.0, entity: {}', 'id: 83, distance: 6889.0, entity: {}', 'id: 84, distance: 7056.0, entity: {}', 'id: 85, distance: 7225.0, entity: {}', 'id: 86, distance: 7396.0, entity: {}', 'id: 87, distance: 7569.0, entity: {}', 'id: 88, distance: 7744.0, entity: {}', 'id: 89, distance: 7921.0, entity: {}']\"], True) (test_search.py:10219)\n[2024-09-03 10:58:49 - INFO - ci_test]: (data: [\"['id: 90, distance: 8100.0, entity: {}', 'id: 91, distance: 8281.0, entity: {}', 'id: 92, distance: 8464.0, entity: {}', 'id: 93, distance: 8649.0, entity: {}', 'id: 94, distance: 8836.0, entity: {}', 'id: 95, distance: 9025.0, entity: {}', 'id: 96, distance: 9216.0, entity: {}', 'id: 97, distance: 9409.0, entity: {}', 'id: 98, distance: 9604.0, entity: {}', 'id: 99, distance: 9801.0, entity: {}']\"], True) (test_search.py:10219)\nPASSED\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-09-03", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "zhuwenxing"}
{"issue_number": 2306, "issue_title": "[Enhancement]: Iterator cp file is not handled correctly in some cases", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\n\nfix int pk cannot be writen into cp file\nremove cp file after close\nwrap io operations with try-except\n\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-10-22", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 2299, "issue_title": "[Enhancement]: schema validation is fragile", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\ncurrently we validate server schema by comparing with user provided schema \n\n\npymilvus/pymilvus/orm/collection.py\n\n\n         Line 134\n      in\n      76de0ab\n\n\n\n\n\n\n if server_schema != schema: \n\n\n\n\n.\nwith doc in doc out, we introduced tokenizer_params in params, which is a dict in user input, but a json string in server response. direct comparing will cause a failure.\nnow the tokenizer_params is simple so I used a temp resolution in #2298 to convert the json string back to a dict, but that will likely fail after we introduced more configs in tokenizer_params: keys in json may be reordered and the resulting dict will no longer equal.\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-10-15", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "zhengbuqian"}
{"issue_number": 2292, "issue_title": "[Bug]: Query iterator handle offset incorrectly", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nQueryIterator cannot iterate through all data in the target collection.\nExpected Behavior\nIterator go through all data without any loss\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-10-12", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 2282, "issue_title": "[Bug]: Why do i get \"ImportError: sys.meta_path is None, Python is likely shutting down\" when trying to run Milvus", "issue_body": "Describe the bug\nWhen i run the following code:\nfrom pymilvus import MilvusClient\n\nclient = MilvusClient(\"milvus.db\")\nprint(\"hello\")\n\ni see the following result:\nhello\nException ignored in: <function ServerManager.__del__ at 0x7f3d1f9a2f20>\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.12/dist-packages/milvus_lite/server_manager.py\", line 58, in __del__\n  File \"/usr/local/lib/python3.12/dist-packages/milvus_lite/server_manager.py\", line 53, in release_all\n  File \"/usr/local/lib/python3.12/dist-packages/milvus_lite/server.py\", line 118, in stop\n  File \"/usr/lib/python3.12/pathlib.py\", line 1164, in __init__\n  File \"/usr/lib/python3.12/pathlib.py\", line 358, in __init__\nImportError: sys.meta_path is None, Python is likely shutting down\nException ignored in: <function Server.__del__ at 0x7f3d1f9a2d40>\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.12/dist-packages/milvus_lite/server.py\", line 122, in __del__\n  File \"/usr/local/lib/python3.12/dist-packages/milvus_lite/server.py\", line 118, in stop\n  File \"/usr/lib/python3.12/pathlib.py\", line 1164, in __init__\n  File \"/usr/lib/python3.12/pathlib.py\", line 358, in __init__\nImportError: sys.meta_path is None, Python is likely shutting down\n\nqwer.db file is created but i don't want to get this error\nExpected Behavior\nI don't want to get this error\nEnvironment details\n- Method of installation (Docker, or from source): sudo pip install pymilvus pymilvus[model] pymilvus[bulk_writer] --break-system-packages\n\n- pymilvus version: 2.4.7\nAnything else?\nI tried to run this code:\nfrom pymilvus import MilvusClient\n\ntry:\n    client = MilvusClient(\"qwer.db\")\nfinally:\n    client.close()\n\nbut the result is the same.\nUPD\nI have managed to fix the issue by moving to python3.9 from python3.12.\nSo pymilvus doesn't support python3.12 ?", "created_at": "2024-10-03", "closed_at": null, "labels": ["kind/bug", "milvus-lite"], "State": "open", "Author": "VanechikSpace"}
{"issue_number": 2278, "issue_title": "[Enhancement]: Enhance iterator by supporting mvcc_ts and break-down-continue ", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\n\nsupport mvcc_ts consistency for query and search iterator\nsupport break-down continue feature for query iterator\n\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-09-29", "closed_at": "2024-11-19", "labels": ["kind/enhancement"], "State": "closed", "Author": "MrPresent-Han"}
{"issue_number": 2277, "issue_title": "[Bug]: [null & default] [milvus_client]  there is no  \"default_value\" value when describe collection for default_value set fields", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nthere is no \"nullable\" or \"default_value\" value when describe collection for nullable/default_value fields\n{'field_id': 103, 'name': 'nullable_field', 'description': '', 'type': <DataType.INT64: 5>, 'params': {}}\n\nExpected Behavior\nthere is \"nullable\" or \"default_value\" value when describe collection for nullable/default_value fields\nSteps/Code To Reproduce behavior\nschema = client.create_schema(enable_dynamic_field=False)\n        schema.add_field(\"id_string\", DataType.VARCHAR, max_length=64, is_primary=True, auto_id = False)\n        schema.add_field(\"embeddings\", DataType.FLOAT_VECTOR, dim=dim)\n        schema.add_field(\"title\", DataType.VARCHAR, max_length=64, is_partition_key=True)\n        schema.add_field(\"nullable_field\", DataType.INT64, nullable=True, default_value=10)\n        schema.add_field(\"array_field\", DataType.ARRAY, element_type=DataType.INT64, max_capacity=12, max_length=64, nullable=True)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): master latest\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-09-29", "closed_at": "2024-12-03", "labels": ["kind/bug"], "State": "closed", "Author": "binbinlv"}
{"issue_number": 2276, "issue_title": "[Bug]: When using the bulk writer to generate CSV files, if there are bf16 and float16 vector types present, a JSON dump error will occur.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen using the bulk writer to format CSV files, if bf16 and float16 vector types are present, a JSON dump error will occur.\nFailed to convert field float16_vec_field value to string, error: Object of type ndarray is not JSON serializable\nExpected Behavior\nworks well\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-09-26", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "zhuwenxing"}
{"issue_number": 2274, "issue_title": "[Bug]: Missing attributes when using LocalBulkWriter", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI am trying to use the LocalBulkWriter. When initializing the LocalBulkWriter, I get the following error message. I followed this user guide: https://milvus.io/docs/prepare-source-data.md\n    writer = LocalBulkWriter(schema=schema, local_path=\".\", file_type=BulkFileType.JSON)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/steven/.conda/envs/dpm/lib/python3.11/site-packages/pymilvus/bulk_writer/local_bulk_writer.py\", line 42, in __init__\n    super().__init__(schema, chunk_size, file_type, **kwargs)\n  File \"/home/steven/.conda/envs/dpm/lib/python3.11/site-packages/pymilvus/bulk_writer/bulk_writer.py\", line 57, in __init__\n    if len(self._schema.fields) == 0:\n           ^^^^^^^^^^^^^^^^^^^\nAttributeError: 'function' object has no attribute 'fields'\nException ignored in: <function LocalBulkWriter.__del__ at 0x707a78d6fba0>\nTraceback (most recent call last):\n  File \"/home/steven/.conda/envs/dpm/lib/python3.11/site-packages/pymilvus/bulk_writer/local_bulk_writer.py\", line 63, in __del__\n    self._exit()\n  File \"/home/steven/.conda/envs/dpm/lib/python3.11/site-packages/pymilvus/bulk_writer/local_bulk_writer.py\", line 67, in _exit\n    if len(self._working_thread) > 0:\n           ^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'LocalBulkWriter' object has no attribute '_working_thread'\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- pymilvus: 2.4.6\n- protobuf: 5.28.2\n- grpcio: 1.66.1\nAnything else?\nNo response", "created_at": "2024-09-25", "closed_at": "2024-11-19", "labels": ["kind/bug"], "State": "closed", "Author": "Stevan1996"}
{"issue_number": 2271, "issue_title": "[Bug]: AmbiguousIndexName when create local vectorStore", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI try to create local vectorStore following  https://milvus.io/docs/zh/integrate_with_llamaindex.md\nvector_store = MilvusVectorStore(uri=\"./milvus_demo.db\", dim=1536, overwrite=True)\nBut got error :\nRPC error: [describe_index], <AmbiguousIndexName: (code=1, message=There are multiple indexes, please specify the index_name.)>, <Time:{'RPC start': '2024-09-24 09:29:48.706720', 'RPC error': '2024-09-24 09:29:48.707154'}>\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/llama_index/vector_stores/milvus/base.py\", line 306, in __init__\n    self._create_index_if_required()\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/llama_index/vector_stores/milvus/base.py\", line 790, in _create_index_if_required\n    self._create_dense_index()\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/llama_index/vector_stores/milvus/base.py\", line 801, in _create_dense_index\n    index_exists = self._collection.has_index()\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/orm/collection.py\", line 1451, in has_index\n    conn.describe_index(self._name, index_name, timeout=timeout, **copy_kwargs) is not None\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/decorators.py\", line 148, in handler\n    raise e from e\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/decorators.py\", line 144, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/decorators.py\", line 183, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/decorators.py\", line 123, in handler\n    raise e from e\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/decorators.py\", line 87, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pc087/miniconda3/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 1063, in describe_index\n    raise AmbiguousIndexName(message=ExceptionsMessage.AmbiguousIndexName)\npymilvus.exceptions.AmbiguousIndexName: <AmbiguousIndexName: (code=1, message=There are multiple indexes, please specify the index_name.)>\n>>> \n\nWhat's wrong with it ?\nHow to create local vectorStore ?\nExpected Behavior\nI want to create a milvus_demo.db locally.\nSteps/Code To Reproduce behavior\nfrom llama_index.core import VectorStoreIndex, StorageContext\nfrom llama_index.vector_stores.milvus import MilvusVectorStore\n\n\nvector_store = MilvusVectorStore(\n    uri=\"./milvus_demo.db\", dim=1536, overwrite=True\n)\nEnvironment details\n- macOS M2 14.3 \n- pip install pymilvus ( 2.4.6 )\nAnything else?\nI try to connect localhost:19530 and successed\u3002", "created_at": "2024-09-24", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "vio-ez"}
{"issue_number": 2370, "issue_title": "[Bug]: MilvusClient.search doesn't support _async", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I do MilvusClient().search(...., _async=True, ...) I get an exception:\nExpected Behavior\nI expect MIlvusClient().search(_async=True) to return a SearchFuture\nSteps/Code To Reproduce behavior\nI've added a PR to address this #2369\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-11-21", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "drawnwren"}
{"issue_number": 2368, "issue_title": "[Bug]: Partition Key doesn't appear to function in pymilvus?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThis is similar to #2331 but it got retagged as a feature request. The bug is:\ncollection.load()\nmilvus_client.search(data=data,filter=\"<partition_key> == 'a_partition_key'\")\n\n\nThis appears to be the only way to load partitions with pymilvus but this looks like it loads the entire collection and not just the relevant partition_key. Is there a way to only load the partition?\nWhen I do this search, I get results from all partitions. Not just \"<partition_key> ==  'a_partition_key'\".\n\nExpected Behavior\ncollection.load(partition_key=\"a_partition_key\")\n\nor something similar.\nmilvus_client.search(data=data, filter=\"<partition_key> == 'a_partition_key'\"\n\nshould return results where only partition_key is \"a_partition_key\".\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\nPymilvus 2.4.9\nMilvus Standalone docker container:latest\nAnything else?\nNo response", "created_at": "2024-11-21", "closed_at": "2024-11-23", "labels": ["kind/bug"], "State": "closed", "Author": "drawnwren"}
{"issue_number": 2362, "issue_title": "[Enhancement]: Add a property to ExtraList for extracting data from result of search, query, get,... function of MilvusClient class", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nI would like a property to be added to the ExtraList class that allows users to extract its data. This property should make it easy to use the underlying data without any additional structure or formatting.\nWhy is this needed?\nCurrently, when using the latest master branch version, hybrid_search, search, query and get functions of MilvusClient class return an ExtraList object. While this is helpful for additional metadata, it complicates situations where the underlying data can not be accessed directly for further processing or calculations.\nAdding this feature will improve usability and make the class more intuitive for users who need direct access to the data.\nAnything else?\nHere\u2019s an example of the current issue when using ExtraList with the Milvus query functionality:\nfrom pymilvus import Collection, FieldSchema, CollectionSchema, DataType, connections, MilvusClient\nimport random\n\nconnections.connect(\"default\", host=\"localhost\", port=\"19530\")\nmilvus_client = MilvusClient(\"http://localhost:19530\")\n\n# Define schema and collection\nschema = CollectionSchema([\n    FieldSchema(\"film_id\", DataType.INT64, is_primary=True),\n    FieldSchema(\"film_date\", DataType.INT64),\n    FieldSchema(\"films\", dtype=DataType.FLOAT_VECTOR, dim=2)\n])\ncollection = Collection(\"test_collection_query\", schema)\n\n# Insert sample data\ndata = [\n    [i for i in range(10)],\n    [i + 2000 for i in range(10)],\n    [[random.random() for _ in range(2)] for _ in range(10)],\n]\ncollection.insert(data)\n\n# Create index and load collection\nindex_param = {\"index_type\": \"FLAT\", \"metric_type\": \"L2\", \"params\": {}}\ncollection.create_index(\"films\", index_param)\ncollection.load()\n\n# Perform query\nexpr = \"film_id == 3\"\n\nres = milvus_client.query(\n    collection_name='test_collection_query',\n    filter=expr,\n    output_fields=[\"film_date\"]\n)\n\n# Current behavior\nprint(res)  \n# Output: data: [\"{'film_id': 3, 'film_date': 2003}\"], cannot access data directly\n\n# Desired behavior with a new property\nprint(res.data)  \n# Output: [{'film_id': 3, 'film_date': 2003}], a plain list object accessible for further calculations.\n\nIn the example above, when querying the Milvus collection, it returns an ExtraList. This structure makes it difficult to directly extract the query result for further processing. Adding a .data property or a similar method would allow users to directly access the query results, making them easier to work with for calculations, transformations, or other downstream processes.", "created_at": "2024-11-20", "closed_at": "2024-12-04", "labels": ["kind/enhancement"], "State": "closed", "Author": "CaoHaiNam"}
{"issue_number": 2358, "issue_title": "[Bug]: After grpcio is upgraded to 1.68.0, multi-threaded concurrent dql request will report error `failed to connect to all address`", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ngrpcio==1.68.0\n\ngrpcio==1.60.0 not report connection error\nfouram benchmark test case test_concurrent_locust_ivf_sq8_search_cluster can reproduce this issue\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-11-19", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "wangting0128"}
{"issue_number": 2355, "issue_title": "[QUESTION]: Milvus 2.4.15 - pymilvus 2.4.9 Message -> this version of sdk is incompatible with server, please downgrade your sdk or upgrade your server", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nNot sure which is the problem, the versions look like are the adequate. The code I am ussing and is failing is\nfrom pymilvus import MilvusClient, FieldSchema, CollectionSchema, DataType, Collection, Index\n\n# Connect to Milvus\nclient = MilvusClient(\n    uri=\"https://milvus.k8s.xxxxxxx.com\",\n    db_name=\"default\"\n)\nThis is milvus standalone deployed on a microk8s single node cluster\nthe deployment has been done with helm\nAnything else?\nNo response", "created_at": "2024-11-15", "closed_at": "2024-11-26", "labels": ["kind/bug"], "State": "closed", "Author": "cmxela"}
{"issue_number": 2354, "issue_title": "[Bug]: [milvus_client_p2] The check rule for the parameter \"collection_name\" of \"flush\" interface is not consistent with that of \"create_collection\" interface", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe check rule for the parameter \"collection_name\" of \"flush\" interface is not consistent with that of \"create_collection\" interface\nwhen collection_name  is \"12-s\", create collection reports error \"f\"Invalid collection name: {collection_name}. the first character of a collection name must be an underscore or letter: invalid parameter\"\nbut flush( \"12-s\") reports \"collection not found[database=default][collection=12-s]\"\n>>> milvus_client.create_collection(collection_name=\"12-s\", dimension=8)\nRPC error: [create_collection], <MilvusException: (code=1100, message=Invalid collection name: 12-s. the first character of a collection name must be an underscore or letter: invalid parameter)>, <Time:{'RPC start': '2024-11-15 16:14:50.873458', 'RPC error': '2024-11-15 16:14:50.898214'}>\nFailed to create collection: 12-s\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 80, in create_collection\n    return self._fast_create_collection(\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 140, in _fast_create_collection\n    raise ex from ex\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 136, in _fast_create_collection\n    conn.create_collection(collection_name, schema, timeout=timeout, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 141, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 137, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 176, in handler\n    return func(self, *args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 116, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 86, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 309, in create_collection\n    check_status(status)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/utils.py\", line 63, in check_status\n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=Invalid collection name: 12-s. the first character of a collection name must be an underscore or letter: invalid parameter)>\n>>>\n>>>\n>>> milvus_client.flush(collection_name=\"12-s\")\nRPC error: [flush], <MilvusException: (code=100, message=collection not found[database=default][collection=12-s])>, <Time:{'RPC start': '2024-11-15 16:15:37.485106', 'RPC error': '2024-11-15 16:15:37.561322'}>\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/milvus_client/milvus_client.py\", line 1067, in flush\n    conn.flush([collection_name], timeout=timeout, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 141, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 137, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 176, in handler\n    return func(self, *args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 116, in handler\n    raise e from e\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/decorators.py\", line 86, in handler\n    return func(*args, **kwargs)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/grpc_handler.py\", line 1458, in flush\n    check_status(response.status)\n  File \"/Users/binbin/milvus_latest/lib/python3.8/site-packages/pymilvus/client/utils.py\", line 63, in check_status\n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=100, message=collection not found[database=default][collection=12-s])>\n\nExpected Behavior\nThe check rule for the parameter \"collection_name\" of \"flush\" interface is consistent with that of \"create_collection\" interface\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient\nmilvus_client = MilvusClient()\nmilvus_client.create_collection(collection_name=\"12-s\", dimension=8)\nmilvus_client.flush(collection_name=\"12-s\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):  master-20241115-d1596297-amd64\n- Pymilvus version: 2.5.0rc121\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-11-15", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 2353, "issue_title": "[Bug]: It reports error when input valid value to parameter \"group_name\" of interface \"create_privilege_group\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nIt reports error when input valid value to parameter \"group_name\" of interface \"create_privilege_group\"\nExpected Behavior\nCreate privilege group successfully\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient\nmilvus_client = MilvusClient()\nmilvus_client.create_privilege_group(group_name=\"groupname\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):  master-20241115-d1596297-amd64\n- Pymilvus version: 2.5.0rc121\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-11-15", "closed_at": "2024-11-18", "labels": ["kind/bug"], "State": "closed", "Author": "binbinlv"}
{"issue_number": 2352, "issue_title": "[Bug]: Try best to cast type params key values", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\n\n\npymilvus/pymilvus/orm/schema.py\n\n\n         Line 442\n      in\n      016ff55\n\n\n\n\n\n\n if self._kwargs: \n\n\n\n\n\n\n\n\npymilvus/pymilvus/orm/schema.py\n\n\n         Line 353\n      in\n      0be8e7f\n\n\n\n\n\n\n self._type_params[k] = int(self._kwargs[k]) \n\n\n\n\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-11-15", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "XuanYang-cn"}
{"issue_number": 2343, "issue_title": "[Enhancement]: Support _async parameter for query()", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nAdd _async parameter for query() interface, just like the other interfaces such as search/insert/load\nCurrently, the query() always wait the result:\n\n\n\npymilvus/pymilvus/client/grpc_handler.py\n\n\n         Line 1539\n      in\n      3110139\n\n\n\n\n\n\n response = future.result() \n\n\n\n\n\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-11-13", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "yhmo"}
{"issue_number": 2341, "issue_title": "[Enhancement]: Upload retry mechanism in RemoteBulkWriter class", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nCurrently, the upload function in the RemoteBulkWriter class isn't yet equipped with a retry mechanism, leading to [almost silent] upload failure if the remote storage system refuses to accept the request.\nIt would be good to equipe this function with a simple backup mechanism, such as:\n# Upload function with retry\ndef _upload(self, file_path: str, object_name: str, max_retries: int = 5):\n        logger.info(f\"Prepare to upload '{file_path}' to '{object_name}'\")\n\n        retry_count = 0\n        while retry_count <= max_retries:\n            try:\n                # Check if Minio client\n                if isinstance(self._client, Minio):\n                    logger.info(f\"Target bucket: '{self._connect_param._bucket_name}'\")\n                    self._client.fput_object(\n                        bucket_name=self._connect_param._bucket_name,\n                        object_name=object_name,\n                        file_path=file_path,\n                    )\n\n                # Check if BlobServiceClient for Azure\n                elif isinstance(self._client, BlobServiceClient):\n                    logger.info(f\"Target bucket: '{self._connect_param._container_name}'\")\n                    container_client = self._client.get_container_client(\n                        self._connect_param._container_name\n                    )\n                    with Path(file_path).open(\"rb\") as data:\n                        container_client.upload_blob(\n                            name=object_name,\n                            data=data,\n                            overwrite=True,\n                            max_concurrency=self._connect_param._upload_concurrency,\n                            connection_timeout=600,\n                        )\n                \n                else:\n                    raise MilvusException(message=\"Blob storage client is not initialized\")\n\n                # If upload successful, log and exit\n                logger.info(f\"Upload file '{file_path}' to '{object_name}' succeeded\")\n                break\n\n            except S3Error as e:\n                if isinstance(self._client, Minio) and retry_count < max_retries:\n                    wait_time = 2 ** retry_count  # Exponential backoff\n                    logger.warning(f\"Vinhn---SlowDown error. Retrying in {wait_time} seconds...\")\n                    time.sleep(wait_time)\n                    retry_count += 1\n                else:\n                    logger.error(f\"Failed to upload '{file_path}' to '{object_name}': {e}\")\n                    raise\n\n            except Exception as e:\n                logger.error(f\"nexpected error while uploading '{file_path}' to '{object_name}': {e}\")\n                raise\n\nWhy is this needed?\nMore robust file ingestion mechanism.\nAnything else?\n\n\n\npymilvus/pymilvus/bulk_writer/remote_bulk_writer.py\n\n\n         Line 275\n      in\n      3110139\n\n\n\n\n\n\n def _upload(self, file_list: list): \n\n\n\n\n", "created_at": "2024-11-11", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "vinhngx"}
{"issue_number": 2338, "issue_title": "[Enhancement]: alterindex & altercollection supports altering properties", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nalterindex & altercollection supports altering properties\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-11-08", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "JsDove"}
{"issue_number": 2332, "issue_title": "[Bug]: Wrong typehint for describe_role", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen calling client.describe_role(role_name=some_role), the function returns a dictionary, and this is pretty clear from the code: \n\n\npymilvus/pymilvus/milvus_client/milvus_client.py\n\n\n        Lines 967 to 979\n      in\n      650f7cd\n\n\n\n\n\n\n def describe_role( \n\n\n\n self, role_name: str, timeout: Optional[float] = None, **kwargs \n\n\n\n ) -> List[Dict]: \n\n\n\n conn = self._get_connection() \n\n\n\n db_name = kwargs.pop(\"db_name\", \"\") \n\n\n\n try: \n\n\n\n res = conn.select_grant_for_one_role(role_name, db_name, timeout=timeout, **kwargs) \n\n\n\n except Exception as ex: \n\n\n\n raise ex from ex \n\n\n\n ret = {} \n\n\n\n ret[\"role\"] = role_name \n\n\n\n ret[\"privileges\"] = [dict(i) for i in res.groups] \n\n\n\n return ret \n\n\n\n\n\nHowever, the function signature indicates the returned value is List[Dict].\nExpected Behavior\nThe function signature should simply indicate the returned value is Dict, or Dict[str, Any].\nSteps/Code To Reproduce behavior\nI believe this is unnecessary for this type of issue.\nEnvironment details\nIrrelevant.\nAnything else?\nI know this seems minor, but with type checkers like pyright, I assure you this kind of problem is a bit confusing.", "created_at": "2024-11-06", "closed_at": "2024-11-15", "labels": ["kind/bug"], "State": "closed", "Author": "graelo"}
{"issue_number": 2331, "issue_title": "[Bug]: search vectors doesnt work with partition key", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nhi!\nI want to inform you that the search with the partition key does not work\nLet's first look at the documentation here, what's notable is that you don't call the load collection or load partition method into memory. Apparently it is assumed that the presence of a partitioning key will cause the partition to be loaded from the filter expression automatically inside Milvus, but it doesnt work, because Milvus throw the errors: <MilvusException: (code=65535, message=not support manually specifying the partition names if partition key mode is used)>, <MilvusException: (code=65535, message=disable load partitions if partition key mode is used)>\n\nWorkaround\nFor example, here is my collection, which has a partition key - category field:\n\nI made my code by analogy with the code in the documentation: this means that I call the search method without calling the load_collection or load_partitions, while in the filter expression I have a filter on the field which is the partition key. In this case Milvus throw the next error: <MilvusException: (code=101, message=failed to search: collection not loaded[collection=452934647721745216])>\nOk... if milvus asks to load a collection, then knowing that the collection has a partition key, I don\u2019t want to load the entire collection, but only the required partition. Hence I will call the load_partitions method, but Milvus throw error <MilvusException: (code=65535, message=not support manually specifying the partition names if partition key mode is used)>. In this situation Milvus literally leaves no choice and forces me to unload the entire collection into memory\n\nI have two questions:\n\nIs the example code in the documentation wrong?\nHow can I load only the required partition into memory if I have a partitioning key?\n\nI make a full code example where I demonstrated cases of how I tried to do a search by partition\nExpected Behavior\nI see two ways to fix the situation:\n\nI want to be able to load partitions using the load_partitions method in the current configuration (when we have a partition key in the collection);\nMilvus automatically loads partitions into memory if we pass the corresponding field names in the filter expression\n\nSteps/Code To Reproduce behavior\nimport logging\nfrom random import Random\n\nfrom pymilvus import MilvusClient, DataType\n\n\ndef create_milvus_client(uri: str, token: str) -> MilvusClient:\n    return MilvusClient(uri=uri, token=token)\n\n\nclass BaseMilvusCollection:\n    db_name: str = 'default'\n    collection_name = None\n\n    def __init__(self, *, client: MilvusClient):\n        self.client = client\n\n    def get_schema(self):\n        raise NotImplementedError\n\n    def get_index_params(self):\n        raise NotImplementedError\n\n    def create(self):\n        schema = self.get_schema()\n        index_params = self.get_index_params()\n\n        self.client.create_collection(\n            schema=schema,\n            index_params=index_params,\n            collection_name=self.collection_name,\n        )\n\n\nclass Detections(BaseMilvusCollection):\n    collection_name = 'test_collection'\n\n    def get_schema(self):\n        # https://milvus.io/docs/use-partition-key.md\n        schema = self.client.create_schema(\n            partition_key_field='category',\n        )\n        schema.add_field(\n            field_name='id',\n            datatype=DataType.INT64,\n            auto_id=True,\n            is_primary=True,\n        )\n\n        schema.add_field(\n            field_name='category',\n            datatype=DataType.VARCHAR,\n            max_length=200,\n        )\n\n        schema.add_field(field_name='metadata', datatype=DataType.JSON)\n        schema.add_field(field_name='detection_pk', datatype=DataType.INT64)\n        schema.add_field(field_name='vector', datatype=DataType.FLOAT_VECTOR, dim=64)\n        return schema\n\n    def get_index_params(self):\n        index_params = self.client.prepare_index_params()\n\n        index_params.add_index(\n            field_name='vector',\n            index_type='IVF_FLAT',\n            metric_type='COSINE',\n            params={'nlist': 128},\n        )\n\n        return index_params\n\n\nclass BaseMilvusRepository:\n    collection_name = None\n\n    def __init__(self, *, client: MilvusClient):\n        if self.collection_name is None:\n            msg = 'Collection name not specified!'\n            raise Exception(msg)\n\n        self.logger = logging.getLogger(__name__)\n        self.client = client\n\n    def release_collection(self) -> None:\n        self.client.release_collection(collection_name=self.collection_name)\n\n    def insert(self, data: list[dict]) -> int:\n        return self.client.insert(collection_name=self.collection_name, data=data)['insert_count']\n\n    def load_partitions(self, partitions: list[str]):\n        self.client.load_partitions(\n            collection_name=self.collection_name, partition_names=partitions\n        )\n\n\nclass MilvusDetections(BaseMilvusRepository):\n    collection_name = 'test_collection'\n\n    def search_vectors(\n            self,\n            *,\n            vectors: list[list[float]],\n            filter_expression: str,\n            limit: int,\n            partition_names: list[str] | None = None,\n    ):\n        search_params = {\n            'metric_type': 'COSINE',\n            'ignore_growing': False,\n            'offset': 0,\n            'params': {'nprobe': 128},\n        }\n\n        search_result = self.client.search(\n            limit=limit,\n            data=vectors,\n            embedding_field='vector',\n            search_params=search_params,\n            partition_names=partition_names,\n            filter_expression=filter_expression,\n            collection_name=self.collection_name,\n        )\n\n        return search_result\n\n\ndef case_collection_not_loaded_by_docs_example(\n        repo: MilvusDetections, filter_expression: str, embedding: list[float]\n):\n    # https://milvus.io/docs/use-partition-key.md#Use-Partition-Key\n    return repo.search_vectors(\n        filter_expression=filter_expression, vectors=[embedding], limit=100\n    )\n\n\ndef case_with_error_on_load_partition(repo: MilvusDetections, filter_expression: str, embedding: list[float]):\n    repo.load_partitions(['dairy'])\n    return repo.search_vectors(\n        filter_expression=filter_expression, vectors=[embedding], limit=100\n    )\n\n\ndef case_with_error_search_with_partition(\n        repo: MilvusDetections, filter_expression: str, embedding: list[float]\n):\n    return repo.search_vectors(\n        filter_expression=filter_expression, vectors=[embedding], limit=100, partition_names=['dairy']\n    )\n\n\ndef main():\n    MILVUS_URI = ''\n    MILVUS_TOKEN = ''\n    client = create_milvus_client(uri=MILVUS_URI, token=MILVUS_TOKEN)\n\n    test_collection = Detections(client=client)\n    repo = MilvusDetections(client=client)\n\n    test_collection.create()\n\n    rnd = Random()\n    dimension = 64\n    embedding = [rnd.random() for _ in range(dimension)]\n    filter_expression = f\"category in ['dairy']\"\n\n    item = {\n        'category': 'dairy',\n        'vector': embedding,\n        'metadata': {},\n        'detection_pk': 5,\n    }\n\n    assert repo.insert([item]) > 0\n    repo.release_collection()\n\n    # throw <MilvusException: (code=101, message=failed to search: collection not loaded[collection=452934647721745216])>\n    result = case_collection_not_loaded_by_docs_example(repo, filter_expression, embedding)\n\n    # throw <MilvusException: (code=65535, message=disable load partitions if partition key mode is used)>\n    # result = case_with_error_on_load_partition(repo, filter_expression, embedding)\n\n    # throw <MilvusException: (code=65535, message=not support manually specifying the partition names if partition key mode is used)>\n    # result = case_with_error_search_with_partition(repo, filter_expression, embedding)\n\n    print(result)\n\n\nif __name__ == '__main__':\n    main()\nEnvironment details\n- Pymilvus client version: v2.4.9\n- Milvus configuration: Zilliz Cloud Cluster\n- Cluster Compatible With: Milvus 2.4.x\n- Cluster CU Type: Performance-optimized\n- Cluster Plan: Dedicated (Enterprise)\nAnything else?\nNo response", "created_at": "2024-11-06", "closed_at": null, "labels": ["kind/feature"], "State": "open", "Author": "nightblure"}
{"issue_number": 2328, "issue_title": "[Enhancement]: Refine the name for group_size parameter", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\ngroup_strict_size to strict_group_size\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-11-06", "closed_at": "2024-11-15", "labels": ["kind/enhancement"], "State": "closed", "Author": "MrPresent-Han"}
{"issue_number": 2327, "issue_title": "[Bug]: `TypeError` if `consistency_level` is passed to `Collection.delete`", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I do\nmy_collection.delete(expr='...', consistency_level='Strong')  # Or any `consistency_level` for that matter\nI get the following error:\n    @retry_on_rpc_failure()\n    def delete(\n        self,\n        collection_name: str,\n        expression: str,\n        partition_name: Optional[str] = None,\n        timeout: Optional[float] = None,\n        **kwargs,\n    ):\n        check_pass_param(collection_name=collection_name, timeout=timeout)\n        try:\n>           req = Prepare.delete_request(\n                collection_name,\n                partition_name,\n                expression,\n                consistency_level=kwargs.get(\"consistency_level\", 0),\n                param_name=kwargs.pop(\"param_name\", None),\n                **kwargs,\n            )\nE           TypeError: pymilvus.client.prepare.Prepare.delete_request() got multiple values for keyword argument 'consistency_level'\n\n/usr/local/lib/python3.12/site-packages/pymilvus/client/grpc_handler.py:597: TypeError\nExpected Behavior\nTo not fail\nSteps/Code To Reproduce behavior\nAll you need to do is pass the consistency_level to the delete method. This bug is directly due to the use of kwargs.get in the function in order to populate a \"new\" keyword argument called consistency_level in addition to the existing one. It should happen no matter the other circumstances.\nEnvironment details\n- Hardware/Softward conditions: (OS: `6.10.0-linuxkit` Docker Desktop on Mac running Linux using the image `python:3.12-slim`, CPU: Apple M2 Pro, Memory: 8GB)\n- Method of installation (Docker, or from source): A Docker image, as mentioned above. I'm using LangChain, so technically not calling the collection directly. `langchain-milvus==0.1.4`\n- Milvus version (v0.3.1, or v0.4.0): Milvus is running using the Docker image `milvusdb/milvus:v2.4.6`\n- Milvus configuration (Settings you made in `server_config.yaml`): Didn't change anything.\nAnything else?\nThe bug is inherit in that call in the code, it basically will never work if consistency_level is provided. It looks like a direct result of this change: cb4cbc6\nThe solution could be to change the .get to .pop but it's worth making sure it's not going to be a problem with the line\n                f = MutationFuture(future, cb, timeout=timeout, **kwargs)\nwhich is also inside this function (I wasn't able to fully follow the logic of MutationFuture).", "created_at": "2024-11-06", "closed_at": "2024-11-26", "labels": ["kind/bug"], "State": "closed", "Author": "ofir-ov"}
{"issue_number": 2325, "issue_title": "[Enhancement]: Add compact, flush and get_server_version api in MilvusClient", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nI would like to add compact, get_compaction_state, flush and get_server_version in MilvusClient.\n def flush(\n        self,\n        collection_name: str,\n        timeout: Optional[float] = None,\n        **kwargs):\n        pass\n        \n \ndef compact(\n        self,\n        collection_name: str,\n        is_clustering: Optional[bool] = False,\n        timeout: Optional[float] = None,\n        **kwargs,\n    ) -> int:\n    return job_id\n\n\ndef get_compaction_state(\n        self,\n        job_id: int,\n        timeout: Optional[float] = None,\n        **kwargs,\n    ) -> str:\n    \"\"\"\n       Possible values are \"UndefiedState\", \"Executing\" and \"Completed\".\n    \"\"\"\n    return \"\"\n \ndef get_server_version(\n        self,\n        timeout: Optional[float] = None,\n        **kwargs,\n    ) -> str:\n    return \"\"\n\n\nWhy is this needed?\nsync with Collection(orm).\nAnything else?\nNo response", "created_at": "2024-11-06", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "czs007"}
{"issue_number": 2324, "issue_title": "[Bug]: code=1100, create index on json field is not supported: expected=supported field, actual=create index on 104 field", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nIt's actually the exact same issue as w/  #2155. However, the solution doesn't work for me. It seem like using pymilvus version 2.4.5 should resolve the issue but it doesn't. Before I was on 2.4.9 and it also wasn't working.\nAm I missing something? Shouldn't newer versions contain the solutions of older problems? (But it's not even a \u201csolution\u201d in this case.)\nI also don't understand the error message. Where is the JSON field? Is a sparse vector a JSON field?\nSteps/Code To Reproduce behavior\nimport random\nimport string\n\nimport numpy as np\nfrom pymilvus import Collection, CollectionSchema, DataType, FieldSchema, connections\n\n# 1. prepare a small corpus to search\ndocs = [\n    \"Artificial intelligence was founded as an academic discipline in 1956.\",\n    \"Alan Turing was the first person to conduct substantial research in AI.\",\n    \"Born in Maida Vale, London, Turing was raised in southern England.\",\n]\n# add some randomly generated texts\ndocs.extend([' '.join(''.join(random.choice(string.ascii_lowercase) for _ in range(random.randint(1, 8))) for _ in range(10)) for _ in range(1000)])\nquery = \"Who started AI research?\"\n\ndef random_embedding(texts):\n    rng = np.random.default_rng()\n    return {\n        \"dense\": np.random.rand(len(texts), 768),\n        \"sparse\": [{d: rng.random() for d in random.sample(range(1000), random.randint(20, 30))} for _ in texts],\n    }\n\ndense_dim = 768\nef = random_embedding\n\ndocs_embeddings = ef(docs)\nquery_embeddings = ef([query])\n\n# 2. setup Milvus collection and index\nconnections.connect(\"default\", host=\"localhost\", port=\"19530\")\n\nfields = [\n    FieldSchema(name=\"pk\", dtype=DataType.VARCHAR, is_primary=True, auto_id=True, max_length=100),\n    FieldSchema(name=\"text\", dtype=DataType.VARCHAR, max_length=512),\n    FieldSchema(name=\"sparse_vector\", dtype=DataType.SPARSE_FLOAT_VECTOR),\n    FieldSchema(name=\"dense_vector\", dtype=DataType.FLOAT_VECTOR, dim=dense_dim),\n]\nschema = CollectionSchema(fields, \"\")\ncollection = Collection('hybrid_demo', schema, consistency_level=\"Strong\")\n\nsparse_index = {\"index_type\": \"SPARSE_INVERTED_INDEX\", \"metric_type\": \"IP\"}\ncollection.create_index(\"sparse_vector\", sparse_index)\nlast line produces this error message:\nTraceback (most recent call last):\n  File \"/home/lucas/Documents/StefanArbeit/RAG/docpilot/tmp/hello_hybrid_sparse_dense.py\", line 43, in <module>\n    collection.create_index(\"sparse_vector\", sparse_index)\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/orm/collection.py\", line 1373, in create_index\n    return conn.create_index(self._name, field_name, index_params, timeout=timeout, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 148, in handler\n    raise e from e\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 144, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 183, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 123, in handler\n    raise e from e\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 87, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 987, in create_index\n    check_status(status)\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/client/utils.py\", line 63, in check_status\n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=create index on json field is not supported: expected=supported field, actual=create index on 104 field: invalid parameter)>\n\nEnvironment details\n\nDebian 12\nmilvus-standalone (Docker)\nMilvus version: 2.4.9\n", "created_at": "2024-11-05", "closed_at": "2024-11-11", "labels": ["kind/bug"], "State": "closed", "Author": "luc42ei"}
{"issue_number": 2318, "issue_title": "[Bug]: dynamic field exceeds max length (65536)", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI'm using Kotaemon, that is a RAG that by default uses milvus lite, when moving to a external milvus and inserting items, I got this error:\ndynamic field exceeds max length (65536)\nI have tried to reduce the size of the metadata but still the error raises, is there a way to expand the size of the metadata field?\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n-\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nPC error: [insert_rows], <MilvusException: (code=1100, message=the length (381827) of dynamic field exceeds max length (65536): invalid parameter[expected=valid length dynamic field][actual=length exceeds max length])>, <Time:{'RPC start': '2024-10-29 07:36:26.031426', 'RPC error': '2024-10-29 07:36:26.449905'}>\nException in thread Thread-4 ():\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.10/threading.py\", line 1016, in _bootstrap_inner\nself.run()\nFile \"/usr/local/lib/python3.10/threading.py\", line 953, in run\nself._target(*self._args, **self._kwargs)\nFile \"/app/libs/ktem/ktem/index/file/pipelines.py\", line 399, in \ntarget=lambda: list(insert_chunks_to_vectorstore())\nFile \"/app/libs/ktem/ktem/index/file/pipelines.py\", line 387, in insert_chunks_to_vectorstore\nself.handle_chunks_vectorstore(chunks, file_id)\nFile \"/app/libs/ktem/ktem/index/file/pipelines.py\", line 429, in handle_chunks_vectorstore\nself.vector_indexing.add_to_vectorstore(chunks)\nFile \"/app/libs/kotaemon/kotaemon/indices/vectorindex.py\", line 139, in add_to_vectorstore\nself.vector_store.add(\nFile \"/app/libs/kotaemon/kotaemon/storages/vectorstores/milvus.py\", line 106, in add\nreturn super().add(embeddings=embeddings, metadatas=metadatas, ids=ids)\nFile \"/app/libs/kotaemon/kotaemon/storages/vectorstores/base.py\", line 135, in add\nreturn self._client.add(nodes=nodes)\nFile \"/usr/local/lib/python3.10/site-packages/llama_index/vector_stores/milvus/base.py\", line 364, in add\nself._collection.insert(insert_batch)\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/orm/collection.py\", line 507, in insert\nreturn conn.insert_rows(\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 148, in handler\nraise e from e\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 144, in handler\nreturn func(*args, **kwargs)\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 183, in handler\nreturn func(self, *args, **kwargs)\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 123, in handler\nraise e from e\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 87, in handler\nreturn func(*args, **kwargs)\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 496, in insert_rows\ncheck_status(resp.status)\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/client/utils.py\", line 63, in check_status\nraise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=the length (381827) of dynamic field exceeds max length (65536): invalid parameter[expected=valid length dynamic field][actual=length exceeds max length])>", "created_at": "2024-10-29", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "micuentadecasa"}
{"issue_number": 2315, "issue_title": "[QUESTION]: Facing Error while running example.py", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nWhile I try to run this program to run example.py\n\n\nAnything else?\nNo response", "created_at": "2024-10-28", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "NatarajanThangaraj"}
{"issue_number": 2314, "issue_title": "[Bug]: When the bulkwriter fails to generate a file, it returns an empty list instead of throwing an error.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen the bulk writer fails to generate a file, it internally handles the error instead of throwing it out, which is not a reasonable behavior.\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Data path created: /Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pycharm/bulk_writer (local_bulk_writer.py:77)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Data path created: /Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pycharm/bulk_writer/6c82cb06-dff3-4dcf-ba6e-e2a48c89f262 (local_bulk_writer.py:82)\n[2024-10-25 19:42:28 - INFO - remote_bulk_writer]: Minio/S3 blob storage client successfully initialized (remote_bulk_writer.py:157)\n[2024-10-25 19:42:28 - INFO - remote_bulk_writer]: Remote buffer writer initialized, target path: /bulk_data/6c82cb06-dff3-4dcf-ba6e-e2a48c89f262 (remote_bulk_writer.py:123)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Prepare to flush buffer, row_count: 1000, size: 1360576 (local_bulk_writer.py:109)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Flush thread begin, name: Thread-10 (local_bulk_writer.py:116)\n[2024-10-25 19:42:28 - ERROR - local_bulk_writer]: Failed to fulsh, error: int() argument must be a string, a bytes-like object or a number, not 'NoneType' (local_bulk_writer.py:142)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Wait flush to finish (local_bulk_writer.py:120)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Flush thread finished, name: Thread-10 (local_bulk_writer.py:146)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Commit done with async=False (local_bulk_writer.py:124)\n[2024-10-25 19:42:28 - INFO - ci_test]: bulk insert files: [] (test_bulk_insert.py:1874)\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-10-28", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "zhuwenxing"}
{"issue_number": 2313, "issue_title": "[Bug]: The bulk writer cannot convert nullable data to a CSV file.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n[2024-10-25 19:42:28 - ERROR - local_bulk_writer]: Failed to fulsh, error: int() argument must be a string, a bytes-like object or a number, not 'NoneType' (local_bulk_writer.py:142)\n\n\n[2024-10-25 19:42:27 - INFO - ci_test]: ################################################################################ (conftest.py:232)\n[2024-10-25 19:42:27 - INFO - ci_test]: [initialize_milvus] Log cleaned up, start testing... (conftest.py:233)\n[2024-10-25 19:42:27 - INFO - ci_test]: [setup_class] Start setup class... (client_base.py:40)\n[2024-10-25 19:42:27 - INFO - ci_test]: *********************************** setup *********************************** (client_base.py:46)\n[2024-10-25 19:42:27 - INFO - ci_test]: [setup_method] Start setup test case test_with_all_field_csv_with_bulk_writer. (client_base.py:47)\n-------------------------------- live log call ---------------------------------\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Data path created: /Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pycharm/bulk_writer (local_bulk_writer.py:77)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Data path created: /Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pycharm/bulk_writer/6c82cb06-dff3-4dcf-ba6e-e2a48c89f262 (local_bulk_writer.py:82)\n[2024-10-25 19:42:28 - INFO - remote_bulk_writer]: Minio/S3 blob storage client successfully initialized (remote_bulk_writer.py:157)\n[2024-10-25 19:42:28 - INFO - remote_bulk_writer]: Remote buffer writer initialized, target path: /bulk_data/6c82cb06-dff3-4dcf-ba6e-e2a48c89f262 (remote_bulk_writer.py:123)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Prepare to flush buffer, row_count: 1000, size: 1360576 (local_bulk_writer.py:109)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Flush thread begin, name: Thread-10 (local_bulk_writer.py:116)\n[2024-10-25 19:42:28 - ERROR - local_bulk_writer]: Failed to fulsh, error: int() argument must be a string, a bytes-like object or a number, not 'NoneType' (local_bulk_writer.py:142)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Wait flush to finish (local_bulk_writer.py:120)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Flush thread finished, name: Thread-10 (local_bulk_writer.py:146)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Commit done with async=False (local_bulk_writer.py:124)\n[2024-10-25 19:42:28 - INFO - ci_test]: bulk insert files: [] (test_bulk_insert.py:1874)\n[2024-10-25 19:42:28 - INFO - local_bulk_writer]: Delete local directory '/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pycharm/bulk_writer/6c82cb06-dff3-4dcf-ba6e-e2a48c89f262' (local_bulk_writer.py:88)\n[2024-10-25 19:42:29 - INFO - ci_test]:  collection entities: 0 (test_bulk_insert.py:1889)\nFAILED\ntestcases/test_bulk_insert.py:1806 (TestBulkInsert.test_with_all_field_csv_with_bulk_writer[doc-True-True-1000-128-True])\n0 != 1000\n\nExpected :1000\nActual   :0\n<Click to see difference>\n\nself = <test_bulk_insert.TestBulkInsert object at 0x130eae7c0>, auto_id = True\ndim = 128, entities = 1000, enable_dynamic_field = True, sparse_format = 'doc'\nnullable = True\n\n    @pytest.mark.tags(CaseLabel.L3)\n    @pytest.mark.parametrize(\"auto_id\", [True, False])\n    @pytest.mark.parametrize(\"dim\", [128])  # 128\n    @pytest.mark.parametrize(\"entities\", [1000])  # 1000\n    @pytest.mark.parametrize(\"enable_dynamic_field\", [True, False])\n    @pytest.mark.parametrize(\"nullable\", [True, False])\n    @pytest.mark.parametrize(\"sparse_format\", [\"doc\", \"coo\"])\n    def test_with_all_field_csv_with_bulk_writer(self, auto_id, dim, entities, enable_dynamic_field, sparse_format, nullable):\n        \"\"\"\n        \"\"\"\n        self._connect()\n        fields = [\n            cf.gen_int64_field(name=df.pk_field, is_primary=True, auto_id=auto_id),\n            cf.gen_int64_field(name=df.int_field, nullable=nullable),\n            cf.gen_float_field(name=df.float_field, nullable=nullable),\n            cf.gen_string_field(name=df.string_field, nullable=nullable),\n            cf.gen_json_field(name=df.json_field, nullable=nullable),\n            cf.gen_array_field(name=df.array_int_field, element_type=DataType.INT64, nullable=nullable),\n            cf.gen_array_field(name=df.array_float_field, element_type=DataType.FLOAT, nullable=nullable),\n            cf.gen_array_field(name=df.array_string_field, element_type=DataType.VARCHAR, max_length=100, nullable=nullable),\n            cf.gen_array_field(name=df.array_bool_field, element_type=DataType.BOOL, nullable=nullable),\n            cf.gen_float_vec_field(name=df.float_vec_field, dim=dim),\n            cf.gen_float16_vec_field(name=df.fp16_vec_field, dim=dim),\n            cf.gen_bfloat16_vec_field(name=df.bf16_vec_field, dim=dim),\n            cf.gen_sparse_vec_field(name=df.sparse_vec_field),\n        ]\n        c_name = cf.gen_unique_str(\"bulk_insert\")\n        schema = cf.gen_collection_schema(fields=fields, auto_id=auto_id, enable_dynamic_field=enable_dynamic_field)\n        self.collection_wrap.init_collection(c_name, schema=schema)\n        with RemoteBulkWriter(\n            schema=schema,\n            remote_path=\"bulk_data\",\n            connect_param=RemoteBulkWriter.ConnectParam(\n                bucket_name=self.bucket_name,\n                endpoint=self.minio_endpoint,\n                access_key=\"minioadmin\",\n                secret_key=\"minioadmin\",\n            ),\n            file_type=BulkFileType.CSV,\n        ) as remote_writer:\n            json_value = [\n                {\"key\": \"value\"},\n            ]\n            for i in range(entities):\n                row = {\n                    df.pk_field: i,\n                    df.int_field: 1 if not (nullable and random.random() < 0.5) else None,\n                    df.float_field: 1.0 if not (nullable and random.random() < 0.5) else None,\n                    df.string_field: \"string\" if not (nullable and random.random() < 0.5) else None,\n                    df.json_field: json_value[i%len(json_value)] if not (nullable and random.random() < 0.5) else None,\n                    df.array_int_field: [1, 2] if not (nullable and random.random() < 0.5) else None,\n                    df.array_float_field: [1.0, 2.0] if not (nullable and random.random() < 0.5) else None,\n                    df.array_string_field: [\"string1\", \"string2\"] if not (nullable and random.random() < 0.5) else None,\n                    df.array_bool_field: [True, False] if not (nullable and random.random() < 0.5) else None,\n                    df.float_vec_field: cf.gen_vectors(1, dim)[0],\n                    df.fp16_vec_field: cf.gen_vectors(1, dim, vector_data_type=\"FLOAT16_VECTOR\")[0],\n                    df.bf16_vec_field: cf.gen_vectors(1, dim, vector_data_type=\"BFLOAT16_VECTOR\")[0],\n                    df.sparse_vec_field: cf.gen_sparse_vectors(1, dim, sparse_format=sparse_format)[0]\n                }\n                if auto_id:\n                    row.pop(df.pk_field)\n                if enable_dynamic_field:\n                    row[\"name\"] = fake.name()\n                    row[\"address\"] = fake.address()\n                remote_writer.append_row(row)\n            remote_writer.commit()\n            files = remote_writer.batch_files\n            log.info(f\"bulk insert files: {files}\")\n        # import data\n        for f in files:\n            t0 = time.time()\n            task_id, _ = self.utility_wrap.do_bulk_insert(\n                collection_name=c_name, files=f\n            )\n            logging.info(f\"bulk insert task ids:{task_id}\")\n            success, states = self.utility_wrap.wait_for_bulk_insert_tasks_completed(\n                task_ids=[task_id], timeout=300\n            )\n            tt = time.time() - t0\n            log.info(f\"bulk insert state:{success} in {tt} with states:{states}\")\n            assert success\n        num_entities = self.collection_wrap.num_entities\n        log.info(f\" collection entities: {num_entities}\")\n>       assert num_entities == entities\nE       assert 0 == 1000\n\ntest_bulk_insert.py:1890: AssertionError\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-10-25", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "zhuwenxing"}
{"issue_number": 2312, "issue_title": "[Bug]: ImportError: cannot import name 'Function' from 'pymilvus'", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nFunction and FunctionType are not found in pymilvus 2.4.4/2.4.8\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-10-25", "closed_at": "2024-12-02", "labels": ["kind/question"], "State": "closed", "Author": "ChengRuiLiang"}
{"issue_number": 2311, "issue_title": "[Bug]: IndexParams type required by create_index() but not exposed in public API", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe MilvusClient.create_index() method expects an IndexParams type, but this type isn't exposed in the public API.\nThe create_index signature requires it.\n    def create_index(\n        self,\n        collection_name: str,\n        index_params: IndexParams,\n        timeout: Optional[float] = None,\n        **kwargs,\n    ):\n\nBut I can't import this type.\n>>> from pymilvus import IndexParams\nImportError: cannot import name 'IndexParams' from 'pymilvus'\n>>> from pymilvus.index import IndexParams  \nModuleNotFoundError: No module named 'pymilvus.index'\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\nNo response\nAnything else?\nNo response", "created_at": "2024-10-25", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "nvonpentz"}
{"issue_number": 2503, "issue_title": "[Bug]: `list_import_jobs` can't list non default database jobs when pass `collection_name`  parameter.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI have prepared data in minio remote path, and use bulk_import to load data, I use list_import_jobs method to get current jobs, it works well when I don't pass parameter collection_name, however, when I set collection_name, it can't return correct result.\nExpected Behavior\nWhen I use list_import_jobs with collection_name it should return result correctly.\nSteps/Code To Reproduce behavior\nfrom minio import Minio\nfrom pymilvus.bulk_writer import list_import_jobs\n\nfrom db.milvus_fixed import bulk_import\n\nbucket_name = \"a-bucket\"\n\ndef create_minio_client() -> Minio:\n    return Minio(\n        endpoint='127.0.0.1:9000',\n        access_key='minioadmin',\n        secret_key='minioadmin',\n        secure=False,\n    )\n\nif __name__ == '__main__':\n    minio_client = create_minio_client()\n    minio_path = \"/data/da137d38-4ff7-4f5d-b2d4-8debaa3dba18\"\n    db_name = \"local_test\"\n    collection_name = \"test\"\n\n    objects = minio_client.list_objects(\n        bucket_name=bucket_name,\n        prefix=minio_path,\n        recursive=True,\n    )\n    paths = [obj.object_name for obj in objects]\n\n    response = bulk_import(\n        url=\"http://localhost:19530\",\n        collection_name=collection_name,\n        files=[[path] for path in paths],\n        db_name=db_name,\n    )\n\n    job_id = response.json()[\"data\"][\"jobId\"]\n\n    print(\"insert to custom db job_id is {}\".format(job_id))\n\n    response = bulk_import(\n        url=\"http://localhost:19530\",\n        collection_name=collection_name,\n        files=[[path] for path in paths],\n        db_name=\"default\",\n    )\n\n    job_id = response.json()[\"data\"][\"jobId\"]\n\n    print(\"insert to default db job_id is {}\".format(job_id))\n\n    response = list_import_jobs(url=\"http://127.0.0.1:19530\")\n    data = (response.json())[\"data\"]\n\n    print(\"list jobs: {}\".format(data))\n\n\n    response = list_import_jobs(url=\"http://127.0.0.1:19530\", collection_name=collection_name)\n    data = (response.json())[\"data\"]\n\n    print(\"list jobs with collection name: {}\".format(data))\nAnd this is output\ninsert to custom db job_id is 454799264148166193\ninsert to default db job_id is 454799264148166197\nlist jobs: {'records': [{'collectionName': 'test', 'jobId': '454799264148158255', 'progress': 100, 'state': 'Completed'}, {'collectionName': 'test', 'jobId': '454799264148166193', 'progress': 0, 'state': 'Pending'}, {'collectionName': 'test', 'jobId': '454799264148166197', 'progress': 0, 'state': 'Pending'}]}\nlist jobs with collection name: {'records': [{'collectionName': 'test', 'jobId': '454799264148166197', 'progress': 0, 'state': 'Pending'}]}\n\n\nYou could see that the non default collection job query result is missing when I pass collection_name.\nThe bulk_import is modified to suppport db_name parameter as PR #2446 does.\n## bulkinsert RESTful api wrapper\ndef bulk_import(\n    url: str,\n    collection_name: str,\n    db_name: str = \"default\",\n    files: Optional[List[List[str]]] = None,\n    object_url: str = \"\",\n    cluster_id: str = \"\",\n    api_key: str = \"\",\n    access_key: str = \"\",\n    secret_key: str = \"\",\n    **kwargs,\n) -> requests.Response:\n    \"\"\"call bulkinsert restful interface to import files\n\n    Args:\n        url (str): url of the server\n        collection_name (str): name of the target collection\n        db_name (str): name of database\n        partition_name (str): name of the target partition\n        files (list of list of str): The files that contain the data to import.\n             A sub-list contains a single JSON or Parquet file, or a set of Numpy files.\n        object_url (str): The URL of the object to import.\n             This URL should be accessible to the S3-compatible\n             object storage service, such as AWS S3, GCS, Azure blob storage.\n        cluster_id (str): id of a milvus instance(for cloud)\n        api_key (str): API key to authenticate your requests.\n        access_key (str): access key to access the object storage\n        secret_key (str): secret key to access the object storage\n\n    Returns:\n        response of the restful interface\n    \"\"\"\n    request_url = url + \"/v2/vectordb/jobs/import/create\"\n\n    partition_name = kwargs.pop(\"partition_name\", \"\")\n    params = {\n        \"collectionName\": collection_name,\n        \"partitionName\": partition_name,\n        \"files\": files,\n        \"objectUrl\": object_url,\n        \"clusterId\": cluster_id,\n        \"accessKey\": access_key,\n        \"secretKey\": secret_key,\n        \"dbName\": db_name,\n    }\n\n    resp = _post_request(url=request_url, api_key=api_key, params=params, **kwargs)\n    _handle_response(request_url, resp.json())\n    return resp\nEnvironment details\n\nHardware/Softward conditions\n\nOS: Windows\nCPU: 13th Gen Intel(R) Core(TM) i7-1365U\n\n\nMethod of installation: docker-compose, standalone\nMilvus version : 2.4.15\nMilvus configuration :\n\ninsdie docker-compose.yaml\nservices:\n  etcd:\n    container_name: milvus-etcd\n    image: quay.io/coreos/etcd:v3.5.5\n    environment:\n      - ETCD_AUTO_COMPACTION_MODE=revision\n      - ETCD_AUTO_COMPACTION_RETENTION=1000\n      - ETCD_QUOTA_BACKEND_BYTES=4294967296\n      - ETCD_SNAPSHOT_COUNT=50000\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd\n    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd\n    healthcheck:\n      test: [\"CMD\", \"etcdctl\", \"endpoint\", \"health\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n\n  minio:\n    container_name: milvus-minio\n    image: minio/minio:RELEASE.2023-03-20T20-16-18Z\n    environment:\n      MINIO_ACCESS_KEY: minioadmin\n      MINIO_SECRET_KEY: minioadmin\n    ports:\n      - \"9001:9001\"\n      - \"9000:9000\"\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data\n    command: minio server /minio_data --console-address \":9001\"\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9000/minio/health/live\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n\n  standalone:\n    container_name: milvus-standalone\n    image: milvusdb/milvus:v2.4.15\n    command: [\"milvus\", \"run\", \"standalone\"]\n    security_opt:\n    - seccomp:unconfined\n    environment:\n      ETCD_ENDPOINTS: etcd:2379\n      MINIO_ADDRESS: minio:9000\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9091/healthz\"]\n      interval: 30s\n      start_period: 90s\n      timeout: 20s\n      retries: 3\n    ports:\n      - \"19530:19530\"\n      - \"9091:9091\"\n    depends_on:\n      - \"etcd\"\n      - \"minio\"\n\n  attu:\n    container_name: milvus-attu\n    image: zilliz/attu:v2.4\n    environment:\n      MILVUS_URL: standalone:19530\n    ports:\n      - \"8000:3000\"\n    depends_on:\n      - \"standalone\"\n    networks:\n      - default\n\nnetworks:\n  default:\n    name: milvus\n\nAnything else?\nNo response", "created_at": "2024-12-23", "closed_at": "2025-03-06", "labels": ["kind/bug"], "State": "closed", "Author": "counter2015"}
{"issue_number": 2496, "issue_title": "[Bug]: RuntimeWarning: coroutine 'Channel.close' was never awaited when closing async client", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nimport asyncio\nfrom pymilvus import MilvusClient, AsyncMilvusClient, DataType\nimport numpy as np\nrng = np.random.default_rng(seed=19530)\nnum_entities, dim = 10000, 128\ncollection_name = 'hello_milvus'\nuri = 'examples.db'\nfmt = \"\\n=== {:30} ===\\n\"\n\nasync def main():\n    milvus_client = MilvusClient(uri=uri)\n    async_milvus_client = AsyncMilvusClient(uri=uri)\n\n    schema = milvus_client.create_schema(auto_id=False,\n                                         description=\"hello_milvus is the simplest demo to introduce the APIs\")\n    schema.add_field(\"pk\", DataType.VARCHAR, is_primary=True, max_length=100)\n    schema.add_field(\"embeddings\", DataType.FLOAT_VECTOR, dim=dim)\n\n    index_params = milvus_client.prepare_index_params()\n    index_params.add_index(field_name=\"embeddings\", index_type=\"HNSW\", metric_type=\"L2\", nlist=128)\n\n    print(fmt.format(\"Start creating collection\"))\n    await async_milvus_client.create_collection(collection_name, schema=schema, index_params=index_params,\n                                                consistency_level=\"Strong\")\n    print(fmt.format(\"Creating collection done\"))\n    print(milvus_client.list_collections())\n\n    print(fmt.format(\"Start upserting entities\"))\n    entities = [\n        [str(i) for i in range(num_entities)],\n        rng.random((num_entities, dim)),\n    ]\n    rows = [{\"pk\": entities[0][i], \"embeddings\": entities[1][i]} for i in range(num_entities)]\n    await async_milvus_client.upsert(\n        collection_name=collection_name,\n        data=rows,\n    )\n    print(fmt.format(\"Upserting entities done\"))\n\n    print(fmt.format(f\"Start search with retrieve serveral fields.\"))\n    result = await async_milvus_client.search(\n        collection_name=collection_name,\n        data=rng.random((1, dim)),\n        output_fields=[\"pk\"],\n    )\n\n    print(result)\n\n    async_milvus_client.close()\n\nasyncio.run(main())\n/Users/zilliz/Documents/GitHub/pymilvus_fork/pymilvus/client/async_grpc_handler.py:114: RuntimeWarning: coroutine 'Channel.close' was never awaited\nself._async_channel.close()\nRuntimeWarning: Enable tracemalloc to get the object allocation traceback\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-12-23", "closed_at": "2024-12-23", "labels": ["kind/bug"], "State": "closed", "Author": "brcarry"}
{"issue_number": 2495, "issue_title": "[Bug]: Milvus Lite Times out when trying to insert None Scalar Value", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I try to insert a row with nullable values into a collection in milvus lite, no error is returned but somehow the connection times out all of a sudden with StatusCode.UNAVAILABLE, failed to connect to all addresses; last error: UNKNOWN.\nExpected Behavior\nMilvus lite should support nullable scalar values or at least surface a proper error message\nSteps/Code To Reproduce behavior\nfrom pymilvus import DataType, MilvusClient\n\n# setup client\ndatabase_uri = \"./milvus.db\"\nclient = MilvusClient(database_uri)\nassert client is not None\n\n# setup collection with nullable field\nassert client.has_collection(\"test\") is False\nschema = client.create_schema(auto_id=False, enable_dynamic_field=True)\nschema.add_field(\"id\", DataType.INT64, is_primary=True)\nschema.add_field(\"nullable\", DataType.VARCHAR, max_length=256, nullable=True)\nschema.add_field(\"vector\", DataType.FLOAT_VECTOR, dim=2)\nclient.create_collection(\"test\", schema=schema)\nindex_params = MilvusClient.prepare_index_params()\nindex_params.add_index(field_name=\"vector\", index_name=\"test_vector\", index_type=\"FLAT\", metric_type=\"L2\")\nclient.create_index(\"test\", index_params=index_params)\nclient.load_collection(\"test\")\nassert client.has_collection(\"test\") is True\n\n# insert a row with no nullable values\nclient.insert(\"test\", [{\"id\": 1, \"nullable\": \"test\", \"vector\": [0.0, 0.0]}])\nassert client.query(\"test\", output_fields=[\"count(*)\"])[0][\"count(*)\"] == 1\n\n# insert  a row with nullable values\nclient.insert(\"test\", [{\"id\": 2, \"nullable\": None, \"vector\": [0.0, 0.0]}])\nYou will start seeing logs like this:\n2024-12-20 16:19:20 [INFO] [describe_collection] retry:4, cost: 0.27s, reason: <_MultiThreadedRendezvous: StatusCode.UNAVAILABLE, failed to connect to all addresses; last error: UNKNOWN: unix:/var/folders/mw/h0vwcj5x08d0d7_8hhs01xlc0000gn/T/tmp54l8z0wy_milvus.db.sock: connect: Connection refused (61)>\n\nEnvironment details\n\nHardware/Softward conditions: macOS, MacBook with M3 Max\nMethod of installation pymilvus\npymilvus v2.5.0 using milvus lite\n", "created_at": "2024-12-21", "closed_at": "2025-01-06", "labels": ["kind/bug", "milvus-lite"], "State": "closed", "Author": "MrLoh"}
{"issue_number": 2481, "issue_title": "[Enhancement]: Provide milvus_client example for search_group_by", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nProvide milvus_client example for search_group_by\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-12-19", "closed_at": "2025-01-06", "labels": ["kind/enhancement"], "State": "closed", "Author": "MrPresent-Han"}
{"issue_number": 2480, "issue_title": "[Bug]: v2.5.0 run text_embedding.py example tip error\uff1apymilvus.exceptions.DataNotMatchException", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\u5f53\u6211\u8fd0\u884cexample\u76ee\u5f55\u4e0b\u7684text_embedding.py,\u62a5\u9519\uff1a\npymilvus.exceptions.DataNotMatchException: <DataNotMatchException: (code=1, message=Insert missed an field `dense` to collection without set nullable==true or set default_value)>\n\n\u4e0b\u9762\u662f\u6211\u8c03\u6574\u4e4b\u540e\u7684\u4ee3\u7801\uff0c\u52a0\u5165\u4e86\u521b\u5efa\u6570\u636e\u5e93\u7684\u903b\u8f91\uff1a\n# hello_text_embedding.py demonstrates how to insert raw data only into Milvus and perform\n# dense vector based ANN search using TextEmbedding.\n# 1. connect to Milvus\n# 2. create collection\n# 3. insert data\n# 4. create index\n# 5. search\n# 6. drop collection\nimport time\n\nfrom pymilvus import (\n    MilvusClient,\n    utility,\n    FieldSchema, CollectionSchema, Function, DataType, FunctionType,\n    Collection,\n)\n\nfrom pymilvus import connections, db\n\nconn = connections.connect(host=\"127.0.0.1\", port=19530)\n\ndatabases = db.list_database()\nprint(databases)\ndb_name = \"my_db\"\nif db_name not in databases:\n    print(\"\u9700\u8981\u521b\u5efa\u6570\u636e\u5e93\")\n    database = db.create_database(db_name)\n    print(\"\u521b\u5efa\u6570\u636e\u5e93\u6210\u529f\")\n\ncollection_name = \"text_embedding\"\n\nmilvus_client = MilvusClient(\"http://127.0.0.1:19530\", db_name=db_name)\n\nhas_collection = milvus_client.has_collection(collection_name, timeout=5)\nschema = milvus_client.create_schema()\nschema.add_field(\"id\", DataType.INT64, is_primary=True, auto_id=False)\nschema.add_field(\"document\", DataType.VARCHAR, max_length=9000)\nschema.add_field(\"dense\", DataType.FLOAT_VECTOR, dim=1536)\n\ntext_embedding_function = Function(\n    name=\"openai\",\n    function_type=FunctionType.TEXTEMBEDDING,\n    input_field_names=[\"document\"],\n    output_field_names=\"dense\",\n    params={\n        \"provider\": \"openai\",\n        \"model_name\": \"text-embedding-3-small\",\n    }\n)\n\nschema.add_function(text_embedding_function)\n\nindex_params = milvus_client.prepare_index_params()\nindex_params.add_index(\n    field_name=\"dense\",\n    index_name=\"dense_index\",\n    index_type=\"AUTOINDEX\",\n    metric_type=\"IP\",\n)\n\nret = milvus_client.create_collection(collection_name, schema=schema, index_params=index_params, consistency_level=\"Strong\")\n\nrows = [\n        {\"id\": 1, \"document\": \"Artificial intelligence was founded as an academic discipline in 1956.\"},\n        {\"id\": 2, \"document\": \"Alan Turing was the first person to conduct substantial research in AI.\"},\n        {\"id\": 3, \"document\": \"Born in Maida Vale, London, Turing was raised in southern England.\"},\n]\n\ninsert_result = milvus_client.insert(collection_name, rows, progress_bar=True)\n\n\n# -----------------------------------------------------------------------------\nsearch_params = {\n    \"params\": {\"nprobe\": 10},\n}\nqueries = [\"When was artificial intelligence founded\",\n           \"Where was Alan Turing born?\"]\n\nstart_time = time.time()\nresult = milvus_client.search(collection_name, data=queries, anns_field=\"dense\", search_params=search_params, limit=3, output_fields=[\"document\"], consistency_level=\"Strong\")\nend_time = time.time()\n\nfor hits, text in zip(result, queries):\n    print(f\"result of text: {text}\")\n    for hit in hits:\n        print(f\"\\thit: {hit}, document field: {hit.get('document')}\")\n\u9519\u8bef\u8be6\u7ec6\u4fe1\u606f\uff1a\nRPC error: [insert_rows], <DataNotMatchException: (code=1, message=Insert missed an field `dense` to collection without set nullable==true or set default_value)>, <Time:{'RPC start': '2024-12-19 17:54:08.846455', 'RPC error': '2024-12-19 17:54:08.895140'}>\nTraceback (most recent call last):\n  File \"E:\\work\\incremental-learning\\api\\tests\\t_milvus.py\", line 69, in <module>\n    insert_result = milvus_client.insert(collection_name, rows, progress_bar=True)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 225, in insert\n    raise ex from ex\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 221, in insert\n    res = conn.insert_rows(\n          ^^^^^^^^^^^^^^^^^\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 141, in handler\n    raise e from e\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 137, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 176, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 116, in handler\n    raise e from e\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 86, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 494, in insert_rows\n    request = self._prepare_row_insert_request(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 520, in _prepare_row_insert_request\n    return Prepare.row_insert_param(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\client\\prepare.py\", line 601, in row_insert_param\n    return cls._parse_row_request(request, fields_info, enable_dynamic, entities)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\work\\incremental-learning\\api\\.venv\\Lib\\site-packages\\pymilvus\\client\\prepare.py\", line 462, in _parse_row_request\n    raise DataNotMatchException(\npymilvus.exceptions.DataNotMatchException: <DataNotMatchException: (code=1, message=Insert missed an field `dense` to collection without set nullable==true or set default_value)>\n\nExpected Behavior\n\u8fd0\u884c\u7ed3\u679c\u4e0d\u62a5\u9519\nSteps/Code To Reproduce behavior\n\u5982\u4e0a\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): \n- Method of installation (Docker, or from source): Docker\n- Milvus version (v0.3.1, or v0.4.0): v2.4.1 \n- PyMilvus Version: v2.5.0\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-12-19", "closed_at": null, "labels": ["kind/feature"], "State": "open", "Author": "danerlt"}
{"issue_number": 2475, "issue_title": "[Bug]: AsyncMilvusClient failed to connect zillizcloud with uri and token", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nuri = \"https://in01-12d6e643fc0f514.aws-us-west-2.vectordb-uat3.zillizcloud.com:19534\"\ntoken = \"6aff23xxxba25fa4\"\nmilvus_client = MilvusClient(uri=uri,token=token)\nasync_milvus_client = AsyncMilvusClient(uri=uri,token=token)\nerror:\n2024-12-18 14:04:33,498 [ERROR][handler]: grpc RpcError: [__internal_register], <AioRpcError: StatusCode.UNAUTHENTICATED, missing authorization in header>, <Time:{'RPC start': '2024-12-18 14:04:33.362641', 'gRPC error': '2024-12-18 14:04:33.498419'}> (decorators.py:156)\n2024-12-18 14:04:33,498 [ERROR][_create_connection]: Failed to create new connection using: a39c46be46934e55b5d230eb855e124f (async_milvus_client.py:543)\nTraceback (most recent call last):\n  File \"/home/zong/PycharmProjects/async-test/async_defaut.py\", line 26, in <module>\n    async_milvus_client = AsyncMilvusClient(uri=uri,token=token)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/milvus_client/async_milvus_client.py\", line 44, in __init__\n    self._using = self._create_connection(\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/milvus_client/async_milvus_client.py\", line 544, in _create_connection\n    raise ex from ex\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/milvus_client/async_milvus_client.py\", line 539, in _create_connection\n    connections.connect(\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/orm/connections.py\", line 452, in connect\n    connect_milvus(**kwargs, user=user, password=password, token=token, db_name=db_name)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/orm/connections.py\", line 403, in connect_milvus\n    gh._wait_for_channel_ready(timeout=timeout)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/client/async_grpc_handler.py\", line 127, in _wait_for_channel_ready\n    raise e from e\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/client/async_grpc_handler.py\", line 120, in _wait_for_channel_ready\n    self._setup_identifier_interceptor(self._user, timeout=timeout)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/client/async_grpc_handler.py\", line 225, in _setup_identifier_interceptor\n    self._identifier = self.__internal_register(user, host, timeout=timeout)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 160, in handler\n    raise e from e\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 142, in handler\n    return func(*args, **kwargs)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 181, in handler\n    return func(self, *args, **kwargs)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 91, in handler\n    raise e from e\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 87, in handler\n    return func(*args, **kwargs)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 219, in handler\n    raise e from e\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 211, in handler\n    return func(*args, **kwargs)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/client/async_grpc_handler.py\", line 693, in __internal_register\n    response = loop.run_until_complete(wait_for_connect_response())\n  File \"/usr/lib/python3.9/asyncio/base_events.py\", line 647, in run_until_complete\n    return future.result()\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/client/async_grpc_handler.py\", line 690, in wait_for_connect_response\n    return await self._async_stub.Connect(request=req)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/grpc/aio/_call.py\", line 318, in __await__\n    raise _create_rpc_error(\ngrpc.aio._call.AioRpcError: <AioRpcError of RPC that terminated with:\n        status = StatusCode.UNAUTHENTICATED\n        details = \"missing authorization in header\"\n        debug_error_string = \"UNKNOWN:Error received from peer  {grpc_message:\"missing authorization in header\", grpc_status:16, created_time:\"2024-12-18T14:04:33.497619596+08:00\"}\"\n>\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-12-18", "closed_at": "2024-12-18", "labels": ["kind/bug"], "State": "closed", "Author": "ThreadDao"}
{"issue_number": 2474, "issue_title": "[Bug]: After await AsyncMilvusClient create index and load finished, the index state and load state is still in-progress", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\nawait AsyncMilvusClient create collection with specify schema\nawait AsyncMilvusClient insert entities\nawait index and await load\nMilvusClient get index and loading state\n\n2024-12-18 20:07:23,496 [DEBUG][_create_index]: Successfully created an index on collection: hello_milvus (async_milvus_client.py:199)\n[2024-12-18 20:07:23,523 - INFO - async_test]: {'index_type': 'HNSW', 'metric_type': 'COSINE', 'M': '30', 'efConstruction': '200', 'field_name': 'vector', 'index_name': 'vector', 'total_rows': 10000, 'indexed_rows': 0, 'pending_index_rows': 10000, 'state': 'InProgress'} (async_index_load.py:84)\n[2024-12-18 20:07:23,537 - INFO - async_test]: {'state': <LoadState: Loading>, 'progress': 0} (async_index_load.py:85)\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nfrom pymilvus import (\n    DataType,\n    MilvusClient,\n    AsyncMilvusClient,\n    AnnSearchRequest,\n    RRFRanker,\n)\nimport numpy as np\nimport asyncio\nimport time\nimport random\nfrom util_log import test_log as log\n\n#\nnum_entities, dim = 10000, 128\nnq, default_limit = 2, 3\ncollection_name = \"hello_milvus\"\nrng = np.random.default_rng(seed=19530)\noutput_fields = [\"id\"]\n\nuri = \"http://10.104.17.186:19530\"\nmilvus_client = MilvusClient(uri=uri)\nasync_milvus_client = AsyncMilvusClient(uri=uri)\n\nloop = asyncio.get_event_loop()\n\n\n# prepare collection\nasync def recreate_collection():\n    log.info(\"Start dropping all collection\")\n    for c in milvus_client.list_collections():\n        await async_milvus_client.drop_collection(c)\n    log.info(\"Dropping collection done\")\n\n    log.info(\"Start creating collection\")\n    schema = async_milvus_client.create_schema(auto_id=False)\n    schema.add_field(\"id\", DataType.INT64, is_primary=True)\n    schema.add_field(\"vector\", DataType.FLOAT_VECTOR, dim=dim)\n    await async_milvus_client.create_collection(collection_name, schema=schema, consistency_level=\"Strong\")\n    log.info(\"Creating collection done\")\n\n\nloop.run_until_complete(recreate_collection())\nlog.info(f\"    all collections: {milvus_client.list_collections()}\")\nlog.info(f\"schema of collection {collection_name}\")\nlog.info(milvus_client.describe_collection(collection_name))\n\n\n# insert\nasync def async_insert():\n    rows = [\n        {\"id\": i, \"vector\": [random.random() for _ in range(dim)]}\n        for i in range(num_entities)]\n    log.info((\"Start async inserting entities\"))\n\n    start_time = time.time()\n    tasks = []\n    for i in range(0, num_entities, 1000):\n        task = async_milvus_client.insert(collection_name, rows[i:i + 1000])\n        tasks.append(task)\n    results = await asyncio.gather(*tasks)\n    end_time = time.time()\n    log.info(\"Total time: {:.2f} seconds\".format(end_time - start_time))\n    log.info(\"Async inserting entities done\")\n    return results\n\n\ninsert_res = loop.run_until_complete(async_insert())\nfor r in insert_res:\n    log.info(r['insert_count'])\nmilvus_client.flush(collection_name)\n\n\n# index and load\nasync def async_index_load():\n    index_params = milvus_client.prepare_index_params()\n    index_params.add_index(field_name=\"vector\", index_type=\"HNSW\", metric_type=\"COSINE\", M=30, efConstruction=200)\n    await async_milvus_client.create_index(collection_name, index_params)\n    await async_milvus_client.load_collection(collection_name)\n\nlog.info(\"Async index and load done\")\nloop.run_until_complete(async_index_load())\nlog.info(milvus_client.describe_index(collection_name, \"vector\"))\nlog.info(milvus_client.get_load_state(collection_name, \"\"))\n\n\n### Environment details\n\n```markdown\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\n\nAnything else?\nNo response", "created_at": "2024-12-18", "closed_at": "2024-12-19", "labels": ["kind/bug"], "State": "closed", "Author": "ThreadDao"}
{"issue_number": 2469, "issue_title": "[Bug]: AsyncMilvusClient create_collection without schema: 'AsyncGrpcHandler' object has no attribute 'async_create_collection'", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\ninit AsyncMilvusClient\nAsyncMilvusClient create collection without schema and gets error:\n\n2024-12-18 16:56:30,750 [ERROR][_fast_create_collection]: Failed to create collection: hello_milvus (async_milvus_client.py:123)\nTraceback (most recent call last):\n  File \"/home/zong/PycharmProjects/async-test/async_debug.py\", line 55, in <module>\n    loop.run_until_complete(prepare_collection())\n  File \"/usr/lib/python3.9/asyncio/base_events.py\", line 647, in run_until_complete\n    return future.result()\n  File \"/home/zong/PycharmProjects/async-test/async_debug.py\", line 50, in prepare_collection\n    await async_milvus_client.create_collection(collection_name, dimension=128, consistency_level=\"Strong\")\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/milvus_client/async_milvus_client.py\", line 64, in create_collection\n    return await self._fast_create_collection(\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/milvus_client/async_milvus_client.py\", line 124, in _fast_create_collection\n    raise ex from ex\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/milvus_client/async_milvus_client.py\", line 120, in _fast_create_collection\n    await conn.async_create_collection(collection_name, schema, timeout=timeout, **kwargs)\nAttributeError: 'AsyncGrpcHandler' object has no attribute 'async_create_collection'\n\n\ncase\n\nfrom pymilvus import (\n    DataType,\n    MilvusClient,\n    AsyncMilvusClient,\n)\nimport numpy as np\nimport asyncio\nfrom util_log import test_log as log\n\n#\nnum_entities, dim = 10000, 128\nnq, default_limit = 2, 3\ncollection_name = \"hello_milvus\"\nrng = np.random.default_rng(seed=19530)\noutput_fields = [\"pk\", \"random\"]\n\nuri = \"http://10.104.17.186:19530\"\ndb_name = \"zong\"\n_client = MilvusClient(uri=uri)\nif db_name not in _client.list_databases():\n    _client.create_database(db_name)\n\n_client.close()\nmilvus_client = MilvusClient(uri=uri)\nasync_milvus_client = AsyncMilvusClient(uri=uri)\n\nloop = asyncio.get_event_loop()\n\n\n# prepare collection\nasync def prepare_collection():\n    for c in milvus_client.list_collections():\n        log.info(f\"Start dropping collection {c}\")\n        await async_milvus_client.drop_collection(c)\n        log.info(f\"Dropping collection {c} done\")\n\n    log.info(\"Start creating collection\")\n    await async_milvus_client.create_collection(collection_name, dimension=128, consistency_level=\"Strong\")\n    log.info(\"Creating collection done\")\n    await async_milvus_client.load_collection(collection_name)\n\n\nloop.run_until_complete(prepare_collection())\nlog.info(f\"    all collections: {milvus_client.list_collections()}\")\nlog.info(f\"schema of collection {collection_name}\")\nlog.info(milvus_client.describe_collection(collection_name))\n\n\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-12-18", "closed_at": "2024-12-19", "labels": ["kind/bug"], "State": "closed", "Author": "ThreadDao"}
{"issue_number": 2468, "issue_title": "[Bug]: AsyncMilvusClient db_name doesn't take effect", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\ncreate db 'zong'\ninit AsyncMilvusClient with db_name=\"zong\"\nAsyncMilvusClient create collection 'hello_milvus'\nexpected 'hello_milvus' in db 'zong', actually it in 'default' db\n\nfrom pymilvus import (\n    DataType,\n    MilvusClient,\n    AsyncMilvusClient,\n)\nimport numpy as np\nimport asyncio\nfrom util_log import test_log as log\n\n#\nnum_entities, dim = 10000, 128\nnq, default_limit = 2, 3\ncollection_name = \"hello_milvus\"\nrng = np.random.default_rng(seed=19530)\noutput_fields = [\"pk\", \"random\"]\n\nuri = \"http://10.104.17.186:19530\"\ndb_name = \"zong\"\n_client = MilvusClient(uri=uri)\nif db_name not in _client.list_databases():\n    _client.create_database(db_name)\n\n_client.close()\nmilvus_client = MilvusClient(uri=uri, db_name=db_name)\nasync_milvus_client = AsyncMilvusClient(uri=uri, db_name=db_name)\n\nloop = asyncio.get_event_loop()\n\n\n# prepare collection\nschema = async_milvus_client.create_schema(auto_id=False,\n                                           description=\"hello_milvus is the simplest demo to introduce the APIs\")\nschema.add_field(\"pk\", DataType.VARCHAR, is_primary=True, max_length=100)\nschema.add_field(\"random\", DataType.FLOAT)\nschema.add_field(\"embeddings\", DataType.FLOAT_VECTOR, dim=dim)\nschema.add_field(\"embeddings2\", DataType.FLOAT_VECTOR, dim=dim)\n\nindex_params = milvus_client.prepare_index_params()\nindex_params.add_index(field_name=\"embeddings\", index_type=\"HNSW\", metric_type=\"L2\", M=30, efConstruction=200)\nindex_params.add_index(field_name=\"embeddings2\", index_type=\"IVF_SQ8\", metric_type=\"L2\", nlist=64)\n\n\nasync def prepare_collection():\n    for c in milvus_client.list_collections():\n        log.info(f\"Start dropping collection {c}\")\n        await async_milvus_client.drop_collection(c)\n        log.info(f\"Dropping collection {c} done\")\n\n    log.info(\"Start creating collection\")\n    await async_milvus_client.create_collection(collection_name, schema=schema, index_params=index_params, consistency_level=\"Strong\")\n    log.info(\"Creating collection done\")\n\n\nloop.run_until_complete(prepare_collection())\nlog.info(f\"    all collections: {milvus_client.list_collections()}\")\nlog.info(f\"schema of collection {collection_name}\")\nlog.info(milvus_client.describe_collection(collection_name))\n\n\nlogs\n\npython3 async_debug.py \n2024-12-18 16:49:23,707 [DEBUG][_create_connection]: Created new connection using: 11c97741be2849a2b0ae129f381f08f9 (async_milvus_client.py:546)\n[2024-12-18 16:49:23,715 - INFO - async_test]: Start creating collection (async_debug.py:55)\n2024-12-18 16:49:23,725 [DEBUG][_create_collection_with_schema]: Successfully created collection: hello_milvus (async_milvus_client.py:146)\n2024-12-18 16:49:23,746 [DEBUG][_create_index]: Successfully created an index on collection: hello_milvus (async_milvus_client.py:199)\n2024-12-18 16:49:23,765 [DEBUG][_create_index]: Successfully created an index on collection: hello_milvus (async_milvus_client.py:199)\n[2024-12-18 16:49:23,778 - INFO - async_test]: Creating collection done (async_debug.py:57)\n[2024-12-18 16:49:23,785 - INFO - async_test]:     all collections: [] (async_debug.py:61)\n[2024-12-18 16:49:23,785 - INFO - async_test]: schema of collection hello_milvus (async_debug.py:62)\n2024-12-18 16:49:23,793 [ERROR][handler]: RPC error: [describe_collection], <DescribeCollectionException: (code=100, message=can't find collection[database=zong][collection=hello_milvus])>, <Time:{'RPC start': '2024-12-18 16:49:23.785686', 'RPC error': '2024-12-18 16:49:23.793145'}> (decorators.py:145)\nTraceback (most recent call last):\n  File \"/home/zong/PycharmProjects/async-test/async_debug.py\", line 63, in <module>\n    log.info(milvus_client.describe_collection(collection_name))\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/milvus_client/milvus_client.py\", line 644, in describe_collection\n    return conn.describe_collection(collection_name, timeout=timeout, **kwargs)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 146, in handler\n    raise e from e\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 142, in handler\n    return func(*args, **kwargs)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 181, in handler\n    return func(self, *args, **kwargs)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 121, in handler\n    raise e from e\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/decorators.py\", line 87, in handler\n    return func(*args, **kwargs)\n  File \"/home/zong/PycharmProjects/async-test/venv/lib/python3.9/site-packages/pymilvus/client/grpc_handler.py\", line 398, in describe_collection\n    raise DescribeCollectionException(status.code, status.reason, status.error_code)\npymilvus.exceptions.DescribeCollectionException: <DescribeCollectionException: (code=100, message=can't find collection[database=zong][collection=hello_milvus])>\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-12-18", "closed_at": "2024-12-19", "labels": ["kind/bug"], "State": "closed", "Author": "ThreadDao"}
{"issue_number": 2464, "issue_title": "[FEATURE]: Milvus Client support query/search iterator", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nPymilvus-milvus client support query/search iterator\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2024-12-18", "closed_at": "2025-01-02", "labels": ["kind/feature"], "State": "closed", "Author": "MrPresent-Han"}
{"issue_number": 2463, "issue_title": "[FEATURE]: Specify index_name while creating llama-index MilvusVectorStore instance", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nIm working on a python rag project. where im using milvus as vector database and using llama-index for setting up the project.\nI have done setting up milvus database, wrote code for embedding the documents, in milvus collection i have created a schema and added 3 indexes. among those 2 are scalar indexes and one is a vector index.\ndef _create_indexes(self, collection: Collection):\n        \"\"\"Create indexes on the collection\"\"\"\n        try:\n            collection.drop_index()\n        except Exception as e:\n            logger.warning(f\"No existing indexes to drop: {e}\")\n\n        collection.create_index(field_name=\"account_id\", index_name=\"account_id_index\")\n        collection.create_index(field_name=\"file_id\", index_name=\"file_id_index\")\n\n        index_params = {\n            \"index_type\": \"IVF_FLAT\",\n            \"metric_type\": \"IP\",\n            \"params\": {\"nlist\": self.config.nlist},\n        }\n        collection.create_index(\n            field_name=\"embedding\",\n            index_params=index_params,\n            index_name=\"embedding_index\",\n        )\n        collection.load()\n\nMilvus is getting populated successfully, all 3 indexes are also getting created.\ni got the following when i logged the index details\n2024-12-17 17:24:17 - milvus - INFO - Index details - Field: account_id, index_name: account_id_index Type: {}\n2024-12-17 17:24:17 - milvus - INFO - Index details - Field: file_id, index_name: file_id_index Type: {}\n2024-12-17 17:24:17 - milvus - INFO - Index details - Field: embedding, index_name: embedding_index Type: {'index_type': 'IVF_FLAT', 'metric_type': 'IP', 'params': {'nlist': 4096}}\n\nAfter this, for doing the similarity search i was trying to create an instance of MilvusVectorStore\nin the following way.\nself._store = MilvusVectorStore(\n                uri=self.config.uri,\n                collection_name=collection_name,\n                dim=self.config.embedding_dim,\n                similarity_metric=\"IP\",\n                embedding_field=\"embedding\",\n                index_name=\"embedding_index\",\n                search_config={\n                    \"metric_type\": \"IP\",\n                    \"params\": {\"nprobe\": self.config.nprobe},\n                    \"index_name\": \"embedding_index\",\n                },\n                index_config={\n                    \"field_name\": \"embedding\",\n                    \"index_type\": \"IVF_FLAT\",\n                    \"metric_type\": \"IP\",\n                    \"params\": {\"nlist\": self.config.nlist},\n                    \"index_name\": \"embedding_index\",\n                },\n            )\n\nbut, since i have multiple indexes, im getting the following error(that's what error says)\n pymilvus.decorators - ERROR - RPC error: [describe_index], <AmbiguousIndexName: (code=1, message=There are multiple indexes, please specify the index_name.)>, <Time:{'RPC start': '2024-12-17 17:24:17.551945', 'RPC error': '2024-12-17 17:24:17.584774'}>\n\ni couldnt find anywhere how to i specify the index_name during this process(thats what error says).\nIt looks like there is no way to specify index during the initialization of MilvusVectorStore instance.\nDescribe the solution you'd like\nIt would be better if we can specify index_name during the initialization of MilvusVectorStore either through the param index_config or search_config. Something like what I have written already in the code\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2024-12-18", "closed_at": "2024-12-18", "labels": ["kind/feature"], "State": "closed", "Author": "legacy-dev6"}
{"issue_number": 2460, "issue_title": "[Bug]: pymilvus.exceptions.MilvusException: <MilvusException: (code=1, message=Unexpected error, message=<required argument is not a float>)>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nhttps://stackoverflow.com/questions/79259370/how-to-fix-milvusexception-code-1-message-unexpected-error-message-require\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-12-17", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "DotaArtist"}
{"issue_number": 2447, "issue_title": "[Enhancement]: createdatabase support properties", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\ncreatedatabase support properties\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-12-13", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "JsDove"}
{"issue_number": 2440, "issue_title": "[Enhancement]: User trusted publisher for publishing actions", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nhttps://docs.pypi.org/trusted-publishers/using-a-publisher/\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-12-13", "closed_at": "2025-01-22", "labels": ["kind/enhancement"], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 2436, "issue_title": "[Bug]: \u96c6\u7fa4\u7248\u5220\u9664\u5206\u533a\uff08partitions\uff09\u7684\u65f6\u5019\u7684\u65f6\u5019\uff0c\u62a5failed to release partitions, err=releasing some partitions after load collection is not supported\uff0c\u8bf7\u95ee\u6709\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u7684\u5417", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\u96c6\u7fa4\u7248\u5220\u9664\u5206\u533a\uff08partitions\uff09\u7684\u65f6\u5019\u7684\u65f6\u5019\uff0c\u62a5failed to release partitions, err=releasing some partitions after load collection is not supported\uff0c\u8bf7\u95ee\u6709\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u7684\u5417\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-12-12", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "luo8433"}
{"issue_number": 2431, "issue_title": "[Bug]: `RemoteBulkWriter` doesn't work in Windows environment.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI deploy a milvus-standalone on my laptop, and try to use RemoteBulkWriter\nIt writes data just under bucket root path \\\\1.json as following.\n\nAnd I try to deploy to docker, it can write to folder /data correctly\nExpected Behavior\nThe data should be upload to minio path such like s3://a-bucket/data/<uuid>/1.json\nSteps/Code To Reproduce behavior\nfrom pymilvus import CollectionSchema, FieldSchema, DataType\nfrom pymilvus.bulk_writer import RemoteBulkWriter\n\nif __name__ == \"__main__\":\n    ACCESS_KEY = \"minioadmin\"\n    SECRET_KEY = \"minioadmin\"\n    BUCKET_NAME = \"a-bucket\"\n    ENDPOINT = \"localhost:9000\"\n\n    conn = RemoteBulkWriter.S3ConnectParam(\n        endpoint=ENDPOINT,\n        access_key=ACCESS_KEY,\n        secret_key=SECRET_KEY,\n        bucket_name=BUCKET_NAME,\n    )\n\n    from pymilvus.bulk_writer import BulkFileType\n\n    schema = CollectionSchema(\n        fields=[\n            FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=True),\n            FieldSchema(name=\"embedding\", dtype=DataType.FLOAT_VECTOR, dim=768),\n            FieldSchema(name=\"text\", dtype=DataType.VARCHAR, max_length=4096),\n        ],\n        description=\"Test collection\",\n        enable_dynamic_field=True,\n    )\n\n    writer = RemoteBulkWriter(\n        schema=schema,\n        remote_path=\"/data\",\n        connect_param=conn,\n        file_type=BulkFileType.JSON,\n    )\n\n    for i in range(1000):\n        writer.append_row({\"embedding\": [1.0] * 768, \"text\": \"hello world\"})\n\n    writer.commit()\n    print(writer.batch_files) # [['\\\\1.json']]\n    print(writer.data_path) # \\data\\8a67749b-bb60-4369-bdb4-b5e5f5853a6e\n    print(writer.uuid) # 8a67749b-bb60-4369-bdb4-b5e5f5853a6e\nEnvironment details\n\nHardware/Softward conditions\n\nOS: Windows\nCPU: 13th Gen Intel(R) Core(TM) i7-1365U\n\n\nMethod of installation: docker-compose, standalone\nMilvus version : 2.4.15\nMilvus configuration :\n\ninsdie docker-compose.yaml\nservices:\n  etcd:\n    container_name: milvus-etcd\n    image: quay.io/coreos/etcd:v3.5.5\n    environment:\n      - ETCD_AUTO_COMPACTION_MODE=revision\n      - ETCD_AUTO_COMPACTION_RETENTION=1000\n      - ETCD_QUOTA_BACKEND_BYTES=4294967296\n      - ETCD_SNAPSHOT_COUNT=50000\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd\n    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd\n    healthcheck:\n      test: [\"CMD\", \"etcdctl\", \"endpoint\", \"health\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n\n  minio:\n    container_name: milvus-minio\n    image: minio/minio:RELEASE.2023-03-20T20-16-18Z\n    environment:\n      MINIO_ACCESS_KEY: minioadmin\n      MINIO_SECRET_KEY: minioadmin\n    ports:\n      - \"9001:9001\"\n      - \"9000:9000\"\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data\n    command: minio server /minio_data --console-address \":9001\"\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9000/minio/health/live\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n\n  standalone:\n    container_name: milvus-standalone\n    image: milvusdb/milvus:v2.4.15\n    command: [\"milvus\", \"run\", \"standalone\"]\n    security_opt:\n    - seccomp:unconfined\n    environment:\n      ETCD_ENDPOINTS: etcd:2379\n      MINIO_ADDRESS: minio:9000\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9091/healthz\"]\n      interval: 30s\n      start_period: 90s\n      timeout: 20s\n      retries: 3\n    ports:\n      - \"19530:19530\"\n      - \"9091:9091\"\n    depends_on:\n      - \"etcd\"\n      - \"minio\"\n\n  attu:\n    container_name: milvus-attu\n    image: zilliz/attu:v2.4\n    environment:\n      MILVUS_URL: standalone:19530\n    ports:\n      - \"8000:3000\"\n    depends_on:\n      - \"standalone\"\n    networks:\n      - default\n\nnetworks:\n  default:\n    name: milvus\n\nAnything else?\nI have not test this behavior on other SDK, should we add test to CI/CD stage towards windows platform ?", "created_at": "2024-12-12", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "counter2015"}
{"issue_number": 2424, "issue_title": "[Bug]: text_match error 1100 invalid expr invalid parameter", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe /examples/orm/hello_text_match.py fails with milvus exception code 1100 invalid expr: TEXT_MATCH(document, \u2018milvus\u2019): invalid parameter\nsteps to reproduce - run example code as is on Ubuntu 22.04.3 LTS Jammy\nusing pymilvus 2.5.0 sdk\ndatabase is local file\nExpected Behavior\nExample code to complete without error\nSteps/Code To Reproduce behavior\nRun example hello_text_match.py\nEnvironment details\nInstall pip install\nRunning Python 3.10.12\nAnything else?\nNo response", "created_at": "2024-12-10", "closed_at": null, "labels": ["kind/question", "milvus-lite"], "State": "open", "Author": "TGlock"}
{"issue_number": 2418, "issue_title": "[Enhancement]: Extend offset for QueryIterator", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nCurrently, input offset for query iterator can not be larger than 16384 which restricts users a lot. This issue is to cancel this limit\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-12-09", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 2414, "issue_title": "[Bug]: NotImplementedError: We have not yet implemented 1D sparse slices; please index using explicit indices, e.g. x[:, [0]]", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen running the script examples/milvus_model/hello_model.py with the sparse vector model example, I encountered the following error:\nNotImplementedError: We have not yet implemented 1D sparse slices; please index using explicit indices, e.g. x[:, [0]]\nExpected Behavior\nThe script should execute successfully and return the expected results for sparse vector operations.\nSteps/Code To Reproduce behavior\nfrom pymilvus.model.sparse import BM25EmbeddingFunction, SpladeEmbeddingFunction\nfrom pymilvus.model.hybrid import BGEM3EmbeddingFunction\nfmt = \"=== {:30} ===\"\n\ndocs = [\n    \"Artificial intelligence was founded as an academic discipline in 1956.\",\n    \"Alan Turing was the first person to conduct substantial research in AI.\",\n    \"Born in Maida Vale, London, Turing was raised in southern England.\",\n]\n\n# BM25EmbeddingFunction usage\nprint(fmt.format(\"BM25EmbeddingFunction Usage\"))\nef_bm25 = BM25EmbeddingFunction()\nef_bm25.load()\nembs_bm25 = ef_bm25.encode_documents(docs)\nprint(f\"Embedding Shape: {embs_bm25[0].shape} Dimension: {ef_bm25.dim}\")\n\n# -----------------------------------------------------------------------------\n# SpladeEmbeddingFunction usage\nprint(fmt.format(\"SpladeEmbeddingFunction Usage\"))\nef_splade = SpladeEmbeddingFunction(device=\"cpu\")\nembs_splade = ef_splade([\"Hello world\", \"Hello world2\"])\nprint(f\"Embedding Shape: {embs_splade[0].shape} Dimension: {ef_splade.dim}\")\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):cpu\n- Method of installation (Docker, or from source):source\n- Milvus version (v0.3.1, or v0.4.0):2.5.0\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nno", "created_at": "2024-12-06", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "zjjzyl"}
{"issue_number": 2412, "issue_title": "[Enhancement]: Enable getCursor interface for query iterator", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nadd getCursor interface for query iterator\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-12-06", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "MrPresent-Han"}
{"issue_number": 2409, "issue_title": "[Bug]: \u5b57\u7b26\u4e32\u4e2d\u542b\u6709NBSP\u5b57\u7b26\uff0c\u67e5\u8be2\u51fa\u9519\uff0c\u663e\u793astring field contains invalid UTF-8", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nmilvus\u7248\u672c\uff1a2.4.1\n\u4ee3\u7801\u5185\u5bb9\uff1a\ndef async_hybrid_search_with_score(self,\nembedding: List[float],\nembedding_bm25: List[float],\nk: int = 4,\nweight_reranker: WeightedRanker = RRFRanker(k=60),\ndense_search_params: Optional[dict] = None,\nbm25_search_params: Optional[dict] = None,\nexpr: Optional[str] = None,\ntimeout: Optional[int] = None,\nscore_threshold: Optional[float] = None,\n**kwargs: Any,\n) -> List[Tuple[Document, float]]:\nansyc_param = {\"_async\": True}\nmerged_params = ansyc_param.copy()  # \u521b\u5efa async_param \u7684\u526f\u672c\nmerged_params.update(kwargs)\nif bm25_search_params is None:\nbm25_search_params = {\n\"metric_type\": \"IP\",\n\"params\": {\"nprobe\": 10}\n}\nrequest_bm25 = AnnSearchRequest(\ndata=embedding_bm25,\nanns_field=self._vector_field_bm25,\nparam=bm25_search_params,\nlimit=k,\nexpr=expr,\n)\nlogger.info(f\"BM25 search request created: {request_bm25}\")\n    # xiaobu\u641c\u7d22\u8bf7\u6c42\n    if dense_search_params is None:\n        dense_search_params = self.default_search_params[\"HNSW\"]\n    request_dense = AnnSearchRequest(\n        data=[embedding],\n        anns_field=self._vector_field,\n        param=dense_search_params,\n        limit=k,\n        expr=expr,\n    )\n    logger.info(f\"dense search request created: {request_dense}\")\n    output_fields = self._get_output_fields()\n    # \u6267\u884c\u6df7\u5408\u641c\u7d22\n    future = self.col.hybrid_search([request_bm25, request_dense], weight_reranker,\n                                    output_fields=output_fields, limit=k, timeout=timeout, **merged_params)\n    result = future.result()\n    logger.info(f\"result is {result}\")\n\n\u9519\u8bef\u4fe1\u606f\u4e3a\uff1a\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.10/site-packages/uvicorn/protocols/http/h11_impl.py\", line 412, in run_asgi\nresult = await app(  # type: ignore[func-returns-value]\nFile \"/usr/local/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py\", line 84, in call\nreturn await self.app(scope, receive, send)\nFile \"/usr/local/lib/python3.10/site-packages/fastapi/applications.py\", line 1054, in call\nawait super().call(scope, receive, send)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/applications.py\", line 123, in call\nawait self.middleware_stack(scope, receive, send)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/middleware/errors.py\", line 186, in call\nraise exc\nFile \"/usr/local/lib/python3.10/site-packages/starlette/middleware/errors.py\", line 164, in call\nawait self.app(scope, receive, _send)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/middleware/cors.py\", line 83, in call\nawait self.app(scope, receive, send)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/middleware/exceptions.py\", line 62, in call\nawait wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/_exception_handler.py\", line 64, in wrapped_app\nraise exc\nFile \"/usr/local/lib/python3.10/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\nawait app(scope, receive, sender)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 758, in call\nawait self.middleware_stack(scope, receive, send)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 778, in app\nawait route.handle(scope, receive, send)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 299, in handle\nawait self.app(scope, receive, send)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 79, in app\nawait wrap_app_handling_exceptions(app, request)(scope, receive, send)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/_exception_handler.py\", line 64, in wrapped_app\nraise exc\nFile \"/usr/local/lib/python3.10/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\nawait app(scope, receive, sender)\nFile \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 74, in app\nresponse = await func(request)\nFile \"/usr/local/lib/python3.10/site-packages/fastapi/routing.py\", line 278, in app\nraw_response = await run_endpoint_function(\nFile \"/usr/local/lib/python3.10/site-packages/fastapi/routing.py\", line 191, in run_endpoint_function\nreturn await dependant.call(**values)\nFile \"/srdkb-backend/knowledge_base/kb_api.py\", line 100, in search_docs\nretrieved_docs = await kb_service.async_do_search(query, user_id=user_id, req_id=req_id,\nFile \"/srdkb-backend/knowledge_base/milvus_kb_service.py\", line 194, in async_do_search\nslice_combined_docs.extend(self.query_subkb(embedding_data, 1, top_k, score_threshold, included_files,\nFile \"/srdkb-backend/knowledge_base/milvus_kb_service.py\", line 301, in query_subkb\ndocs_and_distances = search_fun(\nFile \"/srdkb-backend/knowledge_base/milvus.py\", line 465, in async_hybrid_search_with_score\nresult = future.result()\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/orm/future.py\", line 32, in result\nreturn self.on_response(self._f.result())\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/client/asynch.py\", line 117, in result\nself._results = self.on_response(self._response)\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/client/asynch.py\", line 166, in on_response\ncheck_status(response.status)\nFile \"/usr/local/lib/python3.10/site-packages/pymilvus/client/utils.py\", line 60, in check_status\nraise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=string field contains invalid UTF-8)>\nExpected Behavior\n\u5982\u4f55\u80fd\u591f\u6b63\u786e\u67e5\u8be2\u51fa\u6570\u636e\uff1f\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker):\n- Milvus version (v2.4.1):\nAnything else?\nNo response", "created_at": "2024-12-05", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "chiyingyunhua"}
{"issue_number": 2407, "issue_title": "[Bug]: create index on json field is not supported: expected=supported field, actual=create index on 104 field: invalid parameter", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI'm following this example https://github.com/milvus-io/pymilvus/blob/master/examples/sparse.py to store sparse embedding in Milvus server.\nI got this error when I created an index on collection:\nclient.create_collection('my_sparse_collection', schema=schema,\nindex_params=index_params, timeout=5, consistency_level=\"Strong\")\nerror:\nRPC error: [create_index], <MilvusException: (code=1100, message=create index on json field is not supported: expected=supported field, actual=create index on 104 field: invalid parameter)>, <Time:{'RPC start': '2024-12-04 11:47:50.713235', 'RPC error': '2024-12-04 11:47:50.793430'}>\nFailed to create an index on collection: my_sparse_collection\nExpected Behavior\nThe index can be created on sparse vector field.\nSteps/Code To Reproduce behavior\nuri = f\"http://{MILVUS_HOST}:{MILVUS_PORT}\"\n    \nclient = MilvusClient(\n    uri=uri,\n    user = MILVUS_USER,\n    password = MILVUS_PASSWORD,\n    db_name = \"default\",\n)\n\n\nfields = [\n    FieldSchema(name=\"pk\", dtype=DataType.VARCHAR,\n                is_primary=True, auto_id=True, max_length=100),\n    FieldSchema(name=\"random\", dtype=DataType.DOUBLE),\n    FieldSchema(name=\"sparse_vector\", dtype=DataType.SPARSE_FLOAT_VECTOR),\n]\nschema = CollectionSchema(\n    fields, \"demo for using sparse float vector with milvus client\")\n\nindex_params = client.prepare_index_params()\nindex_params.add_index(field_name=\"sparse_vector\", index_name=\"sparse_inverted_index\",\n                       index_type=\"SPARSE_INVERTED_INDEX\", metric_type=\"IP\", params={\"drop_ratio_build\": 0.2})\nclient.create_collection('my_sparse_collection', schema=schema,\n                                index_params=index_params, timeout=5, consistency_level=\"Strong\")\nEnvironment details\nMilvus version: 2.2.8\npymilvus version: 2.5.0\nAnything else?\nNo response", "created_at": "2024-12-04", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Joyce920hope"}
{"issue_number": 2400, "issue_title": "[Bug]: \"only IP is the supported metric type for sparse index\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I go through the example code on Full Text Search, or the example on BM25 or the example on hybrid search w/ BM25, I get this error:\nRPC error: [create_index], <MilvusException: (code=1100, message=only IP is the supported metric type for sparse index: invalid parameter[expected=valid index params][actual=invalid index params])>, <Time:{'RPC start': '2024-12-02 16:12:32.746070', 'RPC error': '2024-12-02 16:12:32.749947'}>\nTraceback (most recent call last):\n  File \"/home/lucas/Documents/StefanArbeit/RAG/docpilot/tmp/hello_hybrid_bm25.py\", line 118, in <module>\n    col.create_index(\"sparse_vector\", sparse_index)\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/orm/collection.py\", line 1373, in create_index\n    return conn.create_index(self._name, field_name, index_params, timeout=timeout, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 141, in handler\n    raise e from e\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 137, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 176, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 116, in handler\n    raise e from e\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/decorators.py\", line 86, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 991, in create_index\n    check_status(status)\n  File \"/home/lucas/.cache/pypoetry/virtualenvs/docpilot-bHe3KMyn-py3.11/lib/python3.11/site-packages/pymilvus/client/utils.py\", line 63, in check_status\n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=only IP is the supported metric type for sparse index: invalid parameter[expected=valid index params][actual=invalid index params])>\n\nSeems like the BM25 metric type is not yet implemented?\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\nNo response\nAnything else?\nNo response", "created_at": "2024-12-02", "closed_at": "2024-12-03", "labels": ["kind/bug"], "State": "closed", "Author": "luc42ei"}
{"issue_number": 2398, "issue_title": "[Bug]: Text index not found when using text match on Milvus 2.5 beta", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nTLDR: text index not found when using text match during client.search on Milvus 2.5 beta\nI followed the steps outlined here, to create a collection with a field with text matching and analyzing turned. This should trigger \"...the creation of an inverted index...\".\nHowever when I run search with a filter using TEXT_MATCH i get an error saying the text index was not found. When i list the indexes in the collection i only see the one for my vector field. I dropped and recreated the collection to no avail.\nHere is the error:\nMilvusException: <MilvusException: (code=65535, message=fail to search on QueryNode 2: worker(2) query failed: Operator::GetOutput failed for [Operator:PhyFilterBitsNode, plan node id: 32] : Assert \"iter != text_indexes_.end()\"  => failed to get text index, text index not found at /workspace/source/internal/core/src/segcore/SegmentInterface.cpp:399\n\nExpected Behavior\nWhen i create the collection and call .search() with a filter using TEXT_MATCH, it should leverage the inverted index and filter on documents that satisfy my filter.\nSteps/Code To Reproduce behavior\nIve been running the following code inside a notebook with milvus 2.5 beta running using the milvus docker compose file.\n\n\nfrom pymilvus import (\n    MilvusClient,\n    DataType\n)\n\n\ndim = 10\nhost = \"localhost\"\nport = 19530\ncollection_name = \"temporary\"\nclient = MilvusClient(uri=f\"http://{host}:{port}\")\n\n\nschema = client.create_schema(\n     auto_id=False,\n     enable_dynamic_field=True,\n)\n\nschema.add_field(\n    field_name=\"id\",\n    datatype=DataType.VARCHAR,\n    max_length=100,\n    is_primary=True,\n)\n\nschema.add_field(\n    field_name=\"vector\",\n    datatype=DataType.FLOAT_VECTOR,\n    dim=dim\n)\n\nanalyzer_params={\n    \"type\": \"english\"\n}\n\nschema.add_field(\n    field_name='document',\n    datatype=DataType.VARCHAR,\n    max_length=200,\n    enable_analyzer=True,\n    analyzer_params=analyzer_params,\n    enable_match=True,\n)\n\nindex_params = client.prepare_index_params()\nindex_params.add_index(\n    field_name=\"vector\", index_type=\"AUTOINDEX\", metric_type=\"COSINE\"\n)\n\nclient.create_collection(\n    collection_name=collection_name,\n    schema=schema,\n    index_params=index_params,\n)\n\nvector = list(range(0,10,1))\ndata = [{\n    \"id\": \"1\",\n    \"vector\": vector,\n    \"document\": \"apple\",\n}]\n\nclient.insert(collection_name, data=data)\n\nclient.search( # this is where the error happens\n    collection_name=collection_name,\n    anns_field=\"vector\",\n    data=[vector],\n    search_params={\"params\": {\"nprobe\": 10}},\n    limit=10,\n    filter = \"TEXT_MATCH(document, 'apple')\",\n    output_fields=[\"id\", \"document\"]\n)\n\nclient.list_indexes(collection_name=collection_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Ubuntu 24.04.1 LTS, Core i9-13900K, NVIDIA RTX 3060, 64 GB RAM\n- Method of installation (Docker, or from source): Docker compose (i changed the `DOCKER_VOLUME_DIRECTORY` environment variable)\n- Milvus version (v0.3.1, or v0.4.0): v2.5 beta\n- Milvus configuration (Settings you made in `server_config.yaml`): No changes, I dont even have a server_config.yaml file\nAnything else?\nNo response", "created_at": "2024-11-30", "closed_at": "2024-12-02", "labels": ["kind/bug"], "State": "closed", "Author": "AreelKhan"}
{"issue_number": 2394, "issue_title": "[Bug]: query_iterator does not work as before", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nseems something changed with the query_iterator in the new release,\nnow I don't get all the docs, it just returns me the first batch\nExpected Behavior\nexpected I should get all the docs like it was working before the new release.\nSteps/Code To Reproduce behavior\nfrom pymilvus import connections, Collection\u200b\n\u200b\nconnections.connect(\u200b\n    uri=\"http://localhost:19530\",\u200b\n    token=\"root:Milvus\"\u200b\n)\u200b\n\u200b\ncollection = Collection(\"query_collection\")\u200b\n\u200b\niterator = collection.query_iterator(\u200b\n    batch_size=10,\u200b\n    expr=\"color like \\\"red%\\\"\",\u200b\n    output_fields=[\"color\"]\u200b\n)\u200b\n\u200b\nresults = []\u200b\n\u200b\nwhile True:\u200b\n    result = iterator.next()\u200b\n    if not result:\u200b\n        iterator.close()\u200b\n        break\u200b\n\u200b\n    print(result)\u200b\n    results += result\u200b\n\nsame snippet as in the docs\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): \n- Method of installation (Docker, or from source): docker\n- Milvus version (v0.3.1, or v0.4.0): 2.5.0\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nno", "created_at": "2024-11-29", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "ravi160822"}
{"issue_number": 2375, "issue_title": "[Enhancement]: add bitmap index example", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nadd bitmap index example\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2024-11-25", "closed_at": "2024-11-26", "labels": ["kind/enhancement"], "State": "closed", "Author": "zhagnlu"}
{"issue_number": 2601, "issue_title": "[Bug]: Not providing auto ID field in upsert request raises an error \"Insert missed an field `id` to collection without set nullable==true or set default_value\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNot providing auto ID field in upsert request raises an error \"Insert missed an field id to collection without set nullable==true or set default_value\"\nExpected Behavior\nThe upsert request should not fail because the ID field is configured to be auto_id\nSteps/Code To Reproduce behavior\nfrom pymilvus import CollectionSchema, DataType, FieldSchema\nfrom pymilvus.milvus_client.index import IndexParams\n\nclient = MilvusClient(\n    uri=<SECRET>,\n    token=<SECRET>,\n)\n\ndimension = 4\ncollection_name = \"testing_collection\"\nclient.create_collection(\n    collection_name,\n    schema=CollectionSchema(\n        fields=[\n            FieldSchema(\n                name=\"id\",\n                dtype=DataType.INT64,\n                is_primary=True,\n                auto_id=True,\n                nullable=True,\n                description=\"Auto increment ID\",\n            ),\n            FieldSchema(\n                name=\"vector\",\n                dtype=DataType.FLOAT_VECTOR,\n                dim=dimension,\n                description=\"Embedding vector\",\n            ),\n        ],\n    ),\n)\n\nclient.create_index(\n    collection_name,\n    index_params=IndexParams(\n        field_name=\"vector\",\n        index_type=\"IVF_FLAT\",\n        metric_type=\"COSINE\",\n    ),\n)\n\nclient.load_collection(collection_name)\n\nclient.upsert(\n    collection_name,\n    data=[{\"vector\": [i, i, i, i]} for i in range(10)],\n)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): MacOS\n- Method of installation (Docker, or from source): pip install\n- Milvus version (v0.3.1, or v0.4.0): pymilvus==2.5.3\nAnything else?\nThe issue seems to be coming from this line\n\n\n\npymilvus/pymilvus/client/prepare.py\n\n\n         Line 562\n      in\n      c5a3c18\n\n\n\n\n\n\n if field_info.get(\"nullable\", False) or field_info.get(\"default_value\", None): \n\n\n\n\n\nHere it should be checked whether the field is auto_id and allow it not to be provided", "created_at": "2025-01-24", "closed_at": null, "labels": ["kind/bug", "wontfix"], "State": "open", "Author": "issamemari"}
{"issue_number": 2594, "issue_title": "[Bug]: [milvus_client]Unexpected error for create_database and list_databases when using an incorrect parameter format", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nUnexpected error for create_database and list_databases when using an incorrect parameter format.\n\ncreate_database with invalid properties, eg: create_database(db_name, \"hh\")\nUnexpected error, message=<unsupported operand type(s) for +: 'float' and 'str'>\nlist_databases with param, eg: list_databases(\"default)\nUnexpected error, message=<unsupported operand type(s) for +: 'float' and 'str'>\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n@pytest.mark.tags(CaseLabel.L1)\n    @pytest.mark.parametrize(\"properties\", [\"hhh\", []])\n    def test_milvus_client_create_database_with_invalid_properties(self, properties):\n        \"\"\"\n        target: test fast create db name with invalid properties\n        method: create db name with invalid properties\n        expected: raise exception\n        actual: Currently such errors are not very readable, \n                and entries of numeric types such as 1.11, 111 are not blocked\n        \"\"\"\n        client = self._client()\n        # 1. create database\n        db_name = cf.gen_unique_str(db_prefix)\n        error = {ct.err_code: 1, ct.err_msg: f\"Unexpected error, message=<unsupported operand type(s) for +: 'float' and '{type(properties).__name__}'>\"}\n        self.create_database(client, db_name, properties,\n                               check_task=CheckTasks.err_res, check_items=error)\n@pytest.mark.tags(CaseLabel.L2)\n    @pytest.mark.parametrize(\"db_name\", [\"default\"])\n    def test_milvus_client_list_databases_with_params(self, db_name):\n        \"\"\"\n        target: test list database with params\n        method: list database with params\n        expected: raise exception\n        \"\"\"\n        client = self._client()\n        error = {ct.err_code: 1, ct.err_msg: f\"Unexpected error, message=<unsupported operand type(s) for +: 'float' and 'str'>\"}\n        self.list_databases(client, db_name,\n                            check_task=CheckTasks.err_res, check_items=error)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):  all\n- Pymilvus version: 2.6.0rc60\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-23", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "laurazhao0611"}
{"issue_number": 2593, "issue_title": "[Bug]: The get_compaction_plans() and get_compaction_state() interfaces cannot be used independently", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe get_compaction_plans() and get_compaction_state() interfaces cannot be used independently\n\ntestcases/test_collection_operations.py:1614 (TestCollectionMaintenance.test_collection_compact)\nself = <test_collection_operations.TestCollectionMaintenance object at 0x1284695d0>\n\n    def test_collection_compact(self):\n        \"\"\"\n        target: test collection compact\n        method: create collection, insert data, flush multiple times, then compact\n        expected: compact successfully\n        \"\"\"\n        # Create collection\n        name = gen_collection_name()\n        client = self.collection_client\n        vector_client = self.vector_client\n        payload = {\n            \"collectionName\": name,\n            \"schema\": {\n                \"fields\": [\n                    {\"fieldName\": \"book_id\", \"dataType\": \"Int64\", \"isPrimary\": True, \"elementTypeParams\": {}},\n                    {\"fieldName\": \"my_vector\", \"dataType\": \"FloatVector\", \"elementTypeParams\": {\"dim\": 128}}\n                ]\n            }\n        }\n        client.collection_create(payload)\n    \n        # Insert and flush multiple times\n        for i in range(3):\n            # Insert data\n            vectors = [gen_vector(dim=128) for _ in range(10)]\n            insert_data = {\n                \"collectionName\": name,\n                \"data\": [\n                    {\n                        \"book_id\": i * 10 + j,\n                        \"my_vector\": vector\n                    }\n                    for i, vector in enumerate(vectors)\n                    for j in range(10)\n                ]\n            }\n            response = vector_client.vector_insert(insert_data)\n            assert response[\"code\"] == 0\n    \n            # Flush after each insert\n            c = Collection(name)\n            c.flush()\n    \n        # Compact collection\n        response = client.compact(name)\n        assert response[\"code\"] == 0\n    \n        # Get compaction state\n        response = client.get_compaction_state(name)\n        assert response[\"code\"] == 0\n        assert \"state\" in response[\"data\"]\n        assert \"compactionID\" in response[\"data\"]\n        # verify by pymilvus\n        c = Collection(name)\n>       res = c.get_compaction_plans()\n\ntest_collection_operations.py:1669: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Collection>:\n-------------\n<name>: test_collection_2025_01_23_16_38_52_591233pzxRGbBb\n<description>: \n<schema>: {'aut...or', 'description': '', 'type': <DataType.FLOAT_VECTOR: 101>, 'params': {'dim': 128}}], 'enable_dynamic_field': False}\n\ntimeout = None, kwargs = {}\nconn = <pymilvus.client.grpc_handler.GrpcHandler object at 0x12846b190>\n\n    def get_compaction_plans(self, timeout: Optional[float] = None, **kwargs) -> CompactionPlans:\n        \"\"\"Get the current compaction plans\n    \n        Args:\n            timeout (``float``, optional): An optional duration of time in seconds to allow\n                for the RPC. When timeout is set to None, client waits until server response\n                or error occur.\n        Returns:\n            CompactionPlans: All the plans' states of this compaction.\n        \"\"\"\n        conn = self._get_connection()\n>       return conn.get_compaction_plans(self.compaction_id, timeout=timeout, **kwargs)\nE       AttributeError: 'Collection' object has no attribute 'compaction_id'\n\nWhile verifying the compact restful API, I needed to use pymilvus's get_compaction_plans() and get_compaction_state() for auxiliary checks, but encountered errors. The compaction_id variable is set in the compact() method, and get_compaction_plans() and get_compaction_state() cannot be executed without first running this method.\nAlso, I think there might be a missing interface for listing compact job IDs. If you have executed multiple compactions, how can you view the information of previous compact IDs?\nExpected Behavior\nAdd an interface for listing compact jobs, and add compact ID as an input parameter for get_compaction_plans() and get_compaction_state() methods.\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-23", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "zhuwenxing"}
{"issue_number": 2592, "issue_title": "[Bug]: The type of the object returned by query_iterator is pymilvus.orm.iterator.QueryIterator object\uff0cwhich doesn't seem reasonable", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nclient = MilvusClient(\"http://10.102.6.111:19530\")\nres = client.query_iterator(\"test_collection\", limit=10)\nprint(type(res))\nresponse:\n<class 'pymilvus.orm.iterator.QueryIterator'>\nExpected Behavior\nsomething like \"pymilvus.client.search_iterator.SearchIteratorV2\", should not include 'ORM' in it.\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):pymilvus: 2.6.0rc60\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-23", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "laurazhao0611"}
{"issue_number": 2591, "issue_title": "[QUESTION]:used AsyncMilvusClient in FastAPI", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nmilvus version 2.4.12\npymilvus version 2.5.4\nWhen I used AsyncMilvusClient in FastAPI, I encountered the following error:\nERROR:    Exception in ASGI application\nTraceback (most recent call last):\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\uvicorn\\protocols\\http\\h11_impl.py\", line 406, in run_asgi\nresult = await app(  # type: ignore[func-returns-value]\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\uvicorn\\middleware\\proxy_headers.py\", line 60, in call\nreturn await self.app(scope, receive, send)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\fastapi\\applications.py\", line 1054, in call\nawait super().call(scope, receive, send)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\applications.py\", line 113, in call\nawait self.middleware_stack(scope, receive, send)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 187, in call\nraise exc\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 165, in call\nawait self.app(scope, receive, _send)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\middleware\\gzip.py\", line 20, in call\nawait responder(scope, receive, send)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\middleware\\gzip.py\", line 39, in call\nawait self.app(scope, receive, self.send_with_gzip)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 62, in call\nawait wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette_exception_handler.py\", line 62, in wrapped_app\nraise exc\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette_exception_handler.py\", line 51, in wrapped_app\nawait app(scope, receive, sender)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\routing.py\", line 715, in call\nawait self.middleware_stack(scope, receive, send)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\routing.py\", line 735, in app\nawait route.handle(scope, receive, send)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\routing.py\", line 288, in handle\nawait self.app(scope, receive, send)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\routing.py\", line 76, in app\nawait wrap_app_handling_exceptions(app, request)(scope, receive, send)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette_exception_handler.py\", line 62, in wrapped_app\nraise exc\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette_exception_handler.py\", line 51, in wrapped_app\nawait app(scope, receive, sender)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\starlette\\routing.py\", line 73, in app\nresponse = await f(request)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\fastapi\\routing.py\", line 301, in app\nraw_response = await run_endpoint_function(\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\fastapi\\routing.py\", line 212, in run_endpoint_function\nreturn await dependant.call(**values)\nFile \"D:\\projects\\test\\milvus_test\\controller\\test.py\", line 16, in search\nresult = await get_bing_web_search_cache(q=\"\")\nFile \"D:\\projects\\test\\milvus_test\\core\\milvus_test.py\", line 22, in get_bing_web_search_cache\nres = await client.search(\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\pymilvus\\milvus_client\\async_milvus_client.py\", line 394, in search\nraise ex from ex\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\pymilvus\\milvus_client\\async_milvus_client.py\", line 379, in search\nres = await conn.search(\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\pymilvus\\client\\async_grpc_handler.py\", line 600, in search\nreturn await self._execute_search(request, timeout, round_decimal=round_decimal, **kwargs)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\pymilvus\\client\\async_grpc_handler.py\", line 548, in _execute_search\nraise e from e\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\pymilvus\\client\\async_grpc_handler.py\", line 538, in _execute_search\nresponse = await self._async_stub.Search(request, timeout=timeout)\nFile \"d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\grpc\\aio_interceptor.py\", line 471, in await\ncall = yield from self._interceptors_task.await()\nRuntimeError: Task <Task pending name='Task-12' coro=<RequestResponseCycle.run_asgi() running at d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\uvicorn\\protocols\\http\\h11_impl.py:406> cb=[set.discard()]> got Future <Task pending name='Task-13' coro=<InterceptedUnaryUnaryCall._invoke() running at d:\\projects\\test\\milvus_test\\env\\lib\\site-packages\\grpc\\aio_interceptor.py:652> cb=[InterceptedCall._fire_or_add_pending_done_callbacks()]> attached to a different loop\nAnything else?\nNo response", "created_at": "2025-01-23", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "jitengfei"}
{"issue_number": 2589, "issue_title": "[Bug]: [milvus_client_p2] The parameter \"partition_names\" of \"hybrid_search\" in error message is \"partition_name_array\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe parameter \"partition_names\" of \"hybrid_search\" in error message is \"partition_name_array\"\ninput invalid value for partition_names, it reports error:\ncode=1, message=`partition_name_array` value 1 is illegal\n\nExpected Behavior\nThe parameter \"partition_names\" of \"hybrid_search\" in error message is \"partition_names\" too.\nSteps/Code To Reproduce behavior\n    @pytest.mark.tags(CaseLabel.L1)\n    @pytest.mark.parametrize(\"invalid_partition_names\", [1, \"1\"])\n    def test_milvus_client_hybrid_search_invalid_partition_names(self, invalid_partition_names):\n        \"\"\"\n        target: test hybrid search with inconsistent metric type (default is IP) with that of index\n        method: create connection, collection, insert and search with not consistent metric type\n        expected: Raise exception\n        \"\"\"\n        client = self._client()\n        collection_name = cf.gen_unique_str(prefix)\n        # 1. create collection\n        self.create_collection(client, collection_name, default_dim)\n        # 2. hybrid search\n        rng = np.random.default_rng(seed=19530)\n        vectors_to_search = rng.random((1, 8))\n        sub_search1 = AnnSearchRequest(vectors_to_search, \"embeddings\", {\"level\": 1}, 20, expr=\"id<100\")\n        ranker = WeightedRanker(0.2, 0.8)\n        error = {ct.err_code: 1,\n                 ct.err_msg: f\"`partition_name_array` value {invalid_partition_names} is illegal\"}\n        self.hybrid_search(client, collection_name, [sub_search1], ranker, limit=default_limit,\n                           partition_names=invalid_partition_names, check_task=CheckTasks.err_res, check_items=error)\n        self.drop_collection(client, collection_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):  all\n- Pymilvus version: 2.5.4rc1\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-22", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 2588, "issue_title": "[Bug]: [milvus_client_p2] Unexpected error to invalid reqs and ranker  for interface hybrid_search", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nUnexpected error to invalid reqs and ranker  for interface hybrid_search\n\nhybrid search with invalid \"reqs\" , like non-list for \"reqs\", it reports:\n\n(code=1, message=Unexpected error, message=<'int' object is not iterable>)>\n\n\nhybrid search with invalid  \"ranker\" parameter, like  \"1\" for \"ranker\", it reports:\n\ncode=1, message=Unexpected error, message=<'int' object has no attribute 'dict'>)\n\nExpected Behavior\nInvalid ...\nSteps/Code To Reproduce behavior\n    @pytest.mark.tags(CaseLabel.L1)\n    @pytest.mark.parametrize(\"reqs\", [\"12-s\", 1])\n    def test_milvus_client_hybrid_search_invalid_reqs(self, reqs):\n        \"\"\"\n        target: test hybrid search with inconsistent metric type (default is IP) with that of index\n        method: create connection, collection, insert and search with not consistent metric type\n        expected: Raise exception\n        \"\"\"\n        client = self._client()\n        collection_name = cf.gen_unique_str(prefix)\n        # 1. create collection\n        self.create_collection(client, collection_name, default_dim)\n        # 2. hybrid search\n        ranker = WeightedRanker(0.2, 0.8)\n        error = {ct.err_code: 100,\n                 ct.err_msg: f\"collection not found[database=default][collection=1]\"}\n        self.hybrid_search(client, collection_name, reqs, ranker, limit=default_limit,\n                    check_task=CheckTasks.err_res, check_items=error)\n        self.drop_collection(client, collection_name)\n\n    @pytest.mark.tags(CaseLabel.L1)\n    @pytest.mark.parametrize(\"invalid_ranker\", [1])\n    def test_milvus_client_hybrid_search_invalid_ranker(self, invalid_ranker):\n        \"\"\"\n        target: test hybrid search with inconsistent metric type (default is IP) with that of index\n        method: create connection, collection, insert and search with not consistent metric type\n        expected: Raise exception\n        \"\"\"\n        client = self._client()\n        collection_name = cf.gen_unique_str(prefix)\n        # 1. create collection\n        self.create_collection(client, collection_name, default_dim)\n        # 2. hybrid search\n        rng = np.random.default_rng(seed=19530)\n        vectors_to_search = rng.random((1, 8))\n        sub_search1 = AnnSearchRequest(vectors_to_search, \"embeddings\", {\"level\": 1}, 20, expr=\"id<100\")\n        ranker = WeightedRanker(0.2, 0.8)\n        error = {ct.err_code: 100,\n                 ct.err_msg: f\"collection not found[database=default][collection=1]\"}\n        self.hybrid_search(client, collection_name, [sub_search1], invalid_ranker, limit=default_limit,\n                    check_task=CheckTasks.err_res, check_items=error)\n        self.drop_collection(client, collection_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):  all\n- Pymilvus version: 2.5.4rc1\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-22", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 2587, "issue_title": "[Bug]: [milvus_client_p2] The error message for search /hybrid_search/flush with non-string collection name is not user friendly", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe error message for search /hybrid_search/flush with non-string collection name is not user friendly\nfor search/hybrid_search with invalid collection name 1 (not string), it reports:\n(code=1, message=Unexpected error, message=<bad argument type for built-in operation>\n\nExpected Behavior\nInvalid collection name...\nSteps/Code To Reproduce behavior\n    @pytest.mark.tags(CaseLabel.L1)\n    @pytest.mark.skip(reason=\"pymilvus issue 2587\")\n    @pytest.mark.parametrize(\"name\", [1])\n    def test_milvus_client_hybrid_search_invalid_collection_name_non_string(self, name):\n        \"\"\"\n        target: test hybrid search with inconsistent metric type (default is IP) with that of index\n        method: create connection, collection, insert and search with not consistent metric type\n        expected: Raise exception\n        \"\"\"\n        client = self._client()\n        collection_name = cf.gen_unique_str(prefix)\n        # 1. create collection\n        self.create_collection(client, collection_name, default_dim)\n        # 2. hybrid search\n        rng = np.random.default_rng(seed=19530)\n        vectors_to_search = rng.random((1, 8))\n        sub_search1 = AnnSearchRequest(vectors_to_search, \"embeddings\", {\"level\": 1}, 20, expr=\"id<100\")\n        ranker = WeightedRanker(0.2, 0.8)\n        error = {ct.err_code: 100,\n                 ct.err_msg: f\"collection not found[database=default][collection={name}]\"}\n        self.hybrid_search(client, name, [sub_search1], ranker, limit=default_limit,\n                    check_task=CheckTasks.err_res, check_items=error)\n        self.drop_collection(client, collection_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):  all\n- Pymilvus version: 2.5.4rc1\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-22", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 2586, "issue_title": "[QUESTION]: \u5982\u4f55\u5b89\u88c5pymilvus2.5.3\uff0c\u6709\u53ef\u9760\u7684\u6e90\u53ef\u4ee5\u76f4\u63a5\u62c9\u53d6\u4e48\uff1f", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\n\u5982\u4f55\u5b89\u88c5pymilvus2.5.3\uff0c\u76ee\u524d\u901a\u8fc7\u963f\u91cc\u4e91\u7684yum\u6e90\u5e76\u6ca1\u6709\u627e\u5230\u3002\nsh-4.2# pip3 install pymilvus==2.5.3\nLooking in indexes: http://mirrors.aliyun.com/pypi/simple\nERROR: Could not find a version that satisfies the requirement pymilvus==2.5.3 (from versions: 0.1.0, 0.1.1, 0.1.2, 0.1.3, 0.1.4, 0.1.5, 0.1.6, 0.1.7, 0.1.8, 0.1.9, 0.1.10, 0.1.11, 0.1.12, 0.1.13, 0.1.14, 0.1.15, 0.1.16, 0.1.17, 0.1.18, 0.1.19, 0.1.20, 0.1.21, 0.1.22, 0.1.23, 0.1.24, 0.1.25, 0.2.0, 0.2.1, 0.2.2, 0.2.3, 0.2.4, 0.2.5, 0.2.6, 0.2.7, 0.2.8, 0.2.9, 0.2.10, 0.2.11, 0.2.12, 0.2.13, 0.2.14, 0.2.15, 0.3.0, 0.4.0, 1.0.0, 1.0.1, 1.1.0, 1.1.1, 1.1.2, 2.0.0rc1, 2.0.0rc2, 2.0.0rc4, 2.0.0rc5, 2.0.0rc6, 2.0.0rc7, 2.0.0rc8, 2.0.0rc9, 2.0.0, 2.0.1, 2.0.2, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.2.0, 2.2.1, 2.2.2, 2.2.3, 2.2.4, 2.2.5, 2.2.6, 2.2.7, 2.2.8, 2.2.9, 2.2.11, 2.2.12, 2.2.13, 2.2.14, 2.2.15, 2.2.16, 2.2.17, 2.3.0b1, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.3.4)\nERROR: No matching distribution found for pymilvus==2.5.3\nAnything else?\nNo response", "created_at": "2025-01-22", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "Xinbq"}
{"issue_number": 2579, "issue_title": "[Bug]: numpy bool8 throw exceptions", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe following line of code throws an exception when using a recent version of numpy. After some research, it seems that this alias was deprecated after version 1.23.5\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Linux (WSL2)\n- Method of installation (Docker, or from source): Pip\n- Milvus version (v0.3.1, or v0.4.0): 2.5.3\n- Milvus configuration (Settings you made in `server_config.yaml`): None, using Milvus Lite\nAnything else?\nNo response", "created_at": "2025-01-16", "closed_at": "2025-04-23", "labels": ["kind/bug"], "State": "closed", "Author": "johnayoub-wtw"}
{"issue_number": 2576, "issue_title": "[Bug]: pymilvus shout not modify user's input params", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe user's input param got modified after search\nExpected Behavior\nDo not modify.\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-16", "closed_at": "2025-01-17", "labels": ["kind/bug"], "State": "closed", "Author": "PwzXxm"}
{"issue_number": 2573, "issue_title": "[Bug]: The expr condition filtering in hybrid_search is not working correctly.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen  I    use\nmilvus_records = AnnSearchRequest(data=embs, anns_field=\"embedding\",\nparam=self.search_params, limit=top_k, expr=expr)\nsparse_milvus_records = AnnSearchRequest(data=sparse, anns_field=\"sparse_vector\",\nparam=self.search_params, limit=top_k, expr=expr)\nres = self.sess.hybrid_search([milvus_records, sparse_milvus_records], partition_names=self.kb_ids,\nrerank=WeightedRanker(0.8, 0.5),\nlimit=top_k, output_fields=self.output_material_id,\ntimeout=client_timeout)\nexpr:   own_province in ['800'] and first_industry_label in ['\u6559\u80b2']\nbut  I   get  \u4f4f\u5efa:\n\nwhen I use \uff1a\nsess.search(data=embs, partition_names=self.kb_ids, anns_field=\"embedding\",\nparam=self.search_params, limit=top_k,\noutput_fields=self.output_material_id, expr=expr, timeout=client_timeout)\nresults   is    True\nExpected Behavior\n\u4f4f\u5efa   is   not in  results\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): 2.4.14\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-16", "closed_at": "2025-01-16", "labels": ["kind/bug"], "State": "closed", "Author": "lxmz"}
{"issue_number": 2572, "issue_title": "[Bug]: The expr condition filtering in hybrid_search is not working correctly.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen  I    use\nmilvus_records = AnnSearchRequest(data=embs, anns_field=\"embedding\",\nparam=self.search_params, limit=top_k, expr=expr)\nsparse_milvus_records = AnnSearchRequest(data=sparse, anns_field=\"sparse_vector\",\nparam=self.search_params, limit=top_k, expr=expr)\nres = self.sess.hybrid_search([milvus_records, sparse_milvus_records], partition_names=self.kb_ids,\nrerank=WeightedRanker(0.8, 0.5),\nlimit=top_k, output_fields=self.output_material_id,\ntimeout=client_timeout)\nexpr:   own_province in ['800'] and first_industry_label in ['\u6559\u80b2']\nbut  I   get  \u4f4f\u5efa:\n\nwhen I use \uff1a\nsess.search(data=embs, partition_names=self.kb_ids, anns_field=\"embedding\",\nparam=self.search_params, limit=top_k,\noutput_fields=self.output_material_id, expr=expr, timeout=client_timeout)\nresults   is    True\nExpected Behavior\n\u4f4f\u5efa   is   not in  results\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): 2.4.14\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-16", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "lxmz"}
{"issue_number": 2571, "issue_title": "[QUESTION]: IBM Power (ppc64le) Support for current releases", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHello!\nYou all are my go to vector store for many of my current projects.\nI use a few different architectures as development environments, including: x86, Apple Silicon, and IBM Power. For both x86 and Apple Silicon (ARM) I've had no issues with feature support and functionality at current release and love the product.\nThough, I do have some use cases that require runtime of database connection to occur on IBM Power (ppc64le Rhel 8/9) environments.\nCurrently, I am only able to run Pymilvus at version 2.3.0 for these projects, which is lacking a few features that are present in more current releases. Are there plans to build releases >2.3.* in the future that support this architecture?\nThank you for any insight!\nAnything else?\nNo response", "created_at": "2025-01-15", "closed_at": "2025-01-20", "labels": ["kind/question", "milvus-lite"], "State": "closed", "Author": "jackpots28"}
{"issue_number": 2567, "issue_title": "[Bug]: call Collection(collection_name, using=alias)  error : weakly-referenced object no longer exists", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen I call Collection(collection_name, using=alias)  \uff0c this collection contains auto bm25 function fields,\nmet the following exception :\nduring \uff1a Function.construct_from_dict(function_raw)\ninput_field_names = (\n[input_field_names] if isinstance(input_field_names, str) else input_field_names\n)\nthe input_field_names and output_field_names in function_raw is not str, the type is : <class 'google.protobuf.internal.containers.RepeatedScalarFieldContainer'>\nthis lead to the following error:   copy.deepcopy(function)\nFile \"###\\Python311\\Lib\\site-packages\\pymilvus\\orm\\collection.py\", line 127, in init\nserver_schema = CollectionSchema.construct_from_dict(resp)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"###\\Python311\\Lib\\site-packages\\pymilvus\\orm\\schema.py\", line 257, in construct_from_dict\nreturn CollectionSchema(\n^^^^^^^^^^^^^^^^^\nFile \"###\\Python311\\Lib\\site-packages\\pymilvus\\orm\\schema.py\", line 111, in init\nself._functions = [copy.deepcopy(function) for function in functions]\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"###\\Python311\\Lib\\site-packages\\pymilvus\\orm\\schema.py\", line 111, in \nself._functions = [copy.deepcopy(function) for function in functions]\n^^^^^^^^^^^^^^^^^^^^^^^\nFile \"###\\Python311\\Lib\\copy.py\", line 172, in deepcopy\ny = _reconstruct(x, memo, *rv)\n^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"###\\Python311\\Lib\\copy.py\", line 271, in _reconstruct\nstate = deepcopy(state, memo)\n^^^^^^^^^^^^^^^^^^^^^\nFile \"###\\Python311\\Lib\\copy.py\", line 146, in deepcopy\ny = copier(x, memo)\n^^^^^^^^^^^^^^^\nFile \"###\\Python311\\Lib\\copy.py\", line 231, in _deepcopy_dict\ny[deepcopy(key, memo)] = deepcopy(value, memo)\n^^^^^^^^^^^^^^^^^^^^^\nFile \"###\\Python311\\Lib\\copy.py\", line 153, in deepcopy\ny = copier(memo)\nExpected Behavior\nin Collection(collection_name, using=alias)  ,\nresp = conn.describe_collection(self._name, **kwargs)\nthe \"functions\" field in resp  seems have not convert to 'google.protobuf.internal.containers.RepeatedScalarFieldContainer' object to simple str list\nSteps/Code To Reproduce behavior\ncreate a collection which contains bm25 function field(prepare for use Full Text Search),\nthen use  Collection(collection_name, using=alias)  to get the handler of this collection\nEnvironment details\n- Method of installation (Docker):\n- Milvus version (v2.5.1):\n- pymilvus version 2.5.1\nAnything else?\nNo response", "created_at": "2025-01-15", "closed_at": "2025-04-21", "labels": ["kind/bug"], "State": "closed", "Author": "bxgong"}
{"issue_number": 2566, "issue_title": "[Bug]: \u7c7b\u578b\u6ce8\u89e3\u9519\u8bef", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\npymilvus 2.3.4\u5347\u7ea7\u52302.5.3\u7248\u672c\u53d1\u73b0\u4fee\u6539collection\u5c5e\u6027\u65b9\u6cd5\u53d8\u5316\uff0c\u800c\u8be5\u65b9\u6cd5\u7684\u53c2\u6570\u6ce8\u89e3\u5b58\u5728\u9519\u8bef\uff0c\u5bb9\u6613\u8bef\u5bfc\u5f00\u53d1\u8005\u3002\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nhttps://github.com/milvus-io/pymilvus/blob/08fe03da166e77e6529fb9d868550bbb2ac9131b/pymilvus/client/grpc_handler.py#L324\nalter_collection_properties\u4e2d\u53c2\u6570properties\u7c7b\u578b\u6ce8\u89e3\u662fList\uff0c\u800c\u6700\u7ec8\u6821\u9a8c\u7684\u65f6\u5019\u8981\u6c42\u662fdict\u7c7b\u578b\u3002\n\n[def is_legal_collection_properties(properties: Any) -> bool:](https://github.com/milvus-io/pymilvus/blob/08fe03da166e77e6529fb9d868550bbb2ac9131b/pymilvus/client/check.py#L289)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Mac Inter Chip/ 16G\n- Method of installation (source):\n- Milvus version (v2.5.3):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-15", "closed_at": "2025-02-20", "labels": ["kind/bug"], "State": "closed", "Author": "elijahxb"}
{"issue_number": 2562, "issue_title": "pymilvus import error message in PyCharm for milvus_model", "issue_body": "\nAnother question regarding https://milvus.io/docs/full_text_search_with_milvus.md\nfrom pymilvus.model.hybrid import BGEM3EmbeddingFunction\nThis code runs fine, but in my Pycharm, it always displays 'hybrid' and 'BGEM3EmbeddingFunction' unavailable. I searched the libraries, and found:\nls venv/lib/python3.10/site-packages/milvus_model/hybrid/         \n__init__.py     __pycache__     bge_m3.py       mgte.py\n\nls venv/lib/python3.10/site-packages/pymilvus/model/__init__.py \nvenv/lib/python3.10/site-packages/pymilvus/model/__init__.py\n\nSo the module is actually defined and exported under \"milvus_model/hybrid/init.py \", not \"pymilvus/model/init.py\", so I changed the import to:\nfrom milvus_model.hybrid import BGEM3EmbeddingFunction\nThe tutorial results work exactly the same as \"from pymilvus.model.hybrid import BGEM3EmbeddingFunction\". But the change gets rid of the import error message in PyCharm. Is this good?\n\n@codingjaguar can help on answering this question\nOriginally posted by @xiaofan-luan in milvus-io/milvus#36226 (reply in thread)", "created_at": "2025-01-14", "closed_at": null, "labels": [], "State": "open", "Author": "codingjaguar"}
{"issue_number": 2558, "issue_title": "[Bug]: Pymilvus erroneously presumes the primary key to be named \"id\" when deal with SearchResults", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nPymilvus erroneously presumes the primary key to be named \"id\" when deal with SearchResults\nExpected Behavior\nDetermine the name of the primary field based on the primary_field_name in the returned results.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-13", "closed_at": "2025-01-20", "labels": ["kind/bug"], "State": "closed", "Author": "czs007"}
{"issue_number": 2555, "issue_title": "[Bug]: Fix iterator context change", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nwhen milvus alias change, iterator should switch context accordingly\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-10", "closed_at": "2025-01-20", "labels": ["kind/bug"], "State": "closed", "Author": "MrPresent-Han"}
{"issue_number": 2546, "issue_title": "[QUESTION]: Does pymilvus support float16 and/or bfloat16 embeddings?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nDoes pymilvus support float16 and/or bfloat16 embeddings?  I am not referring to the \"dtype\" that an embedding model is being run with but rather the actual embeddings that are returned?  For example, I know that tiledb, which I currently use, does not:\nhttps://docs.tiledb.com/spark/supported-datatypes\nAnything else?\nNo response", "created_at": "2025-01-06", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "BBC-Esq"}
{"issue_number": 2545, "issue_title": "[QUESTION]: (code=1100, message=only BM25 Function output field support BM25 metric type: invalid parameter[expected=valid index params][actual=invalid index params])", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\n<MilvusException: (code=1100, message=only BM25 Function output field support BM25 metric type: invalid parameter[expected=valid index params][actual=invalid index params])>\nThe following is the key part of the code. Why can't I create the bm25 index?\nAnything else?\ndef create_vector_index(collection, field_name=\"embedding\", index_params=None):\n    if index_type == 'BM25':\n        index_params = {\n            \"index_type\": \"SPARSE_INVERTED_INDEX\",\n            \"metric_type\": \"BM25\",\n            \"params\": {\"bm25_k1\": 1.2, \"bm25_b\": 0.75}\n        }\n\n    collection.create_index(field_name, index_params)\n\n\ncollection_fields = [\n    FieldSchema(name=\"id\", dtype=DataType.VARCHAR, max_length=32, is_primary=True),\n    FieldSchema(name=\"title\", dtype=DataType.VARCHAR, max_length=512),\n    FieldSchema(name=\"bm25_sparse\", dtype=DataType.SPARSE_FLOAT_VECTOR)\n]\nschema = CollectionSchema(fields=collection_fields, description=desc)\n\n\nbm25_function = Function(\n    name=\"bm25_fn\",\n    input_field_names=[\"title\"],\n    output_field_names=\"bm25_sparse\",\n    function_type=FunctionType.BM25,\n)\nschema.add_function(bm25_function)\n\n\nfield_index_list = {\n    \"bm25_sparse\": \"BM25\"\n}\nfor field_name, index_type in field_index_list.items():\n    create_vector_index(collection, field_name=field_name, index_type=index_type)\n", "created_at": "2025-01-06", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "Newxinchen"}
{"issue_number": 2543, "issue_title": "[FEATURE]: Remove long deprecated `class Milvus` in stub.py", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nNo response\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2025-01-06", "closed_at": "2025-01-13", "labels": ["kind/feature"], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 2542, "issue_title": "[QUESTION]: how to set clientMaxSendSize/clientMaxRecvSize", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nHow to set one of the following parameters clientMaxRecvSize or clientMaxSendSize, while using MilvusClient (from MilvusVectorStore, the LlamaIndex integration)\nIntention is to solve the current issue:\nrun_pipeline: unexptected error occurred: err=<AioRpcError of RPC that terminated with:\n        status = StatusCode.RESOURCE_EXHAUSTED\n        details = \"Received message larger than max (335498010 vs. 268435456)\"\n        debug_error_string = \"UNKNOWN:Error received from peer unix:/var/folders/xn/4gqtx0wx3lb2yfvlkt9r8xz80000gn/T/tmp4h95t8sy_docling.db.sock {created_time:\"2025-01-05T20:16:59.296208+01:00\", grpc_status:8, grpc_message:\"Received message larger than max (335498010 vs. 268435456)\"}\"\n\nthinking to set (proxy.grpc.)clientMaxSendSize or (proxy.grpc.)clientMaxRecvSize, but not clear how and where - because the milvus.yaml configuration file is not used in such scenarios.\nthanks for any hint.\nAnything else?\nNo response", "created_at": "2025-01-05", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "haf-tech"}
{"issue_number": 2539, "issue_title": "[Bug]:  search iterator v2 fails to fallback because of ambiguous topK parameter", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nUse Milvus server version <= 2.5.1 and new pymilvus server from master/2.5.\n2025-01-02 10:57:22,838 [WARNING][search_iterator]:  The server does not support Search Iterator V2. The search_iterator (v1) is used instead. Please upgrade your Milvus server version to 2.5.2 and later, or use a pymilvus version before 2.5.3 (excluded) to avoid this issue. (milvus_client.py:603) 2025-01-02 10:57:22,881 [ERROR][handler]: RPC error: [search], <ParamError: (code=1, message=ambiguous parameter: topk, in search_param: 200, in search_param.params: 20)>, <Time:{'RPC start': '2025-01-02 10:57:22.880847', 'RPC error': '2025-01-02 10:57:22.881057'}> (decorators.py:140)\nExpected Behavior\nFallback to search iterator v1 and be able to run.\nSteps/Code To Reproduce behavior\n@pytest.mark.tags(CaseLabel.L0)\n    def test_milvus_client_search_iterator_default(self, search_params):\n        \"\"\"\n        target: test search iterator (high level api) normal case\n        method: create connection, collection, insert and search iterator\n        expected: search iterator successfully\n        \"\"\"\n        client = self._connect(enable_milvus_client_api=True)\n        collection_name = cf.gen_unique_str(prefix)\n        client_w.using_database(client, \"default\")\n        # 1. create collection\n        client_w.create_collection(client, collection_name, default_dim, consistency_level=\"Bounded\")\n        collections = client_w.list_collections(client)[0]\n        assert collection_name in collections\n        client_w.describe_collection(client, collection_name,\n                                     check_task=CheckTasks.check_describe_collection_property,\n                                     check_items={\"collection_name\": collection_name,\n                                                  \"dim\": default_dim,\n                                                  \"consistency_level\": 0})\n        # 2. insert\n        rng = np.random.default_rng(seed=19530)\n        rows = [{default_primary_key_field_name: i, default_vector_field_name: list(rng.random((1, default_dim))[0]),\n                 default_float_field_name: i * 1.0, default_string_field_name: str(i)} for i in range(default_nb)]\n        client_w.insert(client, collection_name, rows)\n        client_w.flush(client, collection_name)\n        # 3. search iterator\n        vectors_to_search = rng.random((1, default_dim))\n        insert_ids = [i for i in range(default_nb)]\n        client_w.search_interator(client, collection_name, vectors_to_search, search_params=search_params,\n                                  check_task=CheckTasks.check_search_iterator,\n                                  check_items={\"enable_milvus_client_api\": True,\n                                               \"nq\": len(vectors_to_search),\n                                               \"ids\": insert_ids,\n                                               \"limit\": default_limit})\n        client_w.release_collection(client, collection_name)\n        client_w.drop_collection(client, collection_name)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): CPU\n- Method of installation (Docker, or from source):source\n- Milvus version (v0.3.1, or v0.4.0): 2.5.1\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nN/A", "created_at": "2025-01-02", "closed_at": "2025-01-08", "labels": ["kind/bug"], "State": "closed", "Author": "qixuan0212"}
{"issue_number": 2538, "issue_title": "[Bug]: The to_dict() method in the schema does not completely convert an object to a json dict, datatype and function type are still an IntEnum class", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe to_dict() method in the schema does not completely convert an object to a json dict, datatype and function type are still an IntEnum class\nExpected Behavior\nDataType/FunctionType object can be represented as a dictionary\n    def to_dict(self) -> dict:\n        \"\"\"Convert DataType to a plain dictionary.\n        \n        Returns:\n            dict: A dictionary containing the name and value of the DataType.\n        \"\"\"\n        return {\n            \"name\": self.name,\n            \"value\": self.value\n        }\n    \n    @classmethod\n    def from_dict(cls, d: dict) -> \"DataType\":\n        \"\"\"Create DataType from a dictionary.\n        \n        Args:\n            d (dict): Dictionary containing DataType information.\n                     Must have either 'value' or 'name' key.\n        \n        Returns:\n            DataType: The corresponding DataType enum value.\n        \"\"\"\n        if \"value\" in d:\n            return cls(d[\"value\"])\n        return cls[d[\"name\"].upper()]\n\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-01-02", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "zhuwenxing"}
{"issue_number": 2530, "issue_title": "[Bug]: search iterator v2 fails to fallback because of limit argument", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nUse Milvus server version <= 2.5.1 and new pymilvus server from master/2.5.\nError(code=-1, message=pymilvus.orm.iterator.SearchIterator() got multiple values for keyword argument 'limit')\n\nExpected Behavior\nFallback to search iterator v1 and be able to run.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-12-30", "closed_at": "2024-12-31", "labels": ["kind/bug"], "State": "closed", "Author": "PwzXxm"}
{"issue_number": 2523, "issue_title": "[Bug]: [rbac] DatabaseReadWrite has privilege CreateCollection but it failed indeed", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n[rbac] DatabaseReadWrite has privilege CreateCollection but it failed indeed.\ncreate a role has privilege DatabaseReadWrite.\nand create a collection , it will fail because PrivilegeDescribeCollection permission deny\nExpected Behavior\npass\nSteps/Code To Reproduce behavior\nfrom pymilvus import MilvusClient\nclient = MilvusClient(uri=\"\",\n                      token=\"DatabaseReadWrite:Milvus123\")\n\n>>> client.create_collection('testaa', 5)\n2024-12-27 18:05:55,052 [ERROR][handler]: grpc RpcError: [describe_collection], <_MultiThreadedRendezvous: StatusCode.PERMISSION_DENIED, PrivilegeDescribeCollection: permission deny to DatabaseReadWrite in the `default` database>, <Time:{'RPC start': '2024-12-27 18:05:54.947293', 'gRPC error': '2024-12-27 18:05:55.051939'}> (decorators.py:151)\n2024-12-27 18:05:55,052 [ERROR][handler]: grpc RpcError: [create_index], <_MultiThreadedRendezvous: StatusCode.PERMISSION_DENIED, PrivilegeDescribeCollection: permission deny to DatabaseReadWrite in the `default` database>, <Time:{'RPC start': '2024-12-27 18:05:54.947227', 'gRPC error': '2024-12-27 18:05:55.052358'}> (decorators.py:151)\n2024-12-27 18:05:55,052 [ERROR][_create_index]: Failed to create an index on collection: testaa (milvus_client.py:175)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 79, in create_collection\n    return self._fast_create_collection(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 143, in _fast_create_collection\n    self.create_index(collection_name, index_params, timeout=timeout)\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 154, in create_index\n    self._create_index(collection_name, index_param, timeout=timeout, **kwargs)\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 176, in _create_index\n    raise ex from ex\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/milvus_client/milvus_client.py\", line 165, in _create_index\n    conn.create_index(\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 155, in handler\n    raise e from e\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 137, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 176, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 90, in handler\n    raise e from e\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 86, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 973, in create_index\n    collection_desc = self.describe_collection(collection_name, timeout=timeout, **copy_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 155, in handler\n    raise e from e\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 137, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 176, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 90, in handler\n    raise e from e\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/decorators.py\", line 86, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/pymilvus/client/grpc_handler.py\", line 393, in describe_collection\n    response = rf.result()\n               ^^^^^^^^^^^\n  File \"/Users/zilliz/virtual-environment/milvus/lib/python3.11/site-packages/grpc/_channel.py\", line 797, in result\n    raise self\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\n        status = StatusCode.PERMISSION_DENIED\n        details = \"PrivilegeDescribeCollection: permission deny to DatabaseReadWrite in the `default` database\"\n        debug_error_string = \"UNKNOWN:Error received from peer ipv4:52.74.223.179:19534 {created_time:\"2024-12-27T18:05:55.046898+08:00\", grpc_status:7, grpc_message:\"PrivilegeDescribeCollection: permission deny to DatabaseReadWrite in the `default` database\"}\"\n>\n>>>\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2024-12-27", "closed_at": "2025-01-21", "labels": ["kind/bug"], "State": "closed", "Author": "NicoYuan1986"}
{"issue_number": 2522, "issue_title": "[Bug]: AttributeError: module 'pkgutil' has no attribute 'ImpImporter'. Did you mean: 'zipimporter'?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I tried using 3.12.7, I got the error AttributeError: module 'pkgutil' has no attribute 'ImpImporter'. Did you mean: 'zipimporter'? also there is an issue opened 3mons back and closed, but when I see the offical doc page it's stating that this\npymilvus 2.10.4 supports >=python 3.8, I understand since it's an open source project it might take time for fixing that issue, until then can't we change it to >=3.8 and <=3.11, since we spent lot of time to find this it affected the productivity.\n\nExpected Behavior\nChanging to >=3.8 and <=3.11 instead just >=3.8 requires.\nSteps/Code To Reproduce behavior\nNo response\nEnvironment details\nI used ubuntu 22.04.\nAnything else?\nNo response", "created_at": "2024-12-27", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "VishwaS-22"}
{"issue_number": 2521, "issue_title": "[Enhancement]:  Support passing trace ctx and displaying traceID in case of request err in all the sdk interfaces level", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nSupport user defined trace id with otel specifications though all the sdk interfaces, like\nctxWithTraceInfo, span := otel.tracer(\"name\").start(ctx, spanName)\nclient.search(ctxWithTraceInfo, req)\ntraceID = span.TraceContext.traceID....\n\nWhy is this needed?\nCould construct a map between sdk interfaces with milvus internal functions, then this mapping info could be used for a lot of things, like precise testing.\nAnything else?\nNo response", "created_at": "2024-12-27", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "binbinlv"}
{"issue_number": 2671, "issue_title": "[Bug]: get_import_progress() throwing certificate error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI'm running milvus cluster in tls mode, with ssl certificate.\nNow, when using the get_import_progress function through a curl request (7071 is the http port)\ncurl --cacert ${CERTPATH} \\\n     -X POST \"https://localhost:7071/v2/vectordb/jobs/import/describe\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"jobId\": \"455462875463422512\",\n           \"clusterId\": \"\"\n         }'\n\nIt works as expected.\nHowever, I would like to implement the same via pymilvus script using the get_import_progress function with TLS.\nfrom pymilvus.bulk_writer import get_import_progress\nimport json\nuri = \"https://localhost:7071\"  # Milvus server URI\n\n# # Get bulk-insert job progress\nresp = get_import_progress(\n    url=uri,\n    job_id=\"455462875463422512\",\n)\nprint(json.dumps(resp.json(), indent=4, sort_keys=True))\n\nSince get_import_progress does not have any fields to provide SSL certificate, is there any way I use this function ?\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-02-23", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "abd-770"}
{"issue_number": 2670, "issue_title": "[Bug]: Client uri parameter ending with a slash / leads to db_name overwritten with an empty string", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nIn pymilvus 2.5.4, when the uri parameter of the MilvusClient or the AsyncMilvusClient ends with a slash and does not have a path parameter for the db_name, but db_name is passed explicitly to the client, this line overwrites the db_name with an empty string.\nI ran into this when I created a custom pydantic dsn class for Milvus to construct the uri and the AnyUrl pydantic class puts a slash in the end of the uri even when no path is specified for the db_name:\nfrom pydantic import AnyUrl\n\nclass MilvusDsn(AnyUrl):\n    \"\"\"Custom Milvus DSN.\"\"\"\n\n    _constraints = UrlConstraints(allowed_schemes=[\"http\", \"https\"], default_host=\"localhost\", host_required=True)\n\nuri = MilvusDsn.build(\n            scheme=\"http\",\n            host=\"localhost\",\n            port=19530,\n        )\n\nExpected Behavior\nWhen I pass a db_name to the client it should be used instead of overwritten with an empty string.\nSteps/Code To Reproduce behavior\n\"\"\"\nThis code will create the new_collection collection in the default database\ninstead of a test_db created beforehand.\n\"\"\"\n\nimport asyncio\n\nfrom pymilvus import AsyncMilvusClient, DataType, MilvusClient\n\n\nasync def main():\n    client = MilvusClient(uri=\"http://localhost:19530/\", db_name=\"test_db\")\n    async_client = AsyncMilvusClient(\n        uri=\"http://localhost:19530/\",\n        db_name=\"test_db\",\n    )\n    schema = async_client.create_schema(\n        auto_id=False,\n        description=\"This is a sample schema\",\n    )\n\n    schema.add_field(\"id\", DataType.INT64, is_primary=True)\n    schema.add_field(\"dense_vector\", DataType.FLOAT_VECTOR, dim=5)\n    schema.add_field(\"sparse_vector\", DataType.SPARSE_FLOAT_VECTOR)\n    schema.add_field(\"text\", DataType.VARCHAR, max_length=512)\n\n    collection_name = \"new_collection\"\n\n    if not (client.has_collection(collection_name)):\n        await async_client.create_collection(\n            collection_name=collection_name, schema=schema\n        )\n\n\nasyncio.run(main())\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): MacOS Sequoia 15.1.1\n- Method of installation (Docker, or from source): Docker container of Milvus standalone\n- Milvus version (v0.3.1, or v0.4.0): 2.5.4\n- Milvus configuration (Settings you made in `server_config.yaml`): Not-aplicable\nAnything else?\nIf this is not desired behaviour, the fix is easy. Empty strings should be filtered out from group here:\nhttps://github.com/milvus-io/pymilvus/blob/master/pymilvus/orm/connections.py#L454", "created_at": "2025-02-21", "closed_at": "2025-03-19", "labels": ["kind/bug"], "State": "closed", "Author": "mihailyanchev"}
{"issue_number": 2664, "issue_title": "[Enhancement]: HybridSearch enable to use filter instead of expr", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nUnify the expression params name\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2025-02-21", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "XuanYang-cn"}
{"issue_number": 2662, "issue_title": "[Bug]: milvus-lite crashes when trying to add index on collection named \"figure\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nfrom pymilvus import MilvusClient, DataType\n\ndef create_collection(client: MilvusClient, name: str):\n     schema = MilvusClient.create_schema(auto_id=True)\n     schema.add_field(\"id\", datatype=DataType.INT64, is_primary=True)\n     schema.add_field(\"vector\", datatype=DataType.FLOAT_VECTOR, dim=128)\n     schema.verify()\n     index_params = client.prepare_index_params()\n     index_params.add_index(\n         field_name=\"vector\",\n         index_type=\"AUTOINDEX\",\n         metric_type=\"L2\",\n     )\n     client.create_collection(\n         collection_name=name,\n         schema=schema,\n         index_params=index_params,\n     )\n\n\nclient = MilvusClient(\"./bug.db\")\ncreate_collection(client, \"figure\")\nThe above code crashes at the last line with the error:\nE20250220 14:50:13.255980 3013846 collection_meta.cpp:148] [SERVER][CreateIndex][grpcpp_sync_ser] Add index failed, err: unrecognized token: \"\u2426\"\nRPC error: [create_index], <MilvusException: (code=5, message=: internal error)>, <Time:{'RPC start': '2025-02-20 14:50:13.254026', 'RPC error': '2025-02-20 14:50:13.256741'}>\nFailed to create an index on collection: figure\n\nIt does not crash if I change \"figure\" to \"b\" or \"figur\" or \"igure\" or \"figures\"\nIt does not crash if I do not add an index.\nEnvironment details\nUsing milvus lite 2.4.14 on Ubuntu", "created_at": "2025-02-20", "closed_at": null, "labels": ["kind/bug", "milvus-lite"], "State": "open", "Author": "andreaswimmer"}
{"issue_number": 2661, "issue_title": "[Enhancement]: Support Multi-Destination Writing in RemoteBulkWriter for CDC Import Sync", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nSupport Multi-Destination Writing in RemoteBulkWriter for CDC Import Sync\nWhy is this needed?\nProblem: Currently need two steps (write + sync) to get files into both upstream and downstream storage during CDC import\nSolution: Allow RemoteBulkWriter to write to both locations at once\nImplementation: Simple change to accept multiple connect parameters and write files in parallel\nBenefits:\nNo need for separate sync step\nFiles exist in both locations immediately\nFaster overall operation\nKeeps backward compatibility\nAnything else?\nfrom pymilvus.bulk_writer import RemoteBulkWriter\n\n# Create connect params for multiple destinations\nconnect_params = [\n    RemoteBulkWriter.ConnectParam(\n        bucket_name=\"bucket1\",\n        endpoint=\"endpoint1\",\n        access_key=\"key1\",\n        secret_key=\"secret1\",\n    ),\n    RemoteBulkWriter.ConnectParam(\n        bucket_name=\"bucket2\",\n        endpoint=\"endpoint2\",\n        access_key=\"key2\",\n        secret_key=\"secret2\",\n    )\n]\n\n# Use MultiRemoteBulkWriter\nwith MultiRemoteBulkWriter(\n    schema=your_schema,\n    remote_path=\"your_path\",\n    connect_param=connect_params,  # Pass list of connect params\n    file_type=BulkFileType.JSON\n) as writer:\n    writer.append_row(your_data)\n    writer.commit()\n    files = writer.batch_files \n", "created_at": "2025-02-20", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "zhuwenxing"}
{"issue_number": 2660, "issue_title": "[Bug]: Hybrid Search implementation always throws error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI am trying to implement Hybrid search using pymilvus. I am following the guide form Milvus docs: https://milvus.io/docs/multi-vector-search.md\nSince this guide does not provide full implementation of creating collection, embeddings etc. I have created them by following the docs. In my implementation, I am using Sentence Transformers for dense vectors and SPLADE for sparse vectors.\nHere's my code:\nfrom typing import List, Dict, Any, Optional\nimport logging\nfrom datetime import datetime\nimport uuid\nimport numpy as np\nimport scipy.sparse as sp\nfrom pymilvus import (\n    MilvusClient,\n    DataType,\n    AnnSearchRequest,\n    WeightedRanker,\n    RRFRanker,\n    model,\n    utility,\n    connections\n)\nfrom contextlib import contextmanager\n\n# Set up logging\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\nclass HybridSearchManager:\n    \"\"\"\n    Optimized hybrid search manager for Milvus using built-in embedding functions.\n    \"\"\"\n    \n    def __init__(\n        self,\n        uri: str = \"http://localhost:19530\",\n        token: str = \"root:Milvus\",\n        collection_name: str = \"hybrid_search_collection\",\n        dense_model: str = \"all-MiniLM-L6-v2\",\n        sparse_model: str = \"naver/splade-cocondenser-ensembledistil\",\n        device: str = \"cpu\"\n    ):\n        \"\"\"\n        Initialize the hybrid search manager.\n        \n        Args:\n            uri: Milvus server URI.\n            token: Authentication token.\n            collection_name: Name of the collection.\n            dense_model: Model name for dense embeddings.\n            sparse_model: Model name for sparse embeddings.\n            device: Device to use for embeddings ('cpu' or 'cuda:0').\n        \"\"\"\n        self.collection_name = collection_name\n        self._initialize_client(uri, token)\n        self._initialize_embedding_functions(dense_model, sparse_model, device)\n        \n    def _initialize_client(self, uri: str, token: str) -> None:\n        \"\"\"Initialize Milvus client with error handling.\"\"\"\n        try:\n            # Parse URI for host and port\n            host = uri.split(\"://\")[1].split(\":\")[0]\n            port = int(uri.split(\":\")[-1])\n            \n            # Connect using connections API\n            connections.connect(\n                alias=\"default\",\n                host=host,\n                port=port,\n                user=\"root\",  # if authentication is enabled\n                password=token.split(\":\")[1] if \":\" in token else None\n            )\n            \n            self.client = MilvusClient(uri=uri, token=token)\n            logger.info(f\"Successfully connected to Milvus server at {uri}\")\n        except Exception as e:\n            logger.error(f\"Failed to connect to Milvus server: {e}\")\n            raise\n            \n    def _initialize_embedding_functions(\n        self,\n        dense_model: str,\n        sparse_model: str,\n        device: str\n    ) -> None:\n        \"\"\"Initialize embedding functions using Milvus model APIs.\"\"\"\n        try:\n            # Initialize dense embedding function\n            self.dense_ef = model.dense.SentenceTransformerEmbeddingFunction(\n                model_name=dense_model,\n                device=device\n            )\n            \n            # Initialize sparse embedding function\n            self.sparse_ef = model.sparse.SpladeEmbeddingFunction(\n                model_name=sparse_model,\n                device=device\n            )\n            \n            # Get dimensions\n            self.dense_dim = self.dense_ef.dim\n            self.sparse_dim = self.sparse_ef.dim\n            \n            logger.info(\"Successfully initialized embedding functions\")\n        except Exception as e:\n            logger.error(f\"Failed to initialize embedding functions: {e}\")\n            raise\n\n    @staticmethod\n    def _convert_sparse_vector(sparse_vector: Any) -> Dict[int, float]:\n        \"\"\"\n        Convert a sparse vector (CSR matrix or NumPy array) to a dictionary format required by Milvus.\n        \n        Args:\n            sparse_vector: Either a CSR matrix with shape (1, sparse_dim) or a NumPy array.\n        \n        Returns:\n            A dictionary where keys are column indices and values are the corresponding nonzero values.\n        \"\"\"\n        # Case 1: CSR matrix (has tocoo method)\n        if hasattr(sparse_vector, \"tocoo\"):\n            coo = sparse_vector.tocoo()\n            # If the CSR matrix is not 2D (e.g., a 1D array), reshape it\n            if len(coo.shape) == 1 or coo.shape[0] != 1:\n                raise ValueError(f\"Expected sparse vector to have 1 row, got shape: {coo.shape}\")\n            return {int(col): float(val) for col, val in zip(coo.col, coo.data)}\n        \n        # Case 2: NumPy array\n        elif isinstance(sparse_vector, np.ndarray):\n            if sparse_vector.ndim == 1:\n                # Treat the 1D array as a single row vector.\n                nonzero_indices = np.nonzero(sparse_vector)[0]\n                values = sparse_vector[nonzero_indices]\n                return {int(idx): float(val) for idx, val in zip(nonzero_indices, values)}\n            elif sparse_vector.ndim == 2:\n                if sparse_vector.shape[0] != 1:\n                    raise ValueError(f\"Expected sparse vector to have 1 row, got shape: {sparse_vector.shape}\")\n                nonzero_indices = np.nonzero(sparse_vector[0])[0]\n                values = sparse_vector[0, nonzero_indices]\n                return {int(idx): float(val) for idx, val in zip(nonzero_indices, values)}\n            else:\n                raise ValueError(f\"Unsupported array dimensions: {sparse_vector.ndim}\")\n        \n        # Case 3: Already a dictionary\n        elif isinstance(sparse_vector, dict):\n            return sparse_vector\n        \n        else:\n            raise TypeError(\"Unsupported type for sparse vector conversion.\")\n\n    def setup_collection(self) -> None:\n        \"\"\"Set up collection with schema and indexes.\"\"\"\n        try:\n            if utility.has_collection(self.collection_name):\n                logger.info(f\"Collection {self.collection_name} already exists\")\n                return\n                \n            # Create schema\n            schema = MilvusClient.create_schema(\n                auto_id=False,\n                enable_dynamic_field=True\n            )\n            \n            # Add fields to schema\n            # Note: 'id' is defined as VARCHAR since we are using UUID strings.\n            schema.add_field(field_name=\"id\", datatype=DataType.VARCHAR, is_primary=True)\n            schema.add_field(field_name=\"text\", datatype=DataType.VARCHAR)\n            schema.add_field(field_name=\"metadata\", datatype=DataType.JSON)\n            schema.add_field(field_name=\"sparse\", datatype=DataType.SPARSE_FLOAT_VECTOR)\n            schema.add_field(\n                field_name=\"dense\",\n                datatype=DataType.FLOAT_VECTOR,\n                dim=self.dense_dim\n            )\n            schema.add_field(\n                field_name=\"timestamp\",\n                datatype=DataType.INT64,\n                description=\"Insertion timestamp\"\n            )\n            \n            # Prepare index parameters\n            index_params = self.client.prepare_index_params()\n            \n            # Add indexes for both dense and sparse fields\n            index_params.add_index(\n                field_name=\"dense\",\n                index_name=\"dense_index\",\n                index_type=\"IVF_FLAT\",\n                metric_type=\"IP\",\n                params={\"nlist\": 128},\n            )\n            \n            index_params.add_index(\n                field_name=\"sparse\",\n                index_name=\"sparse_index\",\n                index_type=\"SPARSE_INVERTED_INDEX\",\n                metric_type=\"IP\",\n                params={\"inverted_index_algo\": \"DAAT_MAXSCORE\"},\n            )\n            \n            # Create collection\n            self.client.create_collection(\n                collection_name=self.collection_name,\n                schema=schema,\n                index_params=index_params\n            )\n            \n            logger.info(f\"Successfully created collection: {self.collection_name}\")\n        except Exception as e:\n            logger.error(f\"Failed to set up collection: {e}\")\n            raise\n            \n    @contextmanager\n    def collection_loader(self):\n        \"\"\"Context manager for loading/releasing collection.\"\"\"\n        try:\n            self.client.load_collection(self.collection_name)\n            logger.info(f\"Collection {self.collection_name} loaded\")\n            yield\n        finally:\n            self.client.release_collection(self.collection_name)\n            logger.info(f\"Collection {self.collection_name} released\")\n\n    def insert_documents(\n        self,\n        texts: List[str],\n        metadata: List[Dict[str, Any]],\n        batch_size: int = 100\n    ) -> List[str]:\n        \"\"\"\n        Insert documents with metadata in batches.\n        \n        Args:\n            texts: List of text documents.\n            metadata: List of metadata dictionaries.\n            batch_size: Size of batches for processing.\n            \n        Returns:\n            List of inserted document UUIDs.\n        \"\"\"\n        if len(texts) != len(metadata):\n            raise ValueError(\"Length of texts and metadata must match.\")\n        \n        try:\n            all_ids = []\n            for i in range(0, len(texts), batch_size):\n                batch_texts = texts[i:i + batch_size]\n                batch_metadata = metadata[i:i + batch_size]\n                \n                # Generate embeddings using Milvus embedding functions\n                dense_vectors = self.dense_ef.encode_documents(batch_texts)\n                sparse_vectors = self.sparse_ef.encode_documents(batch_texts)\n                \n                # Prepare batch data\n                timestamp = int(datetime.now().timestamp())\n                batch_data = []\n                batch_ids = []\n                \n                for j in range(len(batch_texts)):\n                    doc_id = str(uuid.uuid4())\n                    batch_ids.append(doc_id)\n                    \n                    # Convert the sparse vector to a dictionary format\n                    sparse_vector = sparse_vectors[j]\n                    sparse_dict = self._convert_sparse_vector(sparse_vector)\n                    \n                    doc_dict = {\n                        \"id\": doc_id,\n                        \"text\": batch_texts[j],\n                        \"metadata\": batch_metadata[j],\n                        \"dense\": dense_vectors[j],  # assumed to be a list of floats\n                        \"sparse\": sparse_dict,\n                        \"timestamp\": timestamp\n                    }\n                    batch_data.append(doc_dict)\n                \n                # Insert batch into Milvus\n                self.client.insert(\n                    collection_name=self.collection_name,\n                    data=batch_data\n                )\n                \n                all_ids.extend(batch_ids)\n                logger.info(f\"Inserted batch of {len(batch_texts)} documents\")\n                \n            return all_ids\n        except Exception as e:\n            logger.error(f\"Failed to insert documents: {e}\")\n            raise\n            \n    def hybrid_search(\n        self,\n        query_text: str,\n        limit: int = 10,\n        dense_weight: float = 0.7,\n        sparse_weight: float = 0.3,\n        use_rrf: bool = False,\n        rrf_k: int = 60,\n        metadata_filter: Optional[Dict[str, Any]] = None\n    ) -> List[Dict[str, Any]]:\n        \"\"\"\n        Perform hybrid search with configurable weights and filtering.\n        \n        Args:\n            query_text: Query text.\n            limit: Number of results to return.\n            dense_weight: Weight for dense vector search.\n            sparse_weight: Weight for sparse vector search.\n            use_rrf: Whether to use RRF instead of weighted ranking.\n            rrf_k: RRF parameter (only used if use_rrf is True).\n            metadata_filter: Optional filter for metadata fields.\n            \n        Returns:\n            List of search results with scores and metadata.\n        \"\"\"\n        try:\n            # Generate query embeddings\n            query_dense = self.dense_ef.encode_documents([query_text])[0]\n            # For sparse queries, you might prefer using encode_queries() if available.\n            query_sparse = self.sparse_ef.encode_documents([query_text])[0]\n            \n            # Create AnnSearchRequests for each vector field\n            dense_request = AnnSearchRequest(\n                data=[query_dense],\n                anns_field=\"dense\",\n                param={\"metric_type\": \"IP\", \"params\": {\"nprobe\": 10}},\n                limit=limit\n            )\n            \n            # Convert sparse query vector to dictionary format\n            sparse_dict = self._convert_sparse_vector(query_sparse)\n            sparse_request = AnnSearchRequest(\n                data=[sparse_dict],\n                anns_field=\"sparse\",\n                param={\"metric_type\": \"IP\", \"params\": {}},\n                limit=limit\n            )\n            \n            # Configure the ranker\n            if use_rrf:\n                ranker = RRFRanker(rrf_k)\n            else:\n                ranker = WeightedRanker(dense_weight, sparse_weight)\n            \n            # Execute hybrid search\n            with self.collection_loader():\n                results = self.client.hybrid_search(\n                    collection_name=self.collection_name,\n                    reqs=[dense_request, sparse_request],\n                    ranker=ranker,\n                    limit=limit,\n                    output_fields=[\"text\", \"metadata\", \"timestamp\"],\n                    filter=metadata_filter\n                )\n                \n            # Process and format the results\n            processed_results = []\n            for hits in results:\n                for hit in hits:\n                    processed_results.append({\n                        \"id\": hit.id,\n                        \"score\": hit.distance,\n                        \"text\": hit.entity.get(\"text\"),\n                        \"metadata\": hit.entity.get(\"metadata\"),\n                        \"timestamp\": hit.entity.get(\"timestamp\")\n                    })\n                    \n            return processed_results\n            \n        except Exception as e:\n            logger.error(f\"Failed to perform hybrid search: {e}\")\n            raise\n            \n    def delete_documents(self, doc_ids: List[str]) -> None:\n        \"\"\"Delete documents by their IDs.\"\"\"\n        try:\n            self.client.delete(\n                collection_name=self.collection_name,\n                pks=doc_ids\n            )\n            logger.info(f\"Deleted {len(doc_ids)} documents\")\n        except Exception as e:\n            logger.error(f\"Failed to delete documents: {e}\")\n            raise\n            \n    def update_metadata(self, doc_id: str, metadata: Dict[str, Any]) -> None:\n        \"\"\"Update metadata for a specific document.\"\"\"\n        try:\n            self.client.update(\n                collection_name=self.collection_name,\n                pks=[doc_id],\n                data={\"metadata\": metadata}\n            )\n            logger.info(f\"Updated metadata for document {doc_id}\")\n        except Exception as e:\n            logger.error(f\"Failed to update metadata: {e}\")\n            raise\n\n# Example usage\nif __name__ == \"__main__\":\n    manager = HybridSearchManager(\n        uri=\"http://localhost:19530\",\n        token=\"root:Milvus\",\n        dense_model=\"all-MiniLM-L6-v2\",\n        sparse_model=\"naver/splade-cocondenser-ensembledistil\",\n        device=\"cpu\"\n    )\n    \n    try:\n        # Set up the collection (skip if it already exists)\n        manager.setup_collection()\n        \n        # Example documents and metadata\n        documents = [\n            \"Artificial intelligence was founded as an academic discipline in 1956.\",\n            \"Alan Turing was the first person to conduct substantial research in AI.\",\n            \"Deep learning is revolutionizing the field of artificial intelligence.\"\n        ]\n        \n        metadata = [\n            {\"source\": \"textbook\", \"year\": 2020, \"author\": \"Smith\"},\n            {\"source\": \"research_paper\", \"year\": 2018, \"author\": \"Johnson\"},\n            {\"source\": \"article\", \"year\": 2023, \"author\": \"Brown\"}\n        ]\n        \n        # Insert documents\n        doc_ids = manager.insert_documents(documents, metadata)\n        print(f\"Inserted documents with IDs: {doc_ids}\")\n        \n        # Perform hybrid search with a metadata filter\n        metadata_filter = {\"source\": \"research_paper\"}\n        results = manager.hybrid_search(\n            query_text=\"Who started artificial intelligence research?\",\n            limit=5,\n            metadata_filter=metadata_filter\n        )\n        \n        # Print search results\n        for result in results:\n            print(f\"ID: {result['id']}\")\n            print(f\"Score: {result['score']:.4f}\")\n            print(f\"Text: {result['text']}\")\n            print(f\"Metadata: {result['metadata']}\")\n            print(\"---\")\n            \n    except Exception as e:\n        logger.error(f\"An error occurred during execution: {e}\")\n        raise\n\n\nI am running into this error:\nINFO:__main__:Successfully connected to Milvus server at http://localhost:19530/\nINFO:sentence_transformers.SentenceTransformer:Load pretrained SentenceTransformer: all-MiniLM-L6-v2\nINFO:__main__:Successfully initialized embedding functions\nINFO:__main__:Collection hybrid_search_collection already exists\nERROR:__main__:Failed to insert documents: Expected sparse vector to have 1 row, got shape: (30522,)\nERROR:__main__:An error occurred during execution: Expected sparse vector to have 1 row, got shape: (30522,)\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[16], [line 421](vscode-notebook-cell:?execution_count=16&line=421)\n    [414](vscode-notebook-cell:?execution_count=16&line=414) metadata = [\n    [415](vscode-notebook-cell:?execution_count=16&line=415)     {\"source\": \"textbook\", \"year\": 2020, \"author\": \"Smith\"},\n    [416](vscode-notebook-cell:?execution_count=16&line=416)     {\"source\": \"research_paper\", \"year\": 2018, \"author\": \"Johnson\"},\n    [417](vscode-notebook-cell:?execution_count=16&line=417)     {\"source\": \"article\", \"year\": 2023, \"author\": \"Brown\"}\n    [418](vscode-notebook-cell:?execution_count=16&line=418) ]\n    [420](vscode-notebook-cell:?execution_count=16&line=420) # Insert documents\n--> [421](vscode-notebook-cell:?execution_count=16&line=421) doc_ids = manager.insert_documents(documents, metadata)\n    [422](vscode-notebook-cell:?execution_count=16&line=422) print(f\"Inserted documents with IDs: {doc_ids}\")\n    [424](vscode-notebook-cell:?execution_count=16&line=424) # Perform hybrid search with a metadata filter\n\nCell In[16], [line 259](vscode-notebook-cell:?execution_count=16&line=259)\n    [257](vscode-notebook-cell:?execution_count=16&line=257) # Convert the sparse vector to a dictionary format\n    [258](vscode-notebook-cell:?execution_count=16&line=258) sparse_vector = sparse_vectors[j]\n--> [259](vscode-notebook-cell:?execution_count=16&line=259) sparse_dict = self._convert_sparse_vector(sparse_vector)\n    [261](vscode-notebook-cell:?execution_count=16&line=261) doc_dict = {\n    [262](vscode-notebook-cell:?execution_count=16&line=262)     \"id\": doc_id,\n    [263](vscode-notebook-cell:?execution_count=16&line=263)     \"text\": batch_texts[j],\n   (...)\n    [267](vscode-notebook-cell:?execution_count=16&line=267)     \"timestamp\": timestamp\n    [268](vscode-notebook-cell:?execution_count=16&line=268) }\n    [269](vscode-notebook-cell:?execution_count=16&line=269) batch_data.append(doc_dict)\n...\n--> [119](vscode-notebook-cell:?execution_count=16&line=119)         raise ValueError(f\"Expected sparse vector to have 1 row, got shape: {coo.shape}\")\n    [120](vscode-notebook-cell:?execution_count=16&line=120)     return {int(col): float(val) for col, val in zip(coo.col, coo.data)}\n    [122](vscode-notebook-cell:?execution_count=16&line=122) # Case 2: NumPy array\n\nValueError: Expected sparse vector to have 1 row, got shape: (30522,)\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): Mac M3 Pro\n- Method of installation (Docker, or from source): Docker\n- Milvus version (v0.3.1, or v0.4.0): v2.5.4\nAnything else?\nNo response", "created_at": "2025-02-20", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "vikasr111"}
{"issue_number": 2659, "issue_title": "[Bug]: milvus-lite got error metric type BM25 not found or not supported", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ndbClient = MilvusClient(\"milvus_solax.db\")\nschema = MilvusClient.create_schema(  \n    auto_id=True,  \n    enable_dynamic_field=True,  \n)  \n# Add fields to schema  \nschema.add_field(field_name=\"id\", datatype=DataType.INT64, is_primary=True)  \nschema.add_field(field_name=\"text\", datatype=DataType.VARCHAR, max_length=512, enable_analyzer=True)  \nschema.add_field(field_name=\"sparse_bm25\", datatype=DataType.SPARSE_FLOAT_VECTOR)  \nschema.add_field(field_name=\"dense\", datatype=DataType.FLOAT_VECTOR, dim=768)  \n\nbm25_function = Function(  \n        name=\"bm25\",  \n        function_type=FunctionType.BM25,  \n        input_field_names=[\"text\"],  \n        output_field_names=\"sparse_bm25\",  \n    )  \nschema.add_function(bm25_function)  \n\nindex_params = dbClient.prepare_index_params()  \n\n# Add indexes  \nindex_params.add_index(  \n    field_name=\"dense\",  \n    index_name=\"dense_index\",  \n    index_type=\"IVF_FLAT\",  \n    metric_type=\"IP\",  \n    params={\"nlist\": 128},  \n)  \n\nindex_params.add_index(  \n    field_name=\"sparse_bm25\",  \n    index_name=\"sparse_bm25_index\",  \n    index_type=\"AUTOINDEX\",   \n    metric_type=\"BM25\"  \n)  \n\n# \u521b\u5efacollection\nif dbClient.has_collection(collection_name=\"Copilot\"):\n    dbClient.drop_collection(collection_name=\"Copilot\")\ndbClient.create_collection(\n    collection_name=\"Copilot\",\n    schema=schema,\n    index_params=index_params\n)\nI got error below:\n2025-02-19 15:10:59,854 [ERROR][handler]: RPC error: [create_index], <MilvusException: (code=65535, message=metric type BM25 not found or not supported, supported: IP: )>, <Time:{'RPC start': '2025-02-19 15:10:59.851678', 'RPC error': '2025-02-19 15:10:59.854256'}> (decorators.py:140) 2025-02-19 15:10:59,854 [ERROR][_create_index]: Failed to create an index on collection: Copilot (milvus_client.py:182) Traceback (most recent call last): File \"/mnt/data_dell4090/zhaoxiangting/test_bm25.py\", line 56, in <module> dbClient.create_collection( File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 98, in create_collection return self._create_collection_with_schema( File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 896, in _create_collection_with_schema self.create_index(collection_name, index_params, timeout=timeout) File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 161, in create_index self._create_index(collection_name, index_param, timeout=timeout, **kwargs) File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 183, in _create_index raise ex from ex File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 172, in _create_index conn.create_index( File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 141, in handler raise e from e File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 137, in handler return func(*args, **kwargs) File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 176, in handler return func(self, *args, **kwargs) File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 116, in handler raise e from e File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/decorators.py\", line 86, in handler return func(*args, **kwargs) File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/client/grpc_handler.py\", line 1023, in create_index check_status(status) File \"/home/lenovo/.local/lib/python3.10/site-packages/pymilvus/client/utils.py\", line 64, in check_status raise MilvusException(status.code, status.reason, status.error_code) pymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=metric type BM25 not found or not supported, supported: IP: )>\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-02-19", "closed_at": null, "labels": ["kind/bug", "milvus-lite"], "State": "open", "Author": "ZXTFINAL"}
{"issue_number": 2654, "issue_title": "[Bug]: BulkWriter fails to append row if a field has default_value", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nDefine a field with default_value:\nfields = [\n  FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=False),\n  FieldSchema(name=\"bool\", dtype=DataType.BOOL, nullable=True, default_value=False),\n  FieldSchema(name=\"float_vector\", dtype=DataType.FLOAT_VECTOR, dim=DIM),\n]\nschema = CollectionSchema(fields=fields, enable_dynamic_field=False)\n\nAppend a row to BulkWriter, it failes.\nbulk_writer.append_row({\"id\": 1, \"float_vector\": gen_float_vector(True)})\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-02-18", "closed_at": "2025-03-06", "labels": ["kind/bug"], "State": "closed", "Author": "yhmo"}
{"issue_number": 2651, "issue_title": "[Bug]: MilvusClient defaults to using localhost instead of a given ip address", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\ni got the error :\nFailed to create new connection using: 7014fa2fdfed4493bfc35a38dcf24b29 (milvus_client.py:920)\n<MilvusException: (code=2, message=Fail connecting to server on localhost:19530, illegal connection params or server unavailable)>\nwhen using the code :\nself.uri = f\"http://{self.host}:{self.port}\"\nself.sync_client = MilvusClient(uri=self.uri)\nself.async_client = AsyncMilvusClient(uri = self.uri)\nthe async client works perfectly without any errors on a given IP address .\nExpected Behavior\nMilvusClient should be able to connect to a milvus server running on another machine .\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): ubuntu\n- Method of installation (Docker, or from source): Docker\n- Milvus version (v0.3.1, or v0.4.0): v2.5.4\nAnything else?\nNo response", "created_at": "2025-02-17", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "ilyasch199"}
{"issue_number": 2650, "issue_title": "[Bug]: error closing milvus", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen Milvus is shut down, the ImportError error pops up: sys.meta_path is None, Python is likely shutting down. The error occurs because the del method is being called when the Python interpreter shuts down, but at this point some modules, including pathlib, may already have been unloaded, causing the error.\nExpected Behavior\nException ignored in: <function ServerManager.del at 0x701a5735d260>\nTraceback (most recent call last):\nFile \"/home/brain/projects/clarios-document-comparison/venv/lib/python3.12/site-packages/milvus_lite/server_manager.py\", line 58, in del\nFile \"/home/brain/projects/clarios-document-comparison/venv/lib/python3.12/site-packages/milvus_lite/server_manager.py\", line 53, in release_all\nFile \"/home/brain/projects/clarios-document-comparison/venv/lib/python3.12/site-packages/milvus_lite/server.py\", line 120, in stop\nFile \"/usr/lib/python3.12/pathlib.py\", line 1164, in init\nFile \"/usr/lib/python3.12/pathlib.py\", line 358, in init\nImportError: sys.meta_path is None, Python is likely shutting down\nSteps/Code To Reproduce behavior\nJust run the code and wait for it to finish\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\nLinux Ubuntu 24.04, Intel Core i9-10900F, NVIDIA GeForce RTX 3060, 32GB RAM, python 3.12.3\n- Method of installation (Docker, or from source):\nPyPi\n- Milvus version (v0.3.1, or v0.4.0):\nv2.5.4\n- Milvus configuration (Settings you made in `server_config.yaml`):\nNone\nAnything else?\nNo response", "created_at": "2025-02-17", "closed_at": "2025-02-17", "labels": ["kind/bug"], "State": "closed", "Author": "L0G1C06"}
{"issue_number": 2646, "issue_title": "[Bug]: A new thread is created but not released each time the connections.connect() is failed", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nStop milvus server, and use this snippet to reproduce:\nwhile True:\n    try:\n        print(\"thread count:\", threading.active_count())\n\n        connections.connect(host='127.0.0.1', port='19530')\n        break\n    except MilvusException as ex:\n        print(ex)\n\nThe thread count will continue to increase. Reproducible on all versions of pymilvus.\nmilvus-io/milvus#39913\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-02-17", "closed_at": "2025-02-21", "labels": ["kind/bug"], "State": "closed", "Author": "yhmo"}
{"issue_number": 2640, "issue_title": "[FEATURE]: Support ExternalFilterFunction at PyMilvus SearchIterator", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nRelated to milvus-io/milvus#39914\n/assign @PwzXxm\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2025-02-17", "closed_at": "2025-02-24", "labels": ["kind/feature"], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 2633, "issue_title": "[Bug]: str of Enum is changed in python3.11", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nfrom pymilvus import DataType\n\nvarchar = DataType.VARCHAR\nprint(f\"varchar: {varchar}, varchar in str  {str(varchar)}\")\n\nExpected Behavior\nUnify str behaviour of DataType\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-02-14", "closed_at": "2025-02-17", "labels": ["kind/bug"], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 2630, "issue_title": "[QUESTION]: Slow Vector Search Performance in PyMilvus with 15M Image Dataset", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nProblem Description\nI have built a database containing 15 million images using PyMilvus, and I am performing vector similarity searches to find similar images. However, the search performance is extremely slow, taking approximately 10 minutes to retrieve results for each query. This delay is unacceptable for my use case and significantly impacts the usability of the system.\nRequest for Assistance\nI would like help in identifying potential causes for this slow performance and suggestions for improving the search speed. Specifically:\n\nAre there recommended index configurations for large datasets like mine?\nAre there hardware or software optimizations I can apply to reduce query latency?\nAny other best practices for handling large-scale vector searches in PyMilvus?\n\nThank you for your support!\nAnything else?\nNo response", "created_at": "2025-02-13", "closed_at": "2025-03-06", "labels": ["kind/question"], "State": "closed", "Author": "lavinal712"}
{"issue_number": 2628, "issue_title": "[Bug]: Handling Errors in RemoteBulkWriter.commit() \u2013 Try-Except Not Catching Errors", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI am using RemoteBulkWriter.commit() in Milvus, but when an error occurs, it is not getting caught in the try-except block. However, the internal bulk_writer._throw() method logs the error.\nHow can I catch this error inside my own code? Is there a callback method available to handle errors from writer.commit()?\nwriter = RemoteBulkWriter(\n    schema=schema, \n    remote_path=bulk_writer_pth,\n    connect_param=conn, \n    chunk_size=2*1024*1024*1024,\n    file_type=BulkFileType.PARQUET\n)\n\ntry:\n    for df_record in df_records: \n        writer.append_row(df_record) \n    writer.commit()\nexcept Exception as e:\n    logger.error(f\"Some error occurred. Error: {e}\")\n\nThe code executes successfully, but when an error occurs inside writer.commit(), it does not get caught in the try-except block.\nThe error is instead logged by Milvus via bulk_writer._throw().\nI want to ask that How can I catch error in my routine with writer.commit() within my try-except block? Is there a callback method available for handling errors during commit()?\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n\nAnything else?\nNo response", "created_at": "2025-02-10", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Basir-mahmood"}
{"issue_number": 2626, "issue_title": "[Bug]: EF inconsistency after enabling search params flatten", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNo response\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-02-10", "closed_at": "2025-03-06", "labels": ["kind/bug"], "State": "closed", "Author": "MrPresent-Han"}
{"issue_number": 2621, "issue_title": "[Bug]: search param is dirtied if using ORM style search iterator", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\npymilvus 2.6.0rc67, when trying to search iterator with search param\nOne more thing is that I did not set search_param.prams=10 anywhere.\n\nExpected Behavior\nsearch successfully.\nnot reproduced if using MilvusClient style\n\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-02-08", "closed_at": "2025-02-17", "labels": ["kind/bug"], "State": "closed", "Author": "yanliang567"}
{"issue_number": 2617, "issue_title": "[Enhancement]: describecollection output add created_timestamp", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nDiscord \u6709\u7528 python sdk \u7684\u7528\u6237\u95ee \u201cIn milvus, how can I get collection \u201d\uff08https://discord.com/channels/1160323594396635310/1334966939922993258\uff09\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2025-02-07", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "JsDove"}
{"issue_number": 2613, "issue_title": "[Bug]: Not able to create the pymilvus client", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNot able to create the pymilvus client instance\n>>> from pymilvus import MilvusClient\n>>> client = MilvusClient('/mnt/data/milvus_production_2.db')\n\nError:\n2025-02-06 09:33:01,663 [ERROR][_create_connection]: Failed to create new connection using: e28873b89c65473581512fba94fbe286 (milvus_client.py:920)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.9/site-packages/pymilvus/milvus_client/milvus_client.py\", line 66, in __init__\n    self._using = self._create_connection(\n  File \"/usr/local/lib/python3.9/site-packages/pymilvus/milvus_client/milvus_client.py\", line 921, in _create_connection\n    raise ex from ex\n  File \"/usr/local/lib/python3.9/site-packages/pymilvus/milvus_client/milvus_client.py\", line 918, in _create_connection\n    connections.connect(using, user, password, db_name, token, uri=uri, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/pymilvus/orm/connections.py\", line 461, in connect\n    connect_milvus(**kwargs, user=user, password=password, token=token, db_name=db_name)\n  File \"/usr/local/lib/python3.9/site-packages/pymilvus/orm/connections.py\", line 411, in connect_milvus\n    gh._wait_for_channel_ready(timeout=timeout)\n  File \"/usr/local/lib/python3.9/site-packages/pymilvus/client/grpc_handler.py\", line 152, in _wait_for_channel_ready\n    raise MilvusException(\npymilvus.exceptions.MilvusException: <MilvusException: (code=2, message=Fail connecting to server on unix:/tmp/tmpe2y_kvf0_milvus_production_2.db.sock, illegal connection params or server unavailable)>\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-02-06", "closed_at": null, "labels": ["kind/bug", "milvus-lite"], "State": "open", "Author": "vimalKeshu"}
{"issue_number": 2612, "issue_title": "[Bug]: Python3.8 has reached end-of-life and Python3.13 is stable", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nhttps://devguide.python.org/versions/#python-release-cycle\n\n\nExpected Behavior\nI'd like to remove support for python3.8 and add support for python3.13 of PyMilvus\n\n Fix actions #2615\n Remove the support for Python3.8\n Add Support for python3.13\n\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-02-06", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "XuanYang-cn"}
{"issue_number": 2610, "issue_title": "[Enhancement]: Rename FLOAT16_VECTOR and BFLOAT16_VECTOR", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nRename FLOAT16_VECTOR to Float16Vector, and BFLOAT16_VECTOR to Bfloat16Vector to sync naming style with others\n\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2025-02-06", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "cydrain"}
{"issue_number": 2609, "issue_title": "[Enhancement]: optimize iterator handle in search request", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nIn prepare.py::search_requests_with_expr()\n\nall above params checking and setting can be skipped when \"is_iterator\" is None\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2025-02-06", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "cydrain"}
{"issue_number": 2601, "issue_title": "[Bug]: Not providing auto ID field in upsert request raises an error \"Insert missed an field `id` to collection without set nullable==true or set default_value\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nNot providing auto ID field in upsert request raises an error \"Insert missed an field id to collection without set nullable==true or set default_value\"\nExpected Behavior\nThe upsert request should not fail because the ID field is configured to be auto_id\nSteps/Code To Reproduce behavior\nfrom pymilvus import CollectionSchema, DataType, FieldSchema\nfrom pymilvus.milvus_client.index import IndexParams\n\nclient = MilvusClient(\n    uri=<SECRET>,\n    token=<SECRET>,\n)\n\ndimension = 4\ncollection_name = \"testing_collection\"\nclient.create_collection(\n    collection_name,\n    schema=CollectionSchema(\n        fields=[\n            FieldSchema(\n                name=\"id\",\n                dtype=DataType.INT64,\n                is_primary=True,\n                auto_id=True,\n                nullable=True,\n                description=\"Auto increment ID\",\n            ),\n            FieldSchema(\n                name=\"vector\",\n                dtype=DataType.FLOAT_VECTOR,\n                dim=dimension,\n                description=\"Embedding vector\",\n            ),\n        ],\n    ),\n)\n\nclient.create_index(\n    collection_name,\n    index_params=IndexParams(\n        field_name=\"vector\",\n        index_type=\"IVF_FLAT\",\n        metric_type=\"COSINE\",\n    ),\n)\n\nclient.load_collection(collection_name)\n\nclient.upsert(\n    collection_name,\n    data=[{\"vector\": [i, i, i, i]} for i in range(10)],\n)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): MacOS\n- Method of installation (Docker, or from source): pip install\n- Milvus version (v0.3.1, or v0.4.0): pymilvus==2.5.3\nAnything else?\nThe issue seems to be coming from this line\n\n\n\npymilvus/pymilvus/client/prepare.py\n\n\n         Line 562\n      in\n      c5a3c18\n\n\n\n\n\n\n if field_info.get(\"nullable\", False) or field_info.get(\"default_value\", None): \n\n\n\n\n\nHere it should be checked whether the field is auto_id and allow it not to be provided", "created_at": "2025-01-24", "closed_at": null, "labels": ["kind/bug", "wontfix"], "State": "open", "Author": "issamemari"}
{"issue_number": 2703, "issue_title": "[Bug]: \u6761\u4ef6\u8fc7\u6ee4\u8868\u8fbe\u5f0f\u4e2d\u51fa\u73b0\u5b57\u5178\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u65f6\u4f1a\u62a5\u9519", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\npymilvus/pymilvus/orm/iterator.py \u7b2c 375 \u884c\u4ee3\u7801\nfiltered_pk_str = f'{self._pk_field_name} > \"{self._next_id}\"'\n\u5f53 self._next_id \u662f\u4e00\u4e2a\u5b57\u5178\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u6bd4\u5982 self._next_id = '{\"name\":\"\u5f20\u4e09\",\"school\":\"\u5317\u5927\"}'\n\u8c03\u7528 collection.query_iterator() \u8fed\u4ee3\u5668\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef\uff1a\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=failed to create query plan: cannot parse expression: ids > \"{\"name\":\"\u5f20\u4e09\",\"school\":\"\u5317\u5927\"}\", error: invalid expression: ids > \"{\"name\":\"\\u5f20\\u4e09\",\"school\":\"\\u5317\\u5927\"}\": invalid parameter)>\n\n\u5efa\u8bae\u4f7f\u7528 json.dumps()\nfiltered_pk_str = f'{self._pk_field_name} > {json.dumps(self._next_id, ensure_ascii=True)}'\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-19", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "blackxer"}
{"issue_number": 2701, "issue_title": "[Bug]: Can't insert bf16 vectors using MilvusClient API", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\npymilvus version: 2.4.10\nmilvus version: 2.4.17\nHi i've tried to insert a bf16 array into milvus collection but failed when performing type check as showed in screenshot below (in entity_helper.py:337)\n\nSeems it's making sure the input ndarray are in the correct dtype but numpy doesn't support bfloat16\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-18", "closed_at": "2025-03-18", "labels": ["kind/bug"], "State": "closed", "Author": "Wwwzff"}
{"issue_number": 2698, "issue_title": "[QUESTION]: [ERROR][_create_connection]: Failed to create new connection using: 6a746e252147408aa77635658c917941 (async_milvus_client.py:597)", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\n`from pymilvus import connections, Collection\nfrom llama_index.vector_stores.milvus import MilvusVectorStore\ndef test(_host='localhost'\uff0c _port=19530):\n\"\"\"\ntest connect milvus\n:return:\n\"\"\"\nprint(\"start connect Milvus ...\")\nconnections.connect(\"default\", host=_host, port=str(_port))\nprint(\"success connect Milvus...\")\ntry:\ncollection = Collection(name=self._collection)\nprint(f\"Success connect Milvus Collection{self._collection}...\")\nexcept Exception as e:\nprint(f\"Failed to connect Milvus Collection {self._collection}: {e}\")\nfinally:\nconnections.disconnect(\"default\")\nprint(\"disconnect Milvus ...\")\ntest()\nmvs_args = {\n'uri': self.uri,\n'collection_name': self._collection,\n'similarity_metric': self.metric_type,\n'dim': dim,\n'overwrite': _overwrite,\n'index_config': {\n\"index_type\": \"FLAT\",\n\"metric_type\": self.metric_type,\n}\n}\nvector_store = MilvusVectorStore(**mvs_args)`\nThe above test using test() to connect to the milvus vector library shows a successful connection, but the next line using MilvusVectorStore to connect to the Milvus vector library shows an error: \u201c[QUESTION]: [ERROR][_create_connection]: Failed to create new connection using:  6a746e252147408aa77635658c917941 (async_milvus_client.py:597)\u201d\nAnything else?\nNo response", "created_at": "2025-03-17", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "hingkan"}
{"issue_number": 2697, "issue_title": "[Bug]: Cannot connect to milvus running on a k8s cluster - TypeError: no default reduce due to non-trivial cinit", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI have a setup where Milvus is deployed on my home Kubernetes cluster. the cluster has 4 nodes:\nF:\\Test>kubectl get nodes\nNAME            STATUS   ROLES           AGE   VERSION\nk8scontroller   Ready    control-plane   40h   v1.32.3\nk8snode1        Ready    worker          40h   v1.32.3\nk8snode2        Ready    worker          40h   v1.32.3\nk8snode3        Ready    worker          40h   v1.32.3\n\nF:\\Test>kubectl get pods -n milvus\nNAME                                                   READY   STATUS      RESTARTS        AGE\nmilvus-1742067666-minio-provisioning-rhnnc             0/1     Completed   0               17h\nmilvus-1742070012-attu-69f6ff669b-vgs9w                1/1     Running     0               16h\nmilvus-1742070012-data-coordinator-6568d8cf6c-bt7cl    1/1     Running     0               16h\nmilvus-1742070012-data-node-65f79c54bd-5gkcv           1/1     Running     0               16h\nmilvus-1742070012-etcd-0                               1/1     Running     0               16h\nmilvus-1742070012-etcd-1                               1/1     Running     0               16h\nmilvus-1742070012-etcd-2                               1/1     Running     0               16h\nmilvus-1742070012-etcd-pre-upgrade-d54cf               0/1     Completed   0               16h\nmilvus-1742070012-index-coordinator-6df4c47b99-kdwn4   1/1     Running     0               16h\nmilvus-1742070012-index-node-759fdf54b6-2s4m8          1/1     Running     0               16h\nmilvus-1742070012-kafka-controller-0                   1/1     Running     2 (3h30m ago)   16h\nmilvus-1742070012-minio-57768f94cc-7xb82               1/1     Running     0               16h\nmilvus-1742070012-minio-provisioning-4mxgh             0/1     Completed   0               16h\nmilvus-1742070012-proxy-76bc496d8c-phr28               1/1     Running     0               16h\nmilvus-1742070012-query-coordinator-767bbfb68c-gc5d7   1/1     Running     0               16h\nmilvus-1742070012-query-node-5f967fccd6-jxzzm          1/1     Running     0               16h\nmilvus-1742070012-root-coordinator-6dbf7695c5-bp7ph    1/1     Running     0               16h\n\nI can successfully connect to attu and I can see my database from a browser in the same network.\n\nI have extracted the ca certificate of the k8s cluster and put it into a directory called CA:\n Directory of C:\\CA\n\n03/16/2025  07:07 AM    <DIR>          .\n03/15/2025  04:57 PM             2,100 andrea-ca.crt\n03/15/2025  07:02 PM             2,278 client.crt\n03/15/2025  07:02 PM             3,292 client.key\n03/16/2025  07:06 AM               576 k8s-ca.crt\n\nAs you see I tried several things on top of k8s-ca.crt.\nI am not able to connect from python to milvus.\nThis is my code prototype:\nimport PyPDF2\nfrom ebooklib import epub, ITEM_DOCUMENT\nfrom bs4 import BeautifulSoup\n\nimport os\nimport sys\nimport grpc\nfrom pymilvus import MilvusClient, connections, Collection, CollectionSchema, FieldSchema, DataType, utility\n\n\nwith open(r\"C:\\CA\\k8s-ca.crt\", \"rb\") as f:\n    trusted_certs = f.read()\n\ncredentials = grpc.ssl_channel_credentials(root_certificates=trusted_certs)\n\nconnections.connect(\n    alias=\"default\",\n    uri=\"https://milvus.andrea-house.com\",  # Note: host and port only.\n    token=\"admin:Milvus\",\n    db_name=\"default\",\n    channel_credentials=credentials\n)\n\nclient = MilvusClient(\"default\")\n\ndef read_pdf(file_path):\n    \"\"\"Extract text from a PDF file.\"\"\"\n    text = \"\"\n    with open(file_path, \"rb\") as file:\n        pdf_reader = PyPDF2.PdfReader(file)\n        for page in pdf_reader.pages:\n            page_text = page.extract_text()\n            if page_text:\n                text += page_text + \"\\n\"\n    return text\n\ndef read_epub(file_path):\n    \"\"\"Extract text from an EPUB file.\"\"\"\n    book = epub.read_epub(file_path)\n    text = \"\"\n    for item in book.get_items():\n        # Only process document items\n        if item.get_type() == ITEM_DOCUMENT:\n            soup = BeautifulSoup(item.get_content(), features=\"html.parser\")\n            text += soup.get_text() + \"\\n\"\n    return text\n\ndef chunk_text(text, max_chunk_size=500):\n    \"\"\"\n    Split the text into chunks each with a maximum number of words.\n    Adjust max_chunk_size as needed.\n    \"\"\"\n    words = text.split()\n    chunks = []\n    for i in range(0, len(words), max_chunk_size):\n        chunk = \" \".join(words[i:i + max_chunk_size])\n        chunks.append(chunk)\n    return chunks\n\ndef create_milvus_collection(collection_name, dim):\n    \"\"\"\n    Create a Milvus collection with a given dimension if it doesn't exist.\n    The collection includes:\n      - An auto-generated primary key \"id\"\n      - A \"embedding\" field to store vector embeddings\n      - A \"text\" field to store the corresponding text chunk\n    \"\"\"\n    if utility.has_collection(collection_name):\n        collection = Collection(collection_name)\n        print(f\"Collection '{collection_name}' already exists.\")\n        return collection\n    else:\n        fields = [\n            FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=True),\n            FieldSchema(name=\"embedding\", dtype=DataType.FLOAT_VECTOR, dim=dim),\n            FieldSchema(name=\"text\", dtype=DataType.VARCHAR, max_length=65535)\n        ]\n        schema = CollectionSchema(fields, description=\"Book chunks and embeddings\")\n        collection = Collection(name=collection_name, schema=schema)\n        print(f\"Created collection '{collection_name}'.\")\n        return collection\n\ndef main(file_path):\n    # Determine file extension and extract text accordingly\n    ext = os.path.splitext(file_path)[1].lower()\n    if ext == \".pdf\":\n        book_text = read_pdf(file_path)\n    elif ext == \".epub\":\n        book_text = read_epub(file_path)\n    else:\n        print(\"Unsupported file format. Please provide a PDF or EPUB file.\")\n        return\n\n    if not book_text.strip():\n        print(\"No text was extracted from the file.\")\n        return\n\n    # Chunk the book text for manageable embedding generation\n    chunks = chunk_text(book_text, max_chunk_size=500)\n    print(f\"Extracted {len(chunks)} text chunks from the book.\")\n\n    # Load the sentence transformer model to generate embeddings\n    model = SentenceTransformer(\"all-MiniLM-L6-v2\")\n    embeddings = model.encode(chunks, convert_to_numpy=True)\n\n    # Connect to Milvus (update host/port if necessary)\n    connections.connect(\"default\", host=\"milvus.andrea-house.com\", port=\"443\")\n\n    # Create (or get) a collection named \"python\" with the proper embedding dimension\n    dim = embeddings.shape[1]\n    collection = create_milvus_collection(\"python\", dim)\n\n    # Prepare data for insertion; note that the auto_id field (\"id\") is skipped\n    data = [\n        embeddings.tolist(),  # embedding field\n        chunks                # text field\n    ]\n\n    # Insert data into the collection and flush to persist\n    insert_result = collection.insert(data)\n    collection.flush()\n    print(\"Data inserted into Milvus successfully.\")\n    print(f\"Insert result: {insert_result}\")\n\nif __name__ == \"__main__\":\n    if len(sys.argv) < 2:\n        print(\"Usage: python load_book.py <path_to_book>\")\n        sys.exit(1)\n    file_path = sys.argv[1]\n    main(file_path)\n\n\nThis is my error:\nTraceback (most recent call last):\n  File \"F:\\Test\\load_book.py\", line 16, in <module>\n    connections.connect(\n  File \"C:\\Python311\\Lib\\site-packages\\pymilvus\\orm\\connections.py\", line 390, in connect\n    kwargs_copy = copy.deepcopy(kwargs)\n                  ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n        ^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n                             ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n            ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n        ^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n                             ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 161, in deepcopy\n    rv = reductor(4)\n         ^^^^^^^^^^^\n  File \"<stringsource>\", line 2, in grpc._cython.cygrpc.SSLChannelCredentials.__reduce_cython__\nTypeError: no default __reduce__ due to non-trivial __cinit__\n\nI have been looking into encapsulating the connection and trying to disable deep copy.\nNo luck...\nThanks for looking at this.\nRegards\nAndrea\nExpected Behavior\nI should be able to connect to Milvus as I do from my browser\nSteps/Code To Reproduce behavior\nTry to connect to a Milvus instance running inside a kubernetes cluster using an airgapped environment \n\n\nEnvironment details\n- Hardware/Software conditions (OS, CPU, GPU, Memory): Kubernetes cluster for Milvus - Airgapped\n- Method of installation (Docker, or from source): - used \"milvus\" chart repository https://milvus.io/docs/install_cluster-helm.md\n- Milvus version (v0.3.1, or v0.4.0): 2.5.6\n- Milvus configuration (Settings you made in `server_config.yaml`): I swapped the ingress controller certificate with one I generated from andrea-ca.crt - I have andrea-ca.crt added to my trusted root authority in my windows system.\nAnything else?\nI am using Private CAs generated by CloudFlare CFSSL - https://github.com/cloudflare/cfssl\nNo response", "created_at": "2025-03-16", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "andreab67"}
{"issue_number": 2696, "issue_title": "[Bug]: Granting permissions has inconsistent behavior for '' and \"\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThis doesn't work:\n  client.grant_privilege_v2(\n      role_name=args.role_name,\n      privilege=\"CollectionAdmin\",\n      collection_name=\"*\",\n      db_name=\"default\",\n  )\n\n\nThis does:\n  client.grant_privilege_v2(\n      role_name=args.role_name,\n      privilege=\"CollectionAdmin\",\n      collection_name='*',\n      db_name='default',\n  )\n\nExpected Behavior\nI expect no difference in behavior for single and double quotes\nSteps/Code To Reproduce behavior\nSee description\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-14", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "ColeDearmon-Moore-at"}
{"issue_number": 2695, "issue_title": "[Bug]: On Milvus Lite filtering with AND or ARRAY_CONTAINS_ANY / ARRAY_CONTAINS_ALL not working", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nA user has observed what appear to be bugs in filtering conditions on Milvus Lite with Python 2.5.5.\nI have attached an example that contains an AND condition and a ARRAY_CONTAINS_ANY.\nThe AND filter is returning entities that don't match the filter, and ARRAY_CONTAINS_ANY and ARRAY_CONTAINS_ALL raise an Exception (see attached file).\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nhttps://gist.github.com/stefanwebb/bb02969a0c3eb846659e41d39148ef8d\nEnvironment details\n\nAnything else?\nNo response", "created_at": "2025-03-14", "closed_at": "2025-04-14", "labels": ["kind/bug", "milvus-lite"], "State": "closed", "Author": "stefanwebb"}
{"issue_number": 2693, "issue_title": "[Bug]: Can't list_collections() as custom user", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen i list collection with function 'client.list_collection()', encountered a bug 'invalid auth token', but i has created 'user1' with all privileges(CollectionAdmin, DatabaseAdmin, ClusterAdmin). I can only list collection as root user. Is this a bug???\n['test2', 'test', 'demo_collection2']\n\n{'role': 'my_role1', 'privileges': [{'object_type': 'Global', 'object_name': '*', 'db_name': '*', 'role_name': 'my_role1', 'privilege': 'ClusterAdmin', 'grantor_name': 'root'}, {'object_type': 'Global', 'object_name': '*', 'db_name': 'my_database', 'role_name': 'my_role1', 'privilege': 'CollectionAdmin', 'grantor_name': 'root'}, {'object_type': 'Global', 'object_name': '*', 'db_name': 'my_database', 'role_name': 'my_role1', 'privilege': 'DatabaseAdmin', 'grantor_name': 'root'}]}\n2025-03-14 10:07:56,598 [ERROR][handler]: RPC error: [list_collections], <MilvusException: (code=65535, message=etcdserver: invalid auth token)>, <Time:{'RPC start': '2025-03-14 10:07:56.594711', 'RPC error': '2025-03-14 10:07:56.598875'}> (decorators.py:140)\nTraceback (most recent call last):\n  File \"C:\\major\\projectcode\\projectfile\\vscode\\FrameMark-Web\\framemarkAI\\milvus\\role\\role_manager.py\", line 46, in <module>\n    print(client.list_collections())\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 851, in list_collections\n    return conn.list_collections(**kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 141, in handler\n    raise e from e\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 137, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 176, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 116, in handler\n    raise e from e\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 86, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 413, in list_collections\n    check_status(status)\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\client\\utils.py\", line 64, in check_status\n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=etcdserver: invalid auth token)>\n\n\nExpected Behavior\nWhen i create a user1 with necessary privilege, i can list collections as user1\nSteps/Code To Reproduce behavior\ndef create_role(client):\n    user_name = \"user1\"\n    role_name = \"my_role1\"\n    # client.create_database(\"my_database\")\n    client.create_user(user_name=user_name, password=\"passwordformilvus\")\n    client.create_role(role_name=role_name)\n    client.grant_privilege_v2(\n        role_name=role_name,\n        db_name='my_database',\n        collection_name=\"*\",\n        privilege=\"CollectionAdmin\"\n    )\n    client.grant_privilege_v2(\n        role_name=role_name,\n        db_name='my_database',\n        collection_name=\"*\",\n        privilege=\"DatabaseAdmin\"\n    )\n    client.grant_privilege_v2(\n        role_name=role_name,\n        db_name='*',\n        collection_name=\"*\",\n        privilege=\"ClusterAdmin\"\n    )\n    client.grant_role(user_name=user_name, role_name=role_name)\n\n\nif __name__ == '__main__':\n    client = MilvusClient(uri=\"http://192.168.137.128:19530\",\n                          # token=\"root:Milvus\",\n                          token=\"user1:passwordformilvus\",\n                          db_name=\"my_database\")\n\n    # create_role(client)\n\n    print(client.describe_role(\"my_role1\"))\n\n    print(client.list_collections())\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): windows11,AMD Ryzen 7 580oH with Radeon Graphics,3050ti laptop\n- Method of installation (Docker, or from source):docker\n- Milvus version (v0.3.1, or v0.4.0):milvus:v2.5.6\n- Milvus configuration (Settings you made in `server_config.yaml`):\nno server_config.yaml, there is only a user.yaml:\ncommon:\n        security:\n               authorizationEnabled: true\nAnything else?\nNo response", "created_at": "2025-03-14", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Lsnxiaoxiong"}
{"issue_number": 2691, "issue_title": "[FEATURE]: AsyncMilvusClient Missing has_collection() Method", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nDescription:\nWhen using pymilvus, I noticed that AsyncMilvusClient does not have the has_collection() method, whereas MilvusClient does.\nSteps to Reproduce:\nfrom pymilvus import AsyncMilvusClient\n\nclient = AsyncMilvusClient()\n# Attempting to check for a collection\nclient.has_collection(\"my_collection\")  # AttributeError: 'AsyncMilvusClient' object has no attribute 'has_collection'\nExpected Behavior:\nAsyncMilvusClient should have a has_collection() method similar to MilvusClient, or an equivalent alternative should be documented.\nEnvironment:\n\npymilvus version: 2.5.5\n\nAdditional Context:\nIs there an alternative way to check for collection existence in AsyncMilvusClient, or is this a missing feature?\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2025-03-12", "closed_at": null, "labels": ["kind/feature"], "State": "open", "Author": "SwAt1563"}
{"issue_number": 2688, "issue_title": "[Bug]: milvus_client.create_index do nothing if index_params={}", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nmilvus_client.create_index do nothing if index_params={}\nExpected Behavior\ncreate_index request shall be sent to milvus server even if index_params is empty\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-12", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "congqixia"}
{"issue_number": 2683, "issue_title": "[Bug]: Create database with invalid properties does not report error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nCreate database with invalid properties does not report error\n[2025-03-07 17:30:05 - DEBUG - ci_test]: (api_request)  : [MilvusClient] args: ['http://10.102.7.216:19530', '', '', '', 'root:Milvus', None], kwargs: {} (api_request.py:52)\n[2025-03-07 17:30:05 - DEBUG - ci_test]: (api_response) : <pymilvus.milvus_client.milvus_client.MilvusClient object at 0x14b858580>  (api_request.py:27)\n[2025-03-07 17:30:05 - INFO - ci_test]: server version: 2.6.0-dev (client_v2_base.py:43)\n[2025-03-07 17:30:05 - DEBUG - ci_test]: (api_request)  : [MilvusClient.create_database] args: ['client_database_i5s2Zhgm', 'hhh'], kwargs: {} (api_request.py:52)\n[2025-03-07 17:30:05 - DEBUG - ci_test]: (api_response) : None  (api_request.py:27)\n\nExpected Behavior\nReport error\nSteps/Code To Reproduce behavior\n    @pytest.mark.tags(CaseLabel.L1)\n    @pytest.mark.parametrize(\"properties\", [\"hhh\", []])\n    def test_milvus_client_create_database_with_invalid_properties(self, properties):\n        \"\"\"\n        target: test fast create db name with invalid properties\n        method: create db name with invalid properties\n        expected: raise exception\n        actual: Currently such errors are not very readable, \n                and entries of numeric types such as 1.11, 111 are not blocked\n        \"\"\"\n        client = self._client()\n        # 1. create database\n        db_name = cf.gen_unique_str(db_prefix)\n        error = {ct.err_code: 1, ct.err_msg: f\"Unexpected error, message=<unsupported operand type(s) for +: 'float' and '{type(properties).__name__}'>\"}\n        self.create_database(client, db_name, properties,\n                             check_task=CheckTasks.err_res, check_items=error)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`): master-latest\n- Pymilvus version: 2.6.0rc84\nAnything else?\nNo response", "created_at": "2025-03-07", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 2682, "issue_title": "[Enhancement]: Milvus_client lacks interfaces", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nhttps://github.com/milvus-io/pymilvus/blame/master/pymilvus/milvus_client/milvus_client.py\nImport, GetFlushState, GetLoadingProgress are not found.\nThese are contained in privilege_groups.\n\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2025-03-07", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "NicoYuan1986"}
{"issue_number": 2681, "issue_title": "[Bug]: hybrid search, SequenceIterator is not iterable.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nUsing python 3.13, when doing hybrid search based on your tutorial, when using the following code:\ndef hybrid_search(\n            self,\n            query_dense_embedding,\n            query_sparse_embedding,\n            sparse_weight=1.0,\n            dense_weight=1.0,\n            limit=10,\n    ):\n        dense_search_params = {\"metric_type\": \"IP\"}\n        dense_req = AnnSearchRequest(\n            [query_dense_embedding], \"dense_vector\",param=dense_search_params, limit=limit\n        )\n        sparse_search_params = {\"metric_type\": \"IP\"}\n        sparse_req = AnnSearchRequest(\n            [query_sparse_embedding], \"sparse_vector\", param=sparse_search_params, limit=limit\n        )\n        print('sparse_req', sparse_req)\n        print('dense_req', dense_req)\n        rerank = WeightedRanker(sparse_weight, dense_weight)\n        res = self.client.hybrid_search(\n            self.collection_name,[sparse_req, dense_req], ranker=rerank, limit=limit, output_fields=[\"text\"]\n        )[0]\n\nI encountered this error:\nFile \"/Users/benjamin/Library/Caches/pypoetry/virtualenvs/fastapiproject-Eg8zujTM-py3.13/lib/python3.13/site-packages/pymilvus/milvus_client/milvus_client.py\", line 360, in hybrid_search\n    ret.append([hit.to_dict() for hit in hits])\n                                         ^^^^\nTypeError: 'SequenceIterator' object is not iterable\n\n\nAlso running examples/hybrid_search.py you could reproduce.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-05", "closed_at": "2025-03-05", "labels": ["kind/bug"], "State": "closed", "Author": "Benjacho"}
{"issue_number": 2676, "issue_title": "[FEATURE]: Enable to create index on dynamic field", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nSee also: milvus-io/milvus#35528\nThis check may not needed at all, just use checks from proxy. \n\n\npymilvus/pymilvus/client/grpc_handler.py\n\n\n         Line 1038\n      in\n      af2f6df\n\n\n\n\n\n\n for fields in collection_desc[\"fields\"]: \n\n\n\n\n\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2025-03-03", "closed_at": "2025-03-17", "labels": ["kind/feature"], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 2675, "issue_title": "[QUESTION]: Why the TextMatch search don\u00b4t work in my project", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI add to my project in Milvus search a filter with \"TEXT_MATCH(page,content, '{word}')\" for word in key\nBut when I try to search for a specific word returns entites that dont have the word.\n# Define search parameters\nsearch_params = {\"metric_type\": \"COSINE\", \"params\": {\"nprobe\": 50}}\ntop_k = 20\n\n# Define filter parameters\nkey = get_keywords(query_text)\nfilter_parms = \" or \".join([f\"TEXT_MATCH(page_content, '{word}')\" for word in key])\nprint(filter_parms)\n\nreturn collection.search(\n    data=query_embedding,\n    anns_field=\"embeddings\",\n    #partition_names=[particion_post_name,particion_opi_name],\n    partition_names=[particion_post_name],\n    filter=filter_parms,\n    param=search_params,\n    limit=top_k,\n    output_fields=[\"metadata\", \"page_content\"],\n)\n\nAnything else?\nNo response", "created_at": "2025-02-28", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "GBrochado"}
{"issue_number": 2674, "issue_title": "[QUESTION]: I am getting grpc.aio._call.AioRpcError when sending concurrent load_partitions requests", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI use pymilvus 2.5.4 and a Milvus cluster the same version.\nWhen I have several concurrent requests to load a partition from the async client I get the following:\nFile \"/usr/local/lib/python3.12/site-packages/mle_utilities/persistence/milvus/async_sharded_vectorstore.py\", line 298, in _load_partition\n    await self.async_client.load_partitions(collection_name=collection_name, partition_names=[partition_name])\n  File \"/usr/local/lib/python3.12/site-packages/pymilvus/milvus_client/async_milvus_client.py\", line 243, in load_partitions\n    await conn.load_partitions(collection_name, partition_names, timeout=timeout, **kwargs)\n  File \"/usr/local/lib/python3.12/site-packages/pymilvus/client/async_grpc_handler.py\", line 828, in load_partitions\n    response = await self._async_stub.LoadPartitions(request, timeout=timeout)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/grpc/aio/_interceptor.py\", line 472, in __await__\n    response = yield from call.__await__()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/grpc/aio/_call.py\", line 327, in __await__\n    raise _create_rpc_error(\ngrpc.aio._call.AioRpcError: <AioRpcError of RPC that terminated with:\n\tstatus = StatusCode.UNAVAILABLE\n\tdetails = \"recvmsg:Connection reset by peer\"\n\tdebug_error_string = \"UNKNOWN:Error received from peer  {created_time:\"2025-02-27T09:02:32.243883236+00:00\", grpc_status:14, grpc_message:\"recvmsg:Connection reset by peer\"}\"\n>\n\nWhat might be the reason? Should I just retry until it passes? I see no issues with my milvus cluster.\nAnything else?\nNo response", "created_at": "2025-02-27", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "mihailyanchev"}
{"issue_number": 2750, "issue_title": "[QUESTION]: used AsyncMilvusClient in FastAPI", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nused AsyncMilvusClient in FastAPI?\nAnything else?\nfastapi:\"gunicorn\", \"main:app\", \"-k\", \"uvicorn.workers.UvicornWorker\", \"--bind\", \"0.0.0.0:9088\",\"--workers\", \"4\",\"--threads\",\"2\",\"--timeout\",\"2000\",\"--capture-output\"\nRuntimeError: Task <Task pending name='Task-3' coro=<RequestResponseCycle.run_asgi() running at /usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py:409> cb=[set.discard()]> got Future  attached to a different loop", "created_at": "2025-04-24", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "liubaiand"}
{"issue_number": 2749, "issue_title": "[Bug]: Move of SearchResult in #2735 breaks `import pymilvus.client.abstract.SearchResult`", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen the class was moved to a different model (the misspelled search_reasult module), there was no alias left behind in pymilvus.client.abstract so that code importing from the original module still works.\nlangchain_milvus is now broken.\nExpected Behavior\npymilvus.client.abstract should include\nfrom .search_reasult import Hit, Hits, SearchResult\nTo enable existing code to still function.\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-04-23", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "bjhargrave"}
{"issue_number": 2743, "issue_title": "[QUESTION]: milvus already supports 'Text' field type - how can I add such support to the pymilvus?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI had tried to add it to class DataType in schema_pb2 in grpc_gen with no success.\nAnything else?\nNo response", "created_at": "2025-04-22", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "liorf95"}
{"issue_number": 2732, "issue_title": "[Bug]:", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe log keeps continuously refreshing the warning message [WARN] [dateoookd/metago 421] [not found database name] without stopping. The dataset cannot be loaded, and all operations such as data retrieval and insertion cannot be performed.\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-04-17", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Z-thirty"}
{"issue_number": 2727, "issue_title": "[Bug]: if db_name is passed as a path in the uri it is overwritten with empty string", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThis is related to this issue and its fix, which I implemented.\nThe original issue is fixed, but the fix introduces another bug - if you pass a uri to the MilvusClient or AsyncMilvusClient that contains the db_name as a path (http://localhost:19530/test_db) and you do not explicitly pass the db_name argument, it will get overwritten with an empty string.\nThe issue is here in this line: https://github.com/milvus-io/pymilvus/blob/master/pymilvus/orm/connections.py#L458\nwe should have group[0] instead of group[1].\nSorry for overlooking this.\nExpected Behavior\nWhen you pass the db_name as a path in the uri and not as an explicit argument, the client should connect to the provided db_name.\nSteps/Code To Reproduce behavior\n\"\"\"\nPut a break point here and check the value of group: https://github.com/milvus-io/pymilvus/blob/master/pymilvus/orm/connections.py#L458\n\"\"\"\n\nimport asyncio\n\nfrom pymilvus import AsyncMilvusClient\n\n\nasync def main():\n    _ = AsyncMilvusClient(\n        uri=\"http://localhost:19530/test_db\",\n    )\n\n\nasyncio.run(main())\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): 2.5.6\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-04-15", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "mihailyanchev"}
{"issue_number": 2724, "issue_title": "[Enhancement]: pkg_resources is deprecated", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\npkg_resources is deprecated and can be replaced by importlib (which also has a backport importlib_resources, importlib_metadata).\nBecause pkg_resources is deprecated, a warning is raised every time you import the module.\n  ***/.venv/lib/python3.13/site-packages/pymilvus/client/__init__.py:6: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\n    from pkg_resources import DistributionNotFound, get_distribution\nWhy is this needed?\nNo response\nAnything else?\n\u276f uv pip list | grep pymilvus\npymilvus                 2.4.15\n\u276f uv run python --version\nPython 3.13.2", "created_at": "2025-04-12", "closed_at": "2025-04-14", "labels": ["kind/enhancement"], "State": "closed", "Author": "phi-friday"}
{"issue_number": 2723, "issue_title": "[Bug]: <MilvusException: (code=1100, message=only IP is the supported metric type for sparse index: invalid parameter[expected=valid index params][actual=invalid index params])>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\u53c2\u8003\u8fd9\u7bc7\u6587\u6863\u7684 collection\u6784\u5efa\u65b9\u6cd5\uff0chttps://milvus.io/docs/zh/multi-vector-search.md\npython \u7248\u672c 3.11\uff0cpymilvus\u7248\u672c 2.5.5\uff0cmilvus \u670d\u52a1\u7aef\u7248\u672c v2.4.10\n\u4e0b\u9762\u662f\u6211\u7684code:\ndef create_collection():\nmilvus_client = MilvusClient(\nuri=settings.AIOPS_MILVUS_DB_URL,\nuser=settings.AIOPS_MILVUS_DB_USER,\npassword=settings.AIOPS_MILVUS_DB_PASSWORD,\ndb_name=settings.AIOPS_MILVUS_DB_NAME\n)\ncollection_name = \"aiops_hybrid\"\nhas_collection = milvus_client.has_collection(collection_name, timeout=5)\nif has_collection:\nprint(\"\u26a0\ufe0f An existing collection was found and is being deleted...\")\nmilvus_client.drop_collection(collection_name)\nprint(\"\u2705 Old collection deleted!\")\n# create schema\nschema = milvus_client.create_schema()\nschema.add_field(\"pk\", DataType.INT64, is_primary=True, auto_id=True)\nschema.add_field(\"text\", DataType.VARCHAR, max_length=65535, enable_analyzer=True)\nschema.add_field(\"dense_vector\", DataType.FLOAT_VECTOR, dim=1536)\nschema.add_field(\"sparse_vector\", DataType.SPARSE_FLOAT_VECTOR)\nschema.add_field(\"id\", DataType.VARCHAR, max_length=512)\nschema.add_field(\"title\", DataType.VARCHAR, max_length=512)\nschema.add_field(\"url\", DataType.VARCHAR, max_length=512)\nschema.add_field(\"chunk_index\", DataType.INT64)\n\nbm25_function = Function(\n    name=\"bm25_fn\",\n    input_field_names=[\"text\"],\n    output_field_names=[\"sparse_vector\"],\n    function_type=FunctionType.BM25,\n)\nschema.add_function(bm25_function)\n# create index\nindex_params = milvus_client.prepare_index_params()\nindex_params.add_index(\n    field_name=\"dense_vector\",\n    index_name=\"dense_index\",\n    index_type=\"IVF_FLAT\",\n    metric_type=\"IP\",\n    params={\"nlist\": 128},\n)\nindex_params.add_index(\n    field_name=\"sparse_vector\",\n    index_name=\"sparse_index\",\n    index_type=\"SPARSE_INVERTED_INDEX\",\n    metric_type=\"BM25\",\n    params={\"bm25_k1\": 1.2, \"bm25_b\": 0.75},\n)\nmilvus_client.create_collection(collection_name, schema=schema, index_params=index_params,\n                                consistency_level=\"Strong\")\nprint(f\"create collection successfully!\")\n\n\u6267\u884c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u65f6\u5019\u62a5\u9519\n2025-04-09 12:27:52,312 [ERROR][handler]: RPC error: [create_index], <MilvusException: (code=1100, message=only IP is the supported metric type for sparse index: invalid parameter[expected=valid index params][actual=invalid index params])>, <Time:{'RPC start': '2025-04-09 12:27:51.960388', 'RPC error': '2025-04-09 12:27:52.312790'}> (decorators.py:140)\n2025-04-09 12:27:52,313 [ERROR][_create_index]: Failed to create an index on collection: aiops_hybrid (milvus_client.py:183)\nTraceback (most recent call last):\nFile \"C:\\Code\\aiops\\insert_milvus_multi.py\", line 123, in \ncreate_collection()\nFile \"C:\\Code\\aiops\\insert_milvus_multi.py\", line 60, in create_collection\nmilvus_client.create_collection(collection_name, schema=schema, index_params=index_params,\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 99, in create_collection\nreturn self._create_collection_with_schema(\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 899, in _create_collection_with_schema\nself.create_index(collection_name, index_params, timeout=timeout)\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 162, in create_index\nself._create_index(collection_name, index_param, timeout=timeout, **kwargs)\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 184, in _create_index\nraise ex from ex\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 173, in _create_index\nconn.create_index(\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 141, in handler\nraise e from e\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 137, in handler\nreturn func(*args, **kwargs)\n^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 176, in handler\nreturn func(self, *args, **kwargs)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 116, in handler\nraise e from e\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 86, in handler\nreturn func(*args, **kwargs)\n^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 1083, in create_index\ncheck_status(status)\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\client\\utils.py\", line 64, in check_status\nraise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=only IP is the supported metric type for sparse index: invalid parameter[expected=valid index params][actual=invalid index params])>\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-04-09", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "369699269"}
{"issue_number": 2715, "issue_title": "[Bug]: Cannot create connections to  different milvus instances", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I try to create two connections to separate instances of milvus, in the same execution, I get errors.\nExpected Behavior\nI expect to be able to make both connections successfully.\nSteps/Code To Reproduce behavior\nWhen I execute the following code:\nimport uuid\nfrom pymilvus import (\n    MilvusClient,\n    connections\n)\n\na_name = str(uuid.uuid4())[:8]\ncollection_name = \"test_collection\"\nmilvus_uri = \"http://milvus:19530\"\nconnections.connect(alias=a_name, uri=milvus_uri)\nclient_1 = MilvusClient(milvus_uri, alias=a_name)\n\na_name = str(uuid.uuid4())[:8]\ncollection_name = \"test_collection\"\nmilvus_uri = \"http://10.57.202.36:19530\"\nconnections.connect(alias=a_name, uri=milvus_uri)\nclient_2 = MilvusClient(milvus_uri, alias=a_name)\n\nI get this error:\nTraceback (most recent call last):\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/pdb.py\", line 1723, in main\n    pdb._runscript(mainpyfile)\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/pdb.py\", line 1583, in _runscript\n    self.run(statement)\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/bdb.py\", line 598, in run\n    exec(cmd, globals, locals)\n  File \"<string>\", line 1, in <module>\n  File \"/raid/workspace/nv-ingest/client/client_examples/examples/index_test.py\", line 12, in <module>\n    client_1 = MilvusClient(milvus_uri, alias=a_name)\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 66, in __init__\n    self._using = self._create_connection(\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 921, in _create_connection\n    raise ex from ex\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 918, in _create_connection\n    connections.connect(using, user, password, db_name, token, uri=uri, **kwargs)\nTypeError: Connections.connect() got multiple values for argument 'alias'\n\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-31", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "jperez999"}
{"issue_number": 2711, "issue_title": "[Enhancement]: Optimize SDK documentation description", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nThere are no specific instructions from the official source regarding usage restrictions of the SDK. This can be confusing for users trying to determine in which exact version a feature is available. For example, with the inverted index for JSON, one might think it\u2019s available in version 2.5.x based on the official documentation, whereas it actually requires version 2.5.7\nA specific version should be specified here, for example Available since: v2.5.7\n\n\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2025-03-28", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "groobyming"}
{"issue_number": 2710, "issue_title": "[Bug]: https://milvus.io/docs/zh/use-json-fields.md \u6587\u6863\u6709\u8bef\uff0c\u5e76\u4e14pymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=INVERTED are not supported on JSON field: invalid parameter[expected=valid index params][actual=invalid index params])>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\u6587\u6863\u4e2d\n**index_params = client.prepare_index_params()**\n\nindex_params.add_index(\n    field_name=\"metadata\",\n    index_type=\"INVERTED\",\n    index_name=\"json_index_1\",\n    params={\n        \"json_path\": \"metadata[\\\"product_info\\\"][\\\"category\\\"]\",\n        \"json_cast_type\": \"varchar\"\n    }\n)\n\nindex_params.add_index(\n    field_name=\"metadata\",\n    index_type=\"INVERTED\",\n    index_name=\"json_index_2\",\n    params={\n        \"json_path\": \"metadata[\\\"price\\\"]\",\n        \"json_cast_type\": \"double\"\n    }\n)\n\n**index_params = client.prepare_index_params()**\n\nindex_params.add_index(\n    field_name=\"embedding\",\n    index_name=\"vector_index\",\n    index_type=\"AUTOINDEX\",  # Use automatic indexing to simplify complex index settings\n    metric_type=\"COSINE\"  # Specify similarity metric type, options include L2, COSINE, or IP\n)\n\n\u8fd9\u91ccindex_params = client.prepare_index_params() \u5b9a\u4e49\u4e86\u4e24\u6b21\uff0c\u4e4b\u524d\u5b9a\u4e49JSON INDEX \u88ab\u91cd\u65b0\u521d\u59cb\u5316\u4e86\uff0c\u8fd9\u91cc\u53ea\u6709\u4e00\u4e2aembedding \u7684 AUTOINDEX\n\u5e76\u4e14\u5982\u679c \u53bb\u6389\u591a\u4f59\u7684index_params = client.prepare_index_params() \uff0c\u6267\u884c\u4f1a\u62a5\u9519pymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=INVERTED are not supported on JSON field: invalid parameter[expected=valid index params][actual=invalid index params])>\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-27", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "deku0818"}
