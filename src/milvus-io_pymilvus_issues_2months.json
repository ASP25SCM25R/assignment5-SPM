{"issue_number": 2703, "issue_title": "[Bug]: \u6761\u4ef6\u8fc7\u6ee4\u8868\u8fbe\u5f0f\u4e2d\u51fa\u73b0\u5b57\u5178\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u65f6\u4f1a\u62a5\u9519", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\npymilvus/pymilvus/orm/iterator.py \u7b2c 375 \u884c\u4ee3\u7801\nfiltered_pk_str = f'{self._pk_field_name} > \"{self._next_id}\"'\n\u5f53 self._next_id \u662f\u4e00\u4e2a\u5b57\u5178\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u6bd4\u5982 self._next_id = '{\"name\":\"\u5f20\u4e09\",\"school\":\"\u5317\u5927\"}'\n\u8c03\u7528 collection.query_iterator() \u8fed\u4ee3\u5668\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef\uff1a\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=failed to create query plan: cannot parse expression: ids > \"{\"name\":\"\u5f20\u4e09\",\"school\":\"\u5317\u5927\"}\", error: invalid expression: ids > \"{\"name\":\"\\u5f20\\u4e09\",\"school\":\"\\u5317\\u5927\"}\": invalid parameter)>\n\n\u5efa\u8bae\u4f7f\u7528 json.dumps()\nfiltered_pk_str = f'{self._pk_field_name} > {json.dumps(self._next_id, ensure_ascii=True)}'\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-19", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "blackxer"}
{"issue_number": 2701, "issue_title": "[Bug]: Can't insert bf16 vectors using MilvusClient API", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\npymilvus version: 2.4.10\nmilvus version: 2.4.17\nHi i've tried to insert a bf16 array into milvus collection but failed when performing type check as showed in screenshot below (in entity_helper.py:337)\n\nSeems it's making sure the input ndarray are in the correct dtype but numpy doesn't support bfloat16\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-18", "closed_at": "2025-03-18", "labels": ["kind/bug"], "State": "closed", "Author": "Wwwzff"}
{"issue_number": 2698, "issue_title": "[QUESTION]: [ERROR][_create_connection]: Failed to create new connection using: 6a746e252147408aa77635658c917941 (async_milvus_client.py:597)", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\n`from pymilvus import connections, Collection\nfrom llama_index.vector_stores.milvus import MilvusVectorStore\ndef test(_host='localhost'\uff0c _port=19530):\n\"\"\"\ntest connect milvus\n:return:\n\"\"\"\nprint(\"start connect Milvus ...\")\nconnections.connect(\"default\", host=_host, port=str(_port))\nprint(\"success connect Milvus...\")\ntry:\ncollection = Collection(name=self._collection)\nprint(f\"Success connect Milvus Collection{self._collection}...\")\nexcept Exception as e:\nprint(f\"Failed to connect Milvus Collection {self._collection}: {e}\")\nfinally:\nconnections.disconnect(\"default\")\nprint(\"disconnect Milvus ...\")\ntest()\nmvs_args = {\n'uri': self.uri,\n'collection_name': self._collection,\n'similarity_metric': self.metric_type,\n'dim': dim,\n'overwrite': _overwrite,\n'index_config': {\n\"index_type\": \"FLAT\",\n\"metric_type\": self.metric_type,\n}\n}\nvector_store = MilvusVectorStore(**mvs_args)`\nThe above test using test() to connect to the milvus vector library shows a successful connection, but the next line using MilvusVectorStore to connect to the Milvus vector library shows an error: \u201c[QUESTION]: [ERROR][_create_connection]: Failed to create new connection using:  6a746e252147408aa77635658c917941 (async_milvus_client.py:597)\u201d\nAnything else?\nNo response", "created_at": "2025-03-17", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "hingkan"}
{"issue_number": 2697, "issue_title": "[Bug]: Cannot connect to milvus running on a k8s cluster - TypeError: no default reduce due to non-trivial cinit", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nI have a setup where Milvus is deployed on my home Kubernetes cluster. the cluster has 4 nodes:\nF:\\Test>kubectl get nodes\nNAME            STATUS   ROLES           AGE   VERSION\nk8scontroller   Ready    control-plane   40h   v1.32.3\nk8snode1        Ready    worker          40h   v1.32.3\nk8snode2        Ready    worker          40h   v1.32.3\nk8snode3        Ready    worker          40h   v1.32.3\n\nF:\\Test>kubectl get pods -n milvus\nNAME                                                   READY   STATUS      RESTARTS        AGE\nmilvus-1742067666-minio-provisioning-rhnnc             0/1     Completed   0               17h\nmilvus-1742070012-attu-69f6ff669b-vgs9w                1/1     Running     0               16h\nmilvus-1742070012-data-coordinator-6568d8cf6c-bt7cl    1/1     Running     0               16h\nmilvus-1742070012-data-node-65f79c54bd-5gkcv           1/1     Running     0               16h\nmilvus-1742070012-etcd-0                               1/1     Running     0               16h\nmilvus-1742070012-etcd-1                               1/1     Running     0               16h\nmilvus-1742070012-etcd-2                               1/1     Running     0               16h\nmilvus-1742070012-etcd-pre-upgrade-d54cf               0/1     Completed   0               16h\nmilvus-1742070012-index-coordinator-6df4c47b99-kdwn4   1/1     Running     0               16h\nmilvus-1742070012-index-node-759fdf54b6-2s4m8          1/1     Running     0               16h\nmilvus-1742070012-kafka-controller-0                   1/1     Running     2 (3h30m ago)   16h\nmilvus-1742070012-minio-57768f94cc-7xb82               1/1     Running     0               16h\nmilvus-1742070012-minio-provisioning-4mxgh             0/1     Completed   0               16h\nmilvus-1742070012-proxy-76bc496d8c-phr28               1/1     Running     0               16h\nmilvus-1742070012-query-coordinator-767bbfb68c-gc5d7   1/1     Running     0               16h\nmilvus-1742070012-query-node-5f967fccd6-jxzzm          1/1     Running     0               16h\nmilvus-1742070012-root-coordinator-6dbf7695c5-bp7ph    1/1     Running     0               16h\n\nI can successfully connect to attu and I can see my database from a browser in the same network.\n\nI have extracted the ca certificate of the k8s cluster and put it into a directory called CA:\n Directory of C:\\CA\n\n03/16/2025  07:07 AM    <DIR>          .\n03/15/2025  04:57 PM             2,100 andrea-ca.crt\n03/15/2025  07:02 PM             2,278 client.crt\n03/15/2025  07:02 PM             3,292 client.key\n03/16/2025  07:06 AM               576 k8s-ca.crt\n\nAs you see I tried several things on top of k8s-ca.crt.\nI am not able to connect from python to milvus.\nThis is my code prototype:\nimport PyPDF2\nfrom ebooklib import epub, ITEM_DOCUMENT\nfrom bs4 import BeautifulSoup\n\nimport os\nimport sys\nimport grpc\nfrom pymilvus import MilvusClient, connections, Collection, CollectionSchema, FieldSchema, DataType, utility\n\n\nwith open(r\"C:\\CA\\k8s-ca.crt\", \"rb\") as f:\n    trusted_certs = f.read()\n\ncredentials = grpc.ssl_channel_credentials(root_certificates=trusted_certs)\n\nconnections.connect(\n    alias=\"default\",\n    uri=\"https://milvus.andrea-house.com\",  # Note: host and port only.\n    token=\"admin:Milvus\",\n    db_name=\"default\",\n    channel_credentials=credentials\n)\n\nclient = MilvusClient(\"default\")\n\ndef read_pdf(file_path):\n    \"\"\"Extract text from a PDF file.\"\"\"\n    text = \"\"\n    with open(file_path, \"rb\") as file:\n        pdf_reader = PyPDF2.PdfReader(file)\n        for page in pdf_reader.pages:\n            page_text = page.extract_text()\n            if page_text:\n                text += page_text + \"\\n\"\n    return text\n\ndef read_epub(file_path):\n    \"\"\"Extract text from an EPUB file.\"\"\"\n    book = epub.read_epub(file_path)\n    text = \"\"\n    for item in book.get_items():\n        # Only process document items\n        if item.get_type() == ITEM_DOCUMENT:\n            soup = BeautifulSoup(item.get_content(), features=\"html.parser\")\n            text += soup.get_text() + \"\\n\"\n    return text\n\ndef chunk_text(text, max_chunk_size=500):\n    \"\"\"\n    Split the text into chunks each with a maximum number of words.\n    Adjust max_chunk_size as needed.\n    \"\"\"\n    words = text.split()\n    chunks = []\n    for i in range(0, len(words), max_chunk_size):\n        chunk = \" \".join(words[i:i + max_chunk_size])\n        chunks.append(chunk)\n    return chunks\n\ndef create_milvus_collection(collection_name, dim):\n    \"\"\"\n    Create a Milvus collection with a given dimension if it doesn't exist.\n    The collection includes:\n      - An auto-generated primary key \"id\"\n      - A \"embedding\" field to store vector embeddings\n      - A \"text\" field to store the corresponding text chunk\n    \"\"\"\n    if utility.has_collection(collection_name):\n        collection = Collection(collection_name)\n        print(f\"Collection '{collection_name}' already exists.\")\n        return collection\n    else:\n        fields = [\n            FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=True),\n            FieldSchema(name=\"embedding\", dtype=DataType.FLOAT_VECTOR, dim=dim),\n            FieldSchema(name=\"text\", dtype=DataType.VARCHAR, max_length=65535)\n        ]\n        schema = CollectionSchema(fields, description=\"Book chunks and embeddings\")\n        collection = Collection(name=collection_name, schema=schema)\n        print(f\"Created collection '{collection_name}'.\")\n        return collection\n\ndef main(file_path):\n    # Determine file extension and extract text accordingly\n    ext = os.path.splitext(file_path)[1].lower()\n    if ext == \".pdf\":\n        book_text = read_pdf(file_path)\n    elif ext == \".epub\":\n        book_text = read_epub(file_path)\n    else:\n        print(\"Unsupported file format. Please provide a PDF or EPUB file.\")\n        return\n\n    if not book_text.strip():\n        print(\"No text was extracted from the file.\")\n        return\n\n    # Chunk the book text for manageable embedding generation\n    chunks = chunk_text(book_text, max_chunk_size=500)\n    print(f\"Extracted {len(chunks)} text chunks from the book.\")\n\n    # Load the sentence transformer model to generate embeddings\n    model = SentenceTransformer(\"all-MiniLM-L6-v2\")\n    embeddings = model.encode(chunks, convert_to_numpy=True)\n\n    # Connect to Milvus (update host/port if necessary)\n    connections.connect(\"default\", host=\"milvus.andrea-house.com\", port=\"443\")\n\n    # Create (or get) a collection named \"python\" with the proper embedding dimension\n    dim = embeddings.shape[1]\n    collection = create_milvus_collection(\"python\", dim)\n\n    # Prepare data for insertion; note that the auto_id field (\"id\") is skipped\n    data = [\n        embeddings.tolist(),  # embedding field\n        chunks                # text field\n    ]\n\n    # Insert data into the collection and flush to persist\n    insert_result = collection.insert(data)\n    collection.flush()\n    print(\"Data inserted into Milvus successfully.\")\n    print(f\"Insert result: {insert_result}\")\n\nif __name__ == \"__main__\":\n    if len(sys.argv) < 2:\n        print(\"Usage: python load_book.py <path_to_book>\")\n        sys.exit(1)\n    file_path = sys.argv[1]\n    main(file_path)\n\n\nThis is my error:\nTraceback (most recent call last):\n  File \"F:\\Test\\load_book.py\", line 16, in <module>\n    connections.connect(\n  File \"C:\\Python311\\Lib\\site-packages\\pymilvus\\orm\\connections.py\", line 390, in connect\n    kwargs_copy = copy.deepcopy(kwargs)\n                  ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n        ^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n                             ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n            ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n        ^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n                             ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python311\\Lib\\copy.py\", line 161, in deepcopy\n    rv = reductor(4)\n         ^^^^^^^^^^^\n  File \"<stringsource>\", line 2, in grpc._cython.cygrpc.SSLChannelCredentials.__reduce_cython__\nTypeError: no default __reduce__ due to non-trivial __cinit__\n\nI have been looking into encapsulating the connection and trying to disable deep copy.\nNo luck...\nThanks for looking at this.\nRegards\nAndrea\nExpected Behavior\nI should be able to connect to Milvus as I do from my browser\nSteps/Code To Reproduce behavior\nTry to connect to a Milvus instance running inside a kubernetes cluster using an airgapped environment \n\n\nEnvironment details\n- Hardware/Software conditions (OS, CPU, GPU, Memory): Kubernetes cluster for Milvus - Airgapped\n- Method of installation (Docker, or from source): - used \"milvus\" chart repository https://milvus.io/docs/install_cluster-helm.md\n- Milvus version (v0.3.1, or v0.4.0): 2.5.6\n- Milvus configuration (Settings you made in `server_config.yaml`): I swapped the ingress controller certificate with one I generated from andrea-ca.crt - I have andrea-ca.crt added to my trusted root authority in my windows system.\nAnything else?\nI am using Private CAs generated by CloudFlare CFSSL - https://github.com/cloudflare/cfssl\nNo response", "created_at": "2025-03-16", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "andreab67"}
{"issue_number": 2696, "issue_title": "[Bug]: Granting permissions has inconsistent behavior for '' and \"\"", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThis doesn't work:\n  client.grant_privilege_v2(\n      role_name=args.role_name,\n      privilege=\"CollectionAdmin\",\n      collection_name=\"*\",\n      db_name=\"default\",\n  )\n\n\nThis does:\n  client.grant_privilege_v2(\n      role_name=args.role_name,\n      privilege=\"CollectionAdmin\",\n      collection_name='*',\n      db_name='default',\n  )\n\nExpected Behavior\nI expect no difference in behavior for single and double quotes\nSteps/Code To Reproduce behavior\nSee description\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-14", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "ColeDearmon-Moore-at"}
{"issue_number": 2695, "issue_title": "[Bug]: On Milvus Lite filtering with AND or ARRAY_CONTAINS_ANY / ARRAY_CONTAINS_ALL not working", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nA user has observed what appear to be bugs in filtering conditions on Milvus Lite with Python 2.5.5.\nI have attached an example that contains an AND condition and a ARRAY_CONTAINS_ANY.\nThe AND filter is returning entities that don't match the filter, and ARRAY_CONTAINS_ANY and ARRAY_CONTAINS_ALL raise an Exception (see attached file).\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\nhttps://gist.github.com/stefanwebb/bb02969a0c3eb846659e41d39148ef8d\nEnvironment details\n\nAnything else?\nNo response", "created_at": "2025-03-14", "closed_at": "2025-04-14", "labels": ["kind/bug", "milvus-lite"], "State": "closed", "Author": "stefanwebb"}
{"issue_number": 2693, "issue_title": "[Bug]: Can't list_collections() as custom user", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen i list collection with function 'client.list_collection()', encountered a bug 'invalid auth token', but i has created 'user1' with all privileges(CollectionAdmin, DatabaseAdmin, ClusterAdmin). I can only list collection as root user. Is this a bug???\n['test2', 'test', 'demo_collection2']\n\n{'role': 'my_role1', 'privileges': [{'object_type': 'Global', 'object_name': '*', 'db_name': '*', 'role_name': 'my_role1', 'privilege': 'ClusterAdmin', 'grantor_name': 'root'}, {'object_type': 'Global', 'object_name': '*', 'db_name': 'my_database', 'role_name': 'my_role1', 'privilege': 'CollectionAdmin', 'grantor_name': 'root'}, {'object_type': 'Global', 'object_name': '*', 'db_name': 'my_database', 'role_name': 'my_role1', 'privilege': 'DatabaseAdmin', 'grantor_name': 'root'}]}\n2025-03-14 10:07:56,598 [ERROR][handler]: RPC error: [list_collections], <MilvusException: (code=65535, message=etcdserver: invalid auth token)>, <Time:{'RPC start': '2025-03-14 10:07:56.594711', 'RPC error': '2025-03-14 10:07:56.598875'}> (decorators.py:140)\nTraceback (most recent call last):\n  File \"C:\\major\\projectcode\\projectfile\\vscode\\FrameMark-Web\\framemarkAI\\milvus\\role\\role_manager.py\", line 46, in <module>\n    print(client.list_collections())\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 851, in list_collections\n    return conn.list_collections(**kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 141, in handler\n    raise e from e\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 137, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 176, in handler\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 116, in handler\n    raise e from e\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 86, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 413, in list_collections\n    check_status(status)\n  File \"C:\\major\\projectcode\\projectfile\\pythonProject\\FrameMark-Web\\framemarkAI\\.venv\\Lib\\site-packages\\pymilvus\\client\\utils.py\", line 64, in check_status\n    raise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=65535, message=etcdserver: invalid auth token)>\n\n\nExpected Behavior\nWhen i create a user1 with necessary privilege, i can list collections as user1\nSteps/Code To Reproduce behavior\ndef create_role(client):\n    user_name = \"user1\"\n    role_name = \"my_role1\"\n    # client.create_database(\"my_database\")\n    client.create_user(user_name=user_name, password=\"passwordformilvus\")\n    client.create_role(role_name=role_name)\n    client.grant_privilege_v2(\n        role_name=role_name,\n        db_name='my_database',\n        collection_name=\"*\",\n        privilege=\"CollectionAdmin\"\n    )\n    client.grant_privilege_v2(\n        role_name=role_name,\n        db_name='my_database',\n        collection_name=\"*\",\n        privilege=\"DatabaseAdmin\"\n    )\n    client.grant_privilege_v2(\n        role_name=role_name,\n        db_name='*',\n        collection_name=\"*\",\n        privilege=\"ClusterAdmin\"\n    )\n    client.grant_role(user_name=user_name, role_name=role_name)\n\n\nif __name__ == '__main__':\n    client = MilvusClient(uri=\"http://192.168.137.128:19530\",\n                          # token=\"root:Milvus\",\n                          token=\"user1:passwordformilvus\",\n                          db_name=\"my_database\")\n\n    # create_role(client)\n\n    print(client.describe_role(\"my_role1\"))\n\n    print(client.list_collections())\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory): windows11,AMD Ryzen 7 580oH with Radeon Graphics,3050ti laptop\n- Method of installation (Docker, or from source):docker\n- Milvus version (v0.3.1, or v0.4.0):milvus:v2.5.6\n- Milvus configuration (Settings you made in `server_config.yaml`):\nno server_config.yaml, there is only a user.yaml:\ncommon:\n        security:\n               authorizationEnabled: true\nAnything else?\nNo response", "created_at": "2025-03-14", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Lsnxiaoxiong"}
{"issue_number": 2691, "issue_title": "[FEATURE]: AsyncMilvusClient Missing has_collection() Method", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nDescription:\nWhen using pymilvus, I noticed that AsyncMilvusClient does not have the has_collection() method, whereas MilvusClient does.\nSteps to Reproduce:\nfrom pymilvus import AsyncMilvusClient\n\nclient = AsyncMilvusClient()\n# Attempting to check for a collection\nclient.has_collection(\"my_collection\")  # AttributeError: 'AsyncMilvusClient' object has no attribute 'has_collection'\nExpected Behavior:\nAsyncMilvusClient should have a has_collection() method similar to MilvusClient, or an equivalent alternative should be documented.\nEnvironment:\n\npymilvus version: 2.5.5\n\nAdditional Context:\nIs there an alternative way to check for collection existence in AsyncMilvusClient, or is this a missing feature?\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2025-03-12", "closed_at": null, "labels": ["kind/feature"], "State": "open", "Author": "SwAt1563"}
{"issue_number": 2688, "issue_title": "[Bug]: milvus_client.create_index do nothing if index_params={}", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nmilvus_client.create_index do nothing if index_params={}\nExpected Behavior\ncreate_index request shall be sent to milvus server even if index_params is empty\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-12", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "congqixia"}
{"issue_number": 2683, "issue_title": "[Bug]: Create database with invalid properties does not report error", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nCreate database with invalid properties does not report error\n[2025-03-07 17:30:05 - DEBUG - ci_test]: (api_request)  : [MilvusClient] args: ['http://10.102.7.216:19530', '', '', '', 'root:Milvus', None], kwargs: {} (api_request.py:52)\n[2025-03-07 17:30:05 - DEBUG - ci_test]: (api_response) : <pymilvus.milvus_client.milvus_client.MilvusClient object at 0x14b858580>  (api_request.py:27)\n[2025-03-07 17:30:05 - INFO - ci_test]: server version: 2.6.0-dev (client_v2_base.py:43)\n[2025-03-07 17:30:05 - DEBUG - ci_test]: (api_request)  : [MilvusClient.create_database] args: ['client_database_i5s2Zhgm', 'hhh'], kwargs: {} (api_request.py:52)\n[2025-03-07 17:30:05 - DEBUG - ci_test]: (api_response) : None  (api_request.py:27)\n\nExpected Behavior\nReport error\nSteps/Code To Reproduce behavior\n    @pytest.mark.tags(CaseLabel.L1)\n    @pytest.mark.parametrize(\"properties\", [\"hhh\", []])\n    def test_milvus_client_create_database_with_invalid_properties(self, properties):\n        \"\"\"\n        target: test fast create db name with invalid properties\n        method: create db name with invalid properties\n        expected: raise exception\n        actual: Currently such errors are not very readable, \n                and entries of numeric types such as 1.11, 111 are not blocked\n        \"\"\"\n        client = self._client()\n        # 1. create database\n        db_name = cf.gen_unique_str(db_prefix)\n        error = {ct.err_code: 1, ct.err_msg: f\"Unexpected error, message=<unsupported operand type(s) for +: 'float' and '{type(properties).__name__}'>\"}\n        self.create_database(client, db_name, properties,\n                             check_task=CheckTasks.err_res, check_items=error)\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`): master-latest\n- Pymilvus version: 2.6.0rc84\nAnything else?\nNo response", "created_at": "2025-03-07", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "binbinlv"}
{"issue_number": 2682, "issue_title": "[Enhancement]: Milvus_client lacks interfaces", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nhttps://github.com/milvus-io/pymilvus/blame/master/pymilvus/milvus_client/milvus_client.py\nImport, GetFlushState, GetLoadingProgress are not found.\nThese are contained in privilege_groups.\n\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2025-03-07", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "NicoYuan1986"}
{"issue_number": 2681, "issue_title": "[Bug]: hybrid search, SequenceIterator is not iterable.", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nUsing python 3.13, when doing hybrid search based on your tutorial, when using the following code:\ndef hybrid_search(\n            self,\n            query_dense_embedding,\n            query_sparse_embedding,\n            sparse_weight=1.0,\n            dense_weight=1.0,\n            limit=10,\n    ):\n        dense_search_params = {\"metric_type\": \"IP\"}\n        dense_req = AnnSearchRequest(\n            [query_dense_embedding], \"dense_vector\",param=dense_search_params, limit=limit\n        )\n        sparse_search_params = {\"metric_type\": \"IP\"}\n        sparse_req = AnnSearchRequest(\n            [query_sparse_embedding], \"sparse_vector\", param=sparse_search_params, limit=limit\n        )\n        print('sparse_req', sparse_req)\n        print('dense_req', dense_req)\n        rerank = WeightedRanker(sparse_weight, dense_weight)\n        res = self.client.hybrid_search(\n            self.collection_name,[sparse_req, dense_req], ranker=rerank, limit=limit, output_fields=[\"text\"]\n        )[0]\n\nI encountered this error:\nFile \"/Users/benjamin/Library/Caches/pypoetry/virtualenvs/fastapiproject-Eg8zujTM-py3.13/lib/python3.13/site-packages/pymilvus/milvus_client/milvus_client.py\", line 360, in hybrid_search\n    ret.append([hit.to_dict() for hit in hits])\n                                         ^^^^\nTypeError: 'SequenceIterator' object is not iterable\n\n\nAlso running examples/hybrid_search.py you could reproduce.\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-05", "closed_at": "2025-03-05", "labels": ["kind/bug"], "State": "closed", "Author": "Benjacho"}
{"issue_number": 2676, "issue_title": "[FEATURE]: Enable to create index on dynamic field", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nIs your feature request related to a problem? Please describe.\nSee also: milvus-io/milvus#35528\nThis check may not needed at all, just use checks from proxy. \n\n\npymilvus/pymilvus/client/grpc_handler.py\n\n\n         Line 1038\n      in\n      af2f6df\n\n\n\n\n\n\n for fields in collection_desc[\"fields\"]: \n\n\n\n\n\nDescribe the solution you'd like\nNo response\nDescribe alternatives you've considered\nNo response\nAnything else?\nNo response", "created_at": "2025-03-03", "closed_at": "2025-03-17", "labels": ["kind/feature"], "State": "closed", "Author": "XuanYang-cn"}
{"issue_number": 2675, "issue_title": "[QUESTION]: Why the TextMatch search don\u00b4t work in my project", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI add to my project in Milvus search a filter with \"TEXT_MATCH(page,content, '{word}')\" for word in key\nBut when I try to search for a specific word returns entites that dont have the word.\n# Define search parameters\nsearch_params = {\"metric_type\": \"COSINE\", \"params\": {\"nprobe\": 50}}\ntop_k = 20\n\n# Define filter parameters\nkey = get_keywords(query_text)\nfilter_parms = \" or \".join([f\"TEXT_MATCH(page_content, '{word}')\" for word in key])\nprint(filter_parms)\n\nreturn collection.search(\n    data=query_embedding,\n    anns_field=\"embeddings\",\n    #partition_names=[particion_post_name,particion_opi_name],\n    partition_names=[particion_post_name],\n    filter=filter_parms,\n    param=search_params,\n    limit=top_k,\n    output_fields=[\"metadata\", \"page_content\"],\n)\n\nAnything else?\nNo response", "created_at": "2025-02-28", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "GBrochado"}
{"issue_number": 2674, "issue_title": "[QUESTION]: I am getting grpc.aio._call.AioRpcError when sending concurrent load_partitions requests", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI use pymilvus 2.5.4 and a Milvus cluster the same version.\nWhen I have several concurrent requests to load a partition from the async client I get the following:\nFile \"/usr/local/lib/python3.12/site-packages/mle_utilities/persistence/milvus/async_sharded_vectorstore.py\", line 298, in _load_partition\n    await self.async_client.load_partitions(collection_name=collection_name, partition_names=[partition_name])\n  File \"/usr/local/lib/python3.12/site-packages/pymilvus/milvus_client/async_milvus_client.py\", line 243, in load_partitions\n    await conn.load_partitions(collection_name, partition_names, timeout=timeout, **kwargs)\n  File \"/usr/local/lib/python3.12/site-packages/pymilvus/client/async_grpc_handler.py\", line 828, in load_partitions\n    response = await self._async_stub.LoadPartitions(request, timeout=timeout)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/grpc/aio/_interceptor.py\", line 472, in __await__\n    response = yield from call.__await__()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/grpc/aio/_call.py\", line 327, in __await__\n    raise _create_rpc_error(\ngrpc.aio._call.AioRpcError: <AioRpcError of RPC that terminated with:\n\tstatus = StatusCode.UNAVAILABLE\n\tdetails = \"recvmsg:Connection reset by peer\"\n\tdebug_error_string = \"UNKNOWN:Error received from peer  {created_time:\"2025-02-27T09:02:32.243883236+00:00\", grpc_status:14, grpc_message:\"recvmsg:Connection reset by peer\"}\"\n>\n\nWhat might be the reason? Should I just retry until it passes? I see no issues with my milvus cluster.\nAnything else?\nNo response", "created_at": "2025-02-27", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "mihailyanchev"}
{"issue_number": 2750, "issue_title": "[QUESTION]: used AsyncMilvusClient in FastAPI", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nused AsyncMilvusClient in FastAPI?\nAnything else?\nfastapi:\"gunicorn\", \"main:app\", \"-k\", \"uvicorn.workers.UvicornWorker\", \"--bind\", \"0.0.0.0:9088\",\"--workers\", \"4\",\"--threads\",\"2\",\"--timeout\",\"2000\",\"--capture-output\"\nRuntimeError: Task <Task pending name='Task-3' coro=<RequestResponseCycle.run_asgi() running at /usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py:409> cb=[set.discard()]> got Future  attached to a different loop", "created_at": "2025-04-24", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "liubaiand"}
{"issue_number": 2749, "issue_title": "[Bug]: Move of SearchResult in #2735 breaks `import pymilvus.client.abstract.SearchResult`", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen the class was moved to a different model (the misspelled search_reasult module), there was no alias left behind in pymilvus.client.abstract so that code importing from the original module still works.\nlangchain_milvus is now broken.\nExpected Behavior\npymilvus.client.abstract should include\nfrom .search_reasult import Hit, Hits, SearchResult\nTo enable existing code to still function.\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-04-23", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "bjhargrave"}
{"issue_number": 2743, "issue_title": "[QUESTION]: milvus already supports 'Text' field type - how can I add such support to the pymilvus?", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat is your question?\nI had tried to add it to class DataType in schema_pb2 in grpc_gen with no success.\nAnything else?\nNo response", "created_at": "2025-04-22", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "liorf95"}
{"issue_number": 2732, "issue_title": "[Bug]:", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThe log keeps continuously refreshing the warning message [WARN] [dateoookd/metago 421] [not found database name] without stopping. The dataset cannot be loaded, and all operations such as data retrieval and insertion cannot be performed.\n\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-04-17", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "Z-thirty"}
{"issue_number": 2727, "issue_title": "[Bug]: if db_name is passed as a path in the uri it is overwritten with empty string", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nThis is related to this issue and its fix, which I implemented.\nThe original issue is fixed, but the fix introduces another bug - if you pass a uri to the MilvusClient or AsyncMilvusClient that contains the db_name as a path (http://localhost:19530/test_db) and you do not explicitly pass the db_name argument, it will get overwritten with an empty string.\nThe issue is here in this line: https://github.com/milvus-io/pymilvus/blob/master/pymilvus/orm/connections.py#L458\nwe should have group[0] instead of group[1].\nSorry for overlooking this.\nExpected Behavior\nWhen you pass the db_name as a path in the uri and not as an explicit argument, the client should connect to the provided db_name.\nSteps/Code To Reproduce behavior\n\"\"\"\nPut a break point here and check the value of group: https://github.com/milvus-io/pymilvus/blob/master/pymilvus/orm/connections.py#L458\n\"\"\"\n\nimport asyncio\n\nfrom pymilvus import AsyncMilvusClient\n\n\nasync def main():\n    _ = AsyncMilvusClient(\n        uri=\"http://localhost:19530/test_db\",\n    )\n\n\nasyncio.run(main())\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0): 2.5.6\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-04-15", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "mihailyanchev"}
{"issue_number": 2724, "issue_title": "[Enhancement]: pkg_resources is deprecated", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\npkg_resources is deprecated and can be replaced by importlib (which also has a backport importlib_resources, importlib_metadata).\nBecause pkg_resources is deprecated, a warning is raised every time you import the module.\n  ***/.venv/lib/python3.13/site-packages/pymilvus/client/__init__.py:6: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\n    from pkg_resources import DistributionNotFound, get_distribution\nWhy is this needed?\nNo response\nAnything else?\n\u276f uv pip list | grep pymilvus\npymilvus                 2.4.15\n\u276f uv run python --version\nPython 3.13.2", "created_at": "2025-04-12", "closed_at": "2025-04-14", "labels": ["kind/enhancement"], "State": "closed", "Author": "phi-friday"}
{"issue_number": 2723, "issue_title": "[Bug]: <MilvusException: (code=1100, message=only IP is the supported metric type for sparse index: invalid parameter[expected=valid index params][actual=invalid index params])>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\u53c2\u8003\u8fd9\u7bc7\u6587\u6863\u7684 collection\u6784\u5efa\u65b9\u6cd5\uff0chttps://milvus.io/docs/zh/multi-vector-search.md\npython \u7248\u672c 3.11\uff0cpymilvus\u7248\u672c 2.5.5\uff0cmilvus \u670d\u52a1\u7aef\u7248\u672c v2.4.10\n\u4e0b\u9762\u662f\u6211\u7684code:\ndef create_collection():\nmilvus_client = MilvusClient(\nuri=settings.AIOPS_MILVUS_DB_URL,\nuser=settings.AIOPS_MILVUS_DB_USER,\npassword=settings.AIOPS_MILVUS_DB_PASSWORD,\ndb_name=settings.AIOPS_MILVUS_DB_NAME\n)\ncollection_name = \"aiops_hybrid\"\nhas_collection = milvus_client.has_collection(collection_name, timeout=5)\nif has_collection:\nprint(\"\u26a0\ufe0f An existing collection was found and is being deleted...\")\nmilvus_client.drop_collection(collection_name)\nprint(\"\u2705 Old collection deleted!\")\n# create schema\nschema = milvus_client.create_schema()\nschema.add_field(\"pk\", DataType.INT64, is_primary=True, auto_id=True)\nschema.add_field(\"text\", DataType.VARCHAR, max_length=65535, enable_analyzer=True)\nschema.add_field(\"dense_vector\", DataType.FLOAT_VECTOR, dim=1536)\nschema.add_field(\"sparse_vector\", DataType.SPARSE_FLOAT_VECTOR)\nschema.add_field(\"id\", DataType.VARCHAR, max_length=512)\nschema.add_field(\"title\", DataType.VARCHAR, max_length=512)\nschema.add_field(\"url\", DataType.VARCHAR, max_length=512)\nschema.add_field(\"chunk_index\", DataType.INT64)\n\nbm25_function = Function(\n    name=\"bm25_fn\",\n    input_field_names=[\"text\"],\n    output_field_names=[\"sparse_vector\"],\n    function_type=FunctionType.BM25,\n)\nschema.add_function(bm25_function)\n# create index\nindex_params = milvus_client.prepare_index_params()\nindex_params.add_index(\n    field_name=\"dense_vector\",\n    index_name=\"dense_index\",\n    index_type=\"IVF_FLAT\",\n    metric_type=\"IP\",\n    params={\"nlist\": 128},\n)\nindex_params.add_index(\n    field_name=\"sparse_vector\",\n    index_name=\"sparse_index\",\n    index_type=\"SPARSE_INVERTED_INDEX\",\n    metric_type=\"BM25\",\n    params={\"bm25_k1\": 1.2, \"bm25_b\": 0.75},\n)\nmilvus_client.create_collection(collection_name, schema=schema, index_params=index_params,\n                                consistency_level=\"Strong\")\nprint(f\"create collection successfully!\")\n\n\u6267\u884c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u65f6\u5019\u62a5\u9519\n2025-04-09 12:27:52,312 [ERROR][handler]: RPC error: [create_index], <MilvusException: (code=1100, message=only IP is the supported metric type for sparse index: invalid parameter[expected=valid index params][actual=invalid index params])>, <Time:{'RPC start': '2025-04-09 12:27:51.960388', 'RPC error': '2025-04-09 12:27:52.312790'}> (decorators.py:140)\n2025-04-09 12:27:52,313 [ERROR][_create_index]: Failed to create an index on collection: aiops_hybrid (milvus_client.py:183)\nTraceback (most recent call last):\nFile \"C:\\Code\\aiops\\insert_milvus_multi.py\", line 123, in \ncreate_collection()\nFile \"C:\\Code\\aiops\\insert_milvus_multi.py\", line 60, in create_collection\nmilvus_client.create_collection(collection_name, schema=schema, index_params=index_params,\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 99, in create_collection\nreturn self._create_collection_with_schema(\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 899, in _create_collection_with_schema\nself.create_index(collection_name, index_params, timeout=timeout)\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 162, in create_index\nself._create_index(collection_name, index_param, timeout=timeout, **kwargs)\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 184, in _create_index\nraise ex from ex\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 173, in _create_index\nconn.create_index(\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 141, in handler\nraise e from e\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 137, in handler\nreturn func(*args, **kwargs)\n^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 176, in handler\nreturn func(self, *args, **kwargs)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 116, in handler\nraise e from e\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\decorators.py\", line 86, in handler\nreturn func(*args, **kwargs)\n^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 1083, in create_index\ncheck_status(status)\nFile \"C:\\Code\\aiops.venv\\Lib\\site-packages\\pymilvus\\client\\utils.py\", line 64, in check_status\nraise MilvusException(status.code, status.reason, status.error_code)\npymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=only IP is the supported metric type for sparse index: invalid parameter[expected=valid index params][actual=invalid index params])>\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-04-09", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "369699269"}
{"issue_number": 2715, "issue_title": "[Bug]: Cannot create connections to  different milvus instances", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\nWhen I try to create two connections to separate instances of milvus, in the same execution, I get errors.\nExpected Behavior\nI expect to be able to make both connections successfully.\nSteps/Code To Reproduce behavior\nWhen I execute the following code:\nimport uuid\nfrom pymilvus import (\n    MilvusClient,\n    connections\n)\n\na_name = str(uuid.uuid4())[:8]\ncollection_name = \"test_collection\"\nmilvus_uri = \"http://milvus:19530\"\nconnections.connect(alias=a_name, uri=milvus_uri)\nclient_1 = MilvusClient(milvus_uri, alias=a_name)\n\na_name = str(uuid.uuid4())[:8]\ncollection_name = \"test_collection\"\nmilvus_uri = \"http://10.57.202.36:19530\"\nconnections.connect(alias=a_name, uri=milvus_uri)\nclient_2 = MilvusClient(milvus_uri, alias=a_name)\n\nI get this error:\nTraceback (most recent call last):\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/pdb.py\", line 1723, in main\n    pdb._runscript(mainpyfile)\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/pdb.py\", line 1583, in _runscript\n    self.run(statement)\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/bdb.py\", line 598, in run\n    exec(cmd, globals, locals)\n  File \"<string>\", line 1, in <module>\n  File \"/raid/workspace/nv-ingest/client/client_examples/examples/index_test.py\", line 12, in <module>\n    client_1 = MilvusClient(milvus_uri, alias=a_name)\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 66, in __init__\n    self._using = self._create_connection(\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 921, in _create_connection\n    raise ex from ex\n  File \"/opt/conda/envs/nv_ingest_runtime/lib/python3.10/site-packages/pymilvus/milvus_client/milvus_client.py\", line 918, in _create_connection\n    connections.connect(using, user, password, db_name, token, uri=uri, **kwargs)\nTypeError: Connections.connect() got multiple values for argument 'alias'\n\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-31", "closed_at": null, "labels": ["kind/question"], "State": "open", "Author": "jperez999"}
{"issue_number": 2711, "issue_title": "[Enhancement]: Optimize SDK documentation description", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nWhat would you like to be added?\nThere are no specific instructions from the official source regarding usage restrictions of the SDK. This can be confusing for users trying to determine in which exact version a feature is available. For example, with the inverted index for JSON, one might think it\u2019s available in version 2.5.x based on the official documentation, whereas it actually requires version 2.5.7\nA specific version should be specified here, for example Available since: v2.5.7\n\n\nWhy is this needed?\nNo response\nAnything else?\nNo response", "created_at": "2025-03-28", "closed_at": null, "labels": ["kind/enhancement"], "State": "open", "Author": "groobyming"}
{"issue_number": 2710, "issue_title": "[Bug]: https://milvus.io/docs/zh/use-json-fields.md \u6587\u6863\u6709\u8bef\uff0c\u5e76\u4e14pymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=INVERTED are not supported on JSON field: invalid parameter[expected=valid index params][actual=invalid index params])>", "issue_body": "Is there an existing issue for this?\n\n I have searched the existing issues\n\nDescribe the bug\n\u6587\u6863\u4e2d\n**index_params = client.prepare_index_params()**\n\nindex_params.add_index(\n    field_name=\"metadata\",\n    index_type=\"INVERTED\",\n    index_name=\"json_index_1\",\n    params={\n        \"json_path\": \"metadata[\\\"product_info\\\"][\\\"category\\\"]\",\n        \"json_cast_type\": \"varchar\"\n    }\n)\n\nindex_params.add_index(\n    field_name=\"metadata\",\n    index_type=\"INVERTED\",\n    index_name=\"json_index_2\",\n    params={\n        \"json_path\": \"metadata[\\\"price\\\"]\",\n        \"json_cast_type\": \"double\"\n    }\n)\n\n**index_params = client.prepare_index_params()**\n\nindex_params.add_index(\n    field_name=\"embedding\",\n    index_name=\"vector_index\",\n    index_type=\"AUTOINDEX\",  # Use automatic indexing to simplify complex index settings\n    metric_type=\"COSINE\"  # Specify similarity metric type, options include L2, COSINE, or IP\n)\n\n\u8fd9\u91ccindex_params = client.prepare_index_params() \u5b9a\u4e49\u4e86\u4e24\u6b21\uff0c\u4e4b\u524d\u5b9a\u4e49JSON INDEX \u88ab\u91cd\u65b0\u521d\u59cb\u5316\u4e86\uff0c\u8fd9\u91cc\u53ea\u6709\u4e00\u4e2aembedding \u7684 AUTOINDEX\n\u5e76\u4e14\u5982\u679c \u53bb\u6389\u591a\u4f59\u7684index_params = client.prepare_index_params() \uff0c\u6267\u884c\u4f1a\u62a5\u9519pymilvus.exceptions.MilvusException: <MilvusException: (code=1100, message=INVERTED are not supported on JSON field: invalid parameter[expected=valid index params][actual=invalid index params])>\nExpected Behavior\nNo response\nSteps/Code To Reproduce behavior\n\nEnvironment details\n- Hardware/Softward conditions (OS, CPU, GPU, Memory):\n- Method of installation (Docker, or from source):\n- Milvus version (v0.3.1, or v0.4.0):\n- Milvus configuration (Settings you made in `server_config.yaml`):\nAnything else?\nNo response", "created_at": "2025-03-27", "closed_at": null, "labels": ["kind/bug"], "State": "open", "Author": "deku0818"}
